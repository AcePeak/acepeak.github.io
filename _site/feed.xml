<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:content="http://purl.org/rss/1.0/modules/content/"
  xmlns:wfw="http://wellformedweb.org/CommentAPI/"
  xmlns:dc="http://purl.org/dc/elements/1.1/"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
  xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
  >
  <channel>
    <title xml:lang="en">西山居士</title>
    <atom:link type="application/atom+xml" href="http://jekyllrb.com/feed.xml" rel="self"/>
    <link>http://lilifeng.net/</link>
    <pubDate>Tue, 12 Apr 2016 13:37:19 +0800</pubDate>
    <lastBuildDate>Tue, 12 Apr 2016 13:37:19 +0800</lastBuildDate>
    <language>cn-CH</language>
    <generator>Jekyll v3.1.2</generator>
    <description>巍巍乎志在高山 洋洋乎志在流水</description>
    <image>
      <description>巍巍乎志在高山 洋洋乎志在流水</description>
      <url>http://lilifeng.net/img/thumbnail.png</url>
      <title>西山居士</title>
      <link>http://lilifeng.net/</link>
      <width>456</width>
      <height>545</height>
    </image>
    
    <item>
      <title>Linux模块机制浅析</title>
      <link>http://lilifeng.net/blogs/2016/04/12/linux-module-load/</link>
      <pubDate>Tue, 12 Apr 2016 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>linux</category>
      
      <category>c++</category>
      
      
      <category>Internet</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2016/04/12/linux-module-load/</guid>
      <description>&lt;p&gt;Linux允许用户通过插入模块，实现干预内核的目的。一直以来，对linux的模块机制都不够清晰，因此本文对内核模块的加载机制进行简单地分析。&lt;/p&gt;

&lt;p&gt;`模块的Hello World！&lt;/p&gt;

&lt;p&gt;我们通过创建一个简单的模块进行测试。首先是源文件main.c和Makefile。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;n&quot;&gt;florian&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;florian&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:~/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#include&amp;lt;linux/module.h&amp;gt;
#include&amp;lt;linux/init.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__init&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;printk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hi module!&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__exit&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;printk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Bye module!&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;module_init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;module_exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;其中init为模块入口函数，在模块加载时被调用执行，exit为模块出口函数，在模块卸载被调用执行。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;florian@florian-pc:~/module$ &lt;/span&gt;cat Makefile
obj-m +&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; main.o
&lt;span class=&quot;c&quot;&gt;#generate the path&lt;/span&gt;
CURRENT_PATH:&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;shell &lt;span class=&quot;nb&quot;&gt;pwd&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#the current kernel version number&lt;/span&gt;
LINUX_KERNEL:&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;shell uname -r&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#the absolute path&lt;/span&gt;
LINUX_KERNEL_PATH:&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/src/linux-headers-&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;LINUX_KERNEL&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#complie object&lt;/span&gt;
all:
    make -C &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;LINUXKERNELPATH&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;M&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;CURRENT_PATH&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; modules
&lt;span class=&quot;c&quot;&gt;#clean&lt;/span&gt;
clean:
    make -C &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;LINUXKERNELPATH&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;M&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;CURRENT_PATH&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; clean&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;其中，obj-m指定了目标文件的名称，文件名需要和源文件名相同（扩展名除外），以便于make自动推导。&lt;/p&gt;

&lt;p&gt;然后使用make命令编译模块，得到模块文件main.ko。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;florian@florian-pc:~/module$ &lt;/span&gt;make
make -C /usr/src/linux-headers-2.6.35-22-generic &lt;span class=&quot;nv&quot;&gt;M&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/home/florian/module modules
make[1]: 正在进入目录 &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;/usr/src/linux-headers-2.6.35-22-generic&lt;span class=&quot;s1&quot;&gt;&#39;
  Building modules, stage 2.
  MODPOST 1 modules
make[1]:正在离开目录 `/usr/src/linux-headers-2.6.35-22-generic&#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;使用insmod和rmmod命令对模块进行加载和卸载操作，并使用dmesg打印内核日志。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;florian@florian-pc:~/module$ &lt;/span&gt;sudo insmod main.ko;dmesg | tail -1
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;31077.810049] Hi module!

&lt;span class=&quot;gp&quot;&gt;florian@florian-pc:~/module$ &lt;/span&gt;sudo rmmod main.ko;dmesg | tail -1
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;31078.960442] Bye module!&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;通过内核日志信息，可以看出模块的入口函数和出口函数都被正确调用执行。&lt;/p&gt;

&lt;p&gt;模块文件&lt;/p&gt;

&lt;p&gt;使用readelf命令查看一下模块文件main.ko的信息。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;florian@florian-pc:~/module$ &lt;/span&gt;readelf -h main.ko
ELF Header:
  Magic:   7f 45 4c 46 01 01 01 00 00 00 00 00 00 00 00 00
  Class:                             ELF32
  Data:                              2&lt;span class=&quot;s1&quot;&gt;&#39;s complement, little endian
  Version:                           1 (current)
  OS/ABI:                            UNIX - System V
  ABI Version:                       0
  Type:                              REL (Relocatable file)
  Machine:                           Intel 80386
  Version:                           0x1
  Entry point address:               0x0
  Start of program headers:          0 (bytes into file)
  Start of section headers:          1120 (bytes into file)
  Flags:                             0x0
  Size of this header:               52 (bytes)
  Size of program headers:           0 (bytes)
  Number of program headers:         0
  Size of section headers:           40 (bytes)
  Number of section headers:         19
  Section header string table index: 16&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;我们发现main.ko的文件类型为可重定位目标文件，这和一般的目标文件格式没有任何区别。我们知道，目标文件是不能直接执行的，它需要经过链接器的地址空间分配、符号解析和重定位的过程，转化为可执行文件才能执行。&lt;/p&gt;

&lt;p&gt;那么，内核将main.ko加载后，是否对其进行了链接呢？&lt;/p&gt;

&lt;p&gt;模块数据结构&lt;/p&gt;

&lt;p&gt;首先，我们了解一下模块的内核数据结构。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;n&quot;&gt;linux3&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;.5.2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kernel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;220&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;module&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;err&quot;&gt;……&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/* Startup function. */&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;err&quot;&gt;……&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/* Destruction function. */&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;err&quot;&gt;……&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;模块数据结构的init和exit函数指针记录了我们定义的模块入口函数和出口函数。&lt;/p&gt;

&lt;p&gt;模块加载&lt;/p&gt;

&lt;p&gt;模块加载由内核的系统调用init_module完成。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;n&quot;&gt;linux3&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;.5.2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kernel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3009&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;/* This is where the real work happens */&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;SYSCALL_DEFINE3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;init_module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;umod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uargs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ret&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;err&quot;&gt;……&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/* Do all the hard work */&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;mod&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;load_module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;umod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uargs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//模块加载
&lt;/span&gt;    &lt;span class=&quot;err&quot;&gt;……&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/* Start the module */&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;init&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;ret&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;do_one_initcall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//模块init函数调用
&lt;/span&gt;    &lt;span class=&quot;err&quot;&gt;……&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;系统调用init_module由SYSCALL_DEFINE3(init_module…)实现，其中有两个关键的函数调用。load_module用于模块加载，do_one_initcall用于回调模块的init函数。&lt;/p&gt;

&lt;p&gt;函数load_module的实现为。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;n&quot;&gt;linux3&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;.5.2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kernel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2864&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;/* Allocate and load the module: note that size of section 0 is always
   zero, and we rely on this for optional sections. */&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;load_module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;umod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uargs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;load_info&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;info&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;err&quot;&gt;……&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/* Copy in the blobs from userspace, check they are vaguely sane. */&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;copy_and_check&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;umod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uargs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//拷贝到内核
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
       &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ERR_PTR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/* Figure out module layout, and allocate all the memory. */&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;mod&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;layout_and_allocate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//地址空间分配
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IS_ERR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PTR_ERR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
       &lt;span class=&quot;k&quot;&gt;goto&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;free_copy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;err&quot;&gt;……&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/* Fix up syms, so that st_value is a pointer to location. */&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;simplify_symbols&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//符号解析
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
       &lt;span class=&quot;k&quot;&gt;goto&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;free_modinfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;apply_relocations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//重定位
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
       &lt;span class=&quot;k&quot;&gt;goto&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;free_modinfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;err&quot;&gt;……&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;函数load_module内有四个关键的函数调用。copy_and_check将模块从用户空间拷贝到内核空间，layout_and_allocate为模块进行地址空间分配，simplify_symbols为模块进行符号解析，apply_relocations为模块进行重定位。&lt;/p&gt;

&lt;p&gt;由此可见，模块加载时，内核为模块文件main.ko进行了链接的过程！&lt;/p&gt;

&lt;p&gt;至于函数do_one_initcall的实现就比较简单了。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;n&quot;&gt;linux3&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;.5.2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kernel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;673&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__init_or_module&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;do_one_initcall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;initcall_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;preempt_count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ret&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;initcall_debug&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;ret&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;do_one_initcall_debug&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;ret&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//调用init module
&lt;/span&gt;    &lt;span class=&quot;err&quot;&gt;……&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ret&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;即调用了模块的入口函数init。&lt;/p&gt;

&lt;p&gt;模块卸载&lt;/p&gt;

&lt;p&gt;模块卸载由内核的系统调用delete_module完成。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;n&quot;&gt;linux3&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;.5.2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kernel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;768&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;SYSCALL_DEFINE2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;delete_module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name_user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MODULE_NAME_LEN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ret&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;forced&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;err&quot;&gt;……&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/* Final destruction now no one is using it. */&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;mod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//调用exit module
&lt;/span&gt;    &lt;span class=&quot;err&quot;&gt;……&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;free_module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//卸载模块
&lt;/span&gt;    &lt;span class=&quot;err&quot;&gt;……&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;通过回调exit完成模块的出口函数功能，最后调用free_module将模块卸载。&lt;/p&gt;

&lt;p&gt;结论&lt;/p&gt;

&lt;p&gt;如此看来，内核模块其实并不神秘。传统的用户程序需要编译为可执行程序才能执行，而模块程序只需要编译为目标文件的形式便可以加载到内核，有内核实现模块的链接，将之转化为可执行代码。同时，在内核加载和卸载的过程中，会通过函数回调用户定义的模块入口函数和模块出口函数，实现相应的功能。&lt;/p&gt;

&lt;p&gt;参考资料&lt;/p&gt;

&lt;p&gt;http://hi.baidu.com/20065562/item/15dcc4ce92c3d510b67a24af&lt;/p&gt;

&lt;p&gt;http://blog.chinaunix.net/uid-26009923-id-3840337.html&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>技术管理的技术与艺术</title>
      <link>http://lilifeng.net/blogs/2016/03/07/devteam-manage-art/</link>
      <pubDate>Mon, 07 Mar 2016 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>管理</category>
      
      
      <category>广告平台</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2016/03/07/devteam-manage-art/</guid>
      <description>&lt;p&gt;1 让每个人负责一块独立功能不如leader负责主体设计，member负责模块设计+具体实现并对主体设计挑刺&lt;/p&gt;

&lt;p&gt;每个人负责自己的独立功能会造成大家并不一起参与，所以有的人早早离开或者总是用不到，有的人还要拼命加班看到别人早早离开心里也不舒服；&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>微信朋友圈广告投放说明</title>
      <link>http://lilifeng.net/blogs/2016/01/12/wechat-native-ad/</link>
      <pubDate>Tue, 12 Jan 2016 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>DSP</category>
      
      
      <category>广告平台</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2016/01/12/wechat-native-ad/</guid>
      <description>&lt;p&gt;微信朋友圈广告是基于微信公众号生态体系，以类似朋友的原创内容形式在用户朋友圈进行展示的原生广告。相信大家在朋友圈也没少见，不过据我了解很多人都是一听说微信朋友圈广告，就觉得肯定价格会非常非常高，根本做不起，只有顶级的公司才会做。&lt;/p&gt;

&lt;p&gt;真实这样吗？其实朋友圈广告出来到现在已经多次降价了，现在又降了。&lt;/p&gt;

&lt;p&gt;2016年Q1微信朋友圈广告招商合作政策发布：调整了微信朋友圈广告投放门槛，并正式发布朋友圈视频广告及其收费标准。&lt;/p&gt;

&lt;p&gt;一、调整门槛，创造更多与中小客户的合作空间&lt;/p&gt;

&lt;p&gt;首先，朋友圈广告投放门槛由20万元/条调整至5万元/条，并进一步降低“查看详情”页的制作门槛：在广告投放端为客户提供多样化的H5页面模板，帮助广告主提升广告素材质量和制作效率。&lt;/p&gt;

&lt;p&gt;调整后不同投放门槛的服务标准如下表所示：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/160112_1.jpg&quot; alt=&quot;不同投放门槛的服务标准&quot; /&gt;&lt;/p&gt;

&lt;p&gt;二、丰富产品形态，正式发布朋友圈视频广告&lt;/p&gt;

&lt;p&gt;最新发布的朋友圈视频广告支持通过动态视频传达广告创意，表现手段更加丰富、直接、有效。视频广告收费标准为：核心城市180元/千次曝光，重点城市120元/千次曝光，普通城市60元/千次曝光。&lt;/p&gt;

&lt;p&gt;调整后朋友圈广告详细收费标准如下表所示：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/160112_2.jpg&quot; alt=&quot;广告详细收费标准&quot; /&gt;&lt;/p&gt;

&lt;p&gt;那么，微信朋友圈广告到底是什么样的？&lt;/p&gt;

&lt;p&gt;闲着也是闲着，我们一起更全面的了解一下。&lt;/p&gt;

&lt;p&gt;一、已开放微信朋友圈广告的行业类目&lt;/p&gt;

&lt;p&gt;朋友圈广告当前已开放14个一级行业类目，只需要符合朋友圈广告准入行业要求，并具备5万元以上的推广预算，即可投放朋友圈广告。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/160112_3.jpg&quot; alt=&quot;已开放行业类目&quot; /&gt;&lt;/p&gt;

&lt;p&gt;二、微信朋友圈广告形态&lt;/p&gt;

&lt;p&gt;朋友圈图文广告&lt;/p&gt;

&lt;p&gt;朋友圈图文广告由五个部分的内容构成，包含广告主头像&amp;amp;名称、外层文案、外层图片、“查看详情”链接详情页、用户社交互动等。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/160112_4.jpg&quot; alt=&quot;朋友圈图文广告组成&quot; /&gt;&lt;/p&gt;

&lt;p&gt;1.广告主头像&amp;amp;名称&lt;/p&gt;

&lt;p&gt;拉取投放广告的广告主公众号的头像&amp;amp;名称，用户点击可直接跳转广告主公众号介绍页。&lt;/p&gt;

&lt;p&gt;2.外层文案&lt;/p&gt;

&lt;p&gt;广告外显创意非常重要的一部分，文案应当简洁、友好、易理解，字数限不超过40个字，不超过4行。&lt;/p&gt;

&lt;p&gt;3.外层图片&lt;/p&gt;

&lt;p&gt;广告创意直接触达用户的重要组成部分，用于通过丰富的视觉元素阐述创意，支持配置1张、3张、4张或者6张图片。&lt;/p&gt;

&lt;p&gt;4.“查看详情”链接详情页&lt;/p&gt;

&lt;p&gt;详细描述广告创意，进一步向感兴趣的用户传递诉求的重要部分。查看详情页支持跳转公众号图文消息或者自定义H5页面，“查看详情”文字链支持更多选择：查看详情、下载应用、预约活动等。&lt;/p&gt;

&lt;p&gt;5.用户社交互动&lt;/p&gt;

&lt;p&gt;允许用户对广告创意进行点赞和评论，让用户“参与”到广告中。&lt;/p&gt;

&lt;p&gt;朋友圈视频广告&lt;/p&gt;

&lt;p&gt;朋友圈视频广告由四个部分的内容构成，包含广告主头像&amp;amp;名称、外层文案、外层小视频、用户社交互动等。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/160112_5.jpg&quot; alt=&quot;朋友圈视频广告&quot; /&gt;&lt;/p&gt;

&lt;p&gt;视频广告大多同图文广告是一样的，只不过中间部分是外层小视频，通过动态视频传达广告创意，外层支持配置1个时长6秒的小视频，直接点击进入即可查看完整视频，时长限300秒以内。&lt;/p&gt;

&lt;p&gt;三、微信朋友圈广告定向能力&lt;/p&gt;

&lt;p&gt;朋友圈广告支持按照年龄、性别、地域、手机系统、手机联网环境、兴趣标签等属性进行定向。&lt;/p&gt;

&lt;p&gt;1.年龄、性别&lt;/p&gt;

&lt;p&gt;支持自由选择定向给5~60岁中任意年龄段的用户，支持按性别定向。例如：选择定向给25岁~40岁的男性用户，则只有在此年龄段的男性用户才能收到广告。&lt;/p&gt;

&lt;p&gt;2.地域&lt;/p&gt;

&lt;p&gt;支持自由选择地级市以上城市用户进行定向(数据来源于用户近一个月的常用地点信息)，支持按省投放、按城市投放。例如：选择定向给深圳市、东莞市和佛山市三个城市的用户，则只有近一个月常驻在三个城市的用户才有可能收到广告。&lt;/p&gt;

&lt;p&gt;3.手机系统、手机联网环境&lt;/p&gt;

&lt;p&gt;手机系统包含iOS和Android，联网环境包含WI-FI、4G、3G、2G。支持由由组合选择，也可以选择不限。例如：选择定向给使用iOS手机系统在4G环境下的用户，则只有当前在4G环境下的iOS用户才能收到广告。&lt;/p&gt;

&lt;p&gt;4.兴趣标签&lt;/p&gt;

&lt;p&gt;通过整合各腾讯产品用户行为路径的大数据，我们为每个用户进行了分析定义，并加上对应的标签。当前提供教育、旅游、金融、汽车、房产、家居、服饰鞋帽箱包、餐饮美食、生活服务、商务服务、美容、互联网/电子产品、体育运动、医疗健康、孕产育儿、游戏、政法等17个一级兴趣标签。&lt;/p&gt;

&lt;p&gt;选择兴趣标签有利于精准地找到目标用户，提高广告效果；标签选择越多，覆盖的用户越广。例如，地产类广告主，选择“房产”、“家居”等标签作为定向条件，能精准触达具有购房意向的目标用户。&lt;/p&gt;

&lt;p&gt;四、微信朋友圈广告投放流程&lt;/p&gt;

&lt;p&gt;基本可以按照以下步骤着手投放朋友圈广告（综合各方面因素，上线一个朋友圈广告所需时间，一般为3~15个工作日不等）&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/160112_6.jpg&quot; alt=&quot;朋友圈广告投放流程&quot; /&gt;&lt;/p&gt;

&lt;p&gt;1.前期准备&lt;/p&gt;

&lt;p&gt;投放朋友圈广告前须开通微信公众号的广告主功能，主要包含注册公众号、申请微信认证、开通广告主功能三个步骤，平均耗时5个工作日。&lt;/p&gt;

&lt;p&gt;2.方案审核&lt;/p&gt;

&lt;p&gt;基于推广诉求，广告主可自行按照规范进行方案创作。方案包含广告投放计划、外层方案(外层图片外层文案)、详情页内容、分享文案等四项内容。完成方案设计后，按照方案模版填写，邮件至wxad@tencent.com提交审核。&lt;/p&gt;

&lt;p&gt;自助投放平台也即将上线，届时将不需要邮件审核。现在审核耗时因广告创意不同而异，由于涉及双方沟通，平均耗时2~10个工作日不等。&lt;/p&gt;

&lt;p&gt;3.方案制作&lt;/p&gt;

&lt;p&gt;方案审核通过后，进入方案制作阶段。&lt;/p&gt;

&lt;p&gt;若落地页形式为H5页面：需按照开发规范进行开发，并按要求完成自测。为保证访问体验，建议H5页面部署于腾讯服务器。若落地页形式为公众号图文消息：只须进行排版并提交发布后的链接。&lt;/p&gt;

&lt;p&gt;开发完成后，广告主需提交以下内容：&lt;/p&gt;

&lt;p&gt;① 外层方案：外层图片(jpg/png文件，限300kb内)和外层文案(word文件)&lt;/p&gt;

&lt;p&gt;② 详情页内容：H5页面代码包自测表/公众号图文消息正式链接由广告运营经理进行页面部署验收，通过后将配置广告demo由广告主进行确认，由销售进行协助广告主进行锁定排期、充值等流程。&lt;/p&gt;

&lt;p&gt;4.广告上线&lt;/p&gt;

&lt;p&gt;验收通过后，等待广告最终上线，广告上线时间点由广告主确定。&lt;/p&gt;

&lt;p&gt;上线前，广告主可提供一个不超过50个人的预览白名单。这个是在广告上线前作最后确认之用，仅限常驻国内用户，须提交微信号，不支持手机号或者QQ号。上线前一个小时，预览白名单用户将收到广告。预览确认无误后，广告按时正式上线。&lt;/p&gt;

&lt;p&gt;5.效果追踪&lt;/p&gt;

&lt;p&gt;广告投放结束的3-5个工作日内，广告主即可获得广告结案报告。结案报告会就投放的广告给出数据，并提供每天广告的执行情况，让广告主对广告投放的效果有所了解，并可以针对数据做出分析，调整广告投放的策略。&lt;/p&gt;

&lt;p&gt;好了，大概就这么多，没有那么神秘莫测，不明白的地方也直接可以去朋友圈广告投放网站查看。&lt;/p&gt;

</description>
    </item>
    
    <item>
      <title>【程序化购买】系列之三：算法基础</title>
      <link>http://lilifeng.net/blogs/2015/11/18/speech-pb-c3-algorithm-basics/</link>
      <pubDate>Wed, 18 Nov 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>原生</category>
      
      <category>程序化购买</category>
      
      <category>讲座</category>
      
      
      <category>广告平台</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/11/18/speech-pb-c3-algorithm-basics/</guid>
      <description>&lt;p&gt;-信息检索
–倒排索引
–向量空间模型
-机器学习
–贝叶斯
-最优化方法
–梯度下降法&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/file/PBC3-TechBasics.pdf&quot;&gt;程序化购买】系列之三：算法基础&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>正则表达式中各种字符的含义</title>
      <link>http://lilifeng.net/blogs/2015/11/01/regex/</link>
      <pubDate>Sun, 01 Nov 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>spark</category>
      
      <category>大数据</category>
      
      
      <category>Internet</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/11/01/regex/</guid>
      <description>&lt;p&gt;【原文地址  http://www.cnblogs.com/afarmer/archive/2011/08/29/2158860.html#3291424】&lt;/p&gt;

&lt;p&gt;正则表达式(regular expression)描述了一种字符串匹配的模式，可以用来检查一个串是否含有某种子串、将匹配的子串做替换或者从某个串中取出符合某个条件的子串等。&lt;/p&gt;

&lt;p&gt;列目录时， dir &lt;em&gt;.txt或ls *.txt中的&lt;/em&gt;.txt就不是一个正则表达式,因为这里&lt;em&gt;与正则式的&lt;/em&gt;的含义是不同的。&lt;/p&gt;

&lt;p&gt;正则表达式是由普通字符（例如字符 a 到 z）以及特殊字符（称为元字符）组成的文字模式。正则表达式作为一个模板，将某个字符模式与所搜索的字符串进行匹配。&lt;/p&gt;

&lt;p&gt;3.1 普通字符&lt;/p&gt;

&lt;p&gt;由所有那些未显式指定为元字符的打印和非打印字符组成。这包括所有的大写和小写字母字符，所有数字，所有标点符号以及一些符号。&lt;/p&gt;

&lt;p&gt;3.2 非打印字符&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;em&gt;字符&lt;/em&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;em&gt;含义&lt;/em&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;\cx&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配由x指明的控制字符。例如， \cM 匹配一个 Control-M 或回车符。x 的值必须为 A-Z 或 a-z 之一。否则，将 c 视为一个原义的 ‘c’ 字符。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;\f&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配一个换页符。等价于 \x0c 和 \cL。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;\n&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配一个换行符。等价于 \x0a 和 \cJ。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;\r&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配一个回车符。等价于 \x0d 和 \cM。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;\s&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配任何空白字符，包括空格、制表符、换页符等等。等价于 [ \f\n\r\t\v]。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;\S&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配任何非空白字符。等价于 [^ \f\n\r\t\v]。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;\t&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配一个制表符。等价于 \x09 和 \cI。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;\v&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配一个垂直制表符。等价于 \x0b 和 \cK。&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;3.3 特殊字符&lt;/p&gt;

&lt;p&gt;所谓特殊字符，就是一些有特殊含义的字符，如上面说的”&lt;em&gt;.txt”中的&lt;/em&gt;，简单的说就是表示任何字符串的意思。如果要查找文件名中有＊的文件，则需要对＊进行转义，即在其前加一个\。ls *.txt。正则表达式有以下特殊字符。&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;em&gt;特别字符&lt;/em&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;em&gt;说明&lt;/em&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;$&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配输入字符串的结尾位置。如果设置了 RegExp 对象的 Multiline 属性，则 $ 也匹配 ‘\n’ 或 ‘\r’。要匹配 $ 字符本身，请使用 $。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;( )&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;标记一个子表达式的开始和结束位置。子表达式可以获取供以后使用。要匹配这些字符，请使用 ( 和 )。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;*&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配前面的子表达式零次或多次。要匹配 * 字符，请使用 *。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;+&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配前面的子表达式一次或多次。要匹配 + 字符，请使用 +。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;.&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配除换行符 \n之外的任何单字符。要匹配 .，请使用 \。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;[&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;标记一个中括号表达式的开始。要匹配 [，请使用 [。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;?&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配前面的子表达式零次或一次，或指明一个非贪婪限定符。要匹配 ? 字符，请使用 \?。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;\&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;将下一个字符标记为或特殊字符、或原义字符、或向后引用、或八进制转义符。例如， ‘n’ 匹配字符 ‘n’。’\n’ 匹配换行符。序列 ‘\’ 匹配 “\”，而 ‘(’ 则匹配 “(”。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;^&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配输入字符串的开始位置，除非在方括号表达式中使用，此时它表示不接受该字符集合。要匹配 ^ 字符本身，请使用 \^。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;{&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;标记限定符表达式的开始。要匹配 {，请使用 {。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;|&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;指明两项之间的一个选择。要匹配 &lt;code class=&quot;highlighter-rouge&quot;&gt;|&lt;/code&gt;，请使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;\|&lt;/code&gt;。&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;构造正则表达式的方法和创建数学表达式的方法一样。也就是用多种元字符与操作符将小的表达式结合在一起来创建更大的表达式。正则表达式的组件可以是单个的字符、字符集合、字符范围、字符间的选择或者所有这些组件的任意组合。&lt;/p&gt;

&lt;p&gt;3.4 限定符&lt;/p&gt;

&lt;p&gt;限定符用来指定正则表达式的一个给定组件必须要出现多少次才能满足匹配。有*或+或?或{n}或{n,}或{n,m}共6种。&lt;/p&gt;

&lt;p&gt;*、+和?限定符都是贪婪的，因为它们会尽可能多的匹配文字，只有在它们的后面加上一个?就可以实现非贪婪或最小匹配。&lt;/p&gt;

&lt;p&gt;正则表达式的限定符有：&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;em&gt;字符&lt;/em&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;em&gt;描述&lt;/em&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;*&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配前面的子表达式零次或多次。例如，zo* 能匹配 “z” 以及 “zoo”。* 等价于{0,}。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;+&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配前面的子表达式一次或多次。例如，’zo+’ 能匹配 “zo” 以及 “zoo”，但不能匹配 “z”。+ 等价于 {1,}。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;?&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配前面的子表达式零次或一次。例如，”do(es)?” 可以匹配 “do” 或 “does” 中的”do” 。? 等价于 {0,1}。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;{n}&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;n 是一个非负整数。匹配确定的 n 次。例如，’o{2}’ 不能匹配 “Bob” 中的 ‘o’，但是能匹配 “food” 中的两个 o。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;{n,}&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;n 是一个非负整数。至少匹配n 次。例如，’o{2,}’ 不能匹配 “Bob” 中的 ‘o’，但能匹配 “foooood” 中的所有 o。’o{1,}’ 等价于 ‘o+’。’o{0,}’ 则等价于 ‘o*’。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;{n,m}&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;m 和 n 均为非负整数，其中n &amp;lt;= m。最少匹配 n 次且最多匹配 m 次。例如，”o{1,3}” 将匹配 “fooooood” 中的前三个 o。’o{0,1}’ 等价于 ‘o?’。请注意在逗号和两个数之间不能有空格。&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;3.5 定位符&lt;/p&gt;

&lt;p&gt;用来描述字符串或单词的边界，^和$分别指字符串的开始与结束，\b描述单词的前或后边界，\B表示非单词边界。不能对定位符使用限定符。&lt;/p&gt;

&lt;p&gt;3.6 选择&lt;/p&gt;

&lt;p&gt;用圆括号将所有选择项括起来，相邻的选择项之间用&lt;code class=&quot;highlighter-rouge&quot;&gt;|&lt;/code&gt;分隔。但用圆括号会有一个副作用，是相关的匹配会被缓存，此时可用?:放在第一个选项前来消除这种副作用。&lt;/p&gt;

&lt;p&gt;其中?:是非捕获元之一，还有两个非捕获元是?=和?!，这两个还有更多的含义，前者为正向预查，在任何开始匹配圆括号内的正则表达式模式的位置来匹配搜索字符串，后者为负向预查，在任何开始不匹配该正则表达式模式的位置来匹配搜索字符串。&lt;/p&gt;

&lt;p&gt;3.7 后向引用&lt;/p&gt;

&lt;p&gt;对一个正则表达式模式或部分模式两边添加圆括号将导致相关匹配存储到一个临时缓冲区中，所捕获的每个子匹配都按照在正则表达式模式中从左至右所遇到的内容存储。存储子匹配的缓冲区编号从 1 开始，连续编号直至最大 99 个子表达式。每个缓冲区都可以使用 ‘\n’ 访问，其中 n 为一个标识特定缓冲区的一位或两位十进制数。&lt;/p&gt;

&lt;p&gt;可以使用非捕获元字符 ‘?:’, ‘?=’, or ‘?!’ 来忽略对相关匹配的保存。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;各种操作符的运算优先级&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;相同优先级的从左到右进行运算，不同优先级的运算先高后低。各种操作符的优先级从高到低如下：&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;操作符&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;描述&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;\&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;转义符&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;(), (?:), (?=), []&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;圆括号和方括号&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;*, +, ?, {n}, {n,}, {n,m}&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;限定符&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;^, $, \anymetacharacter&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;位置和顺序&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;|&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;“或”操作&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ol&gt;
  &lt;li&gt;全部符号解释&lt;/li&gt;
&lt;/ol&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;字符&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;描述&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;\&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;将下一个字符标记为一个特殊字符、或一个原义字符、或一个向后引用、或一个八进制转义符。例如，’n’ 匹配字符 “n”。’\n’ 匹配一个换行符。序列 ‘\’ 匹配 “\” 而 “(” 则匹配 “(”。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;^&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配输入字符串的开始位置。如果设置了 RegExp 对象的 Multiline 属性，^ 也匹配 ‘\n’ 或 ‘\r’ 之后的位置。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;$&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配输入字符串的结束位置。如果设置了RegExp 对象的 Multiline 属性，$ 也匹配 ‘\n’ 或 ‘\r’ 之前的位置。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;*&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配前面的子表达式零次或多次。例如，zo* 能匹配 “z” 以及 “zoo”。* 等价于{0,}。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;+&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配前面的子表达式一次或多次。例如，’zo+’ 能匹配 “zo” 以及 “zoo”，但不能匹配 “z”。+ 等价于 {1,}。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;?&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配前面的子表达式零次或一次。例如，”do(es)?” 可以匹配 “do” 或 “does” 中的”do” 。? 等价于 {0,1}。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;{n}&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;n 是一个非负整数。匹配确定的 n 次。例如，’o{2}’ 不能匹配 “Bob” 中的 ‘o’，但是能匹配 “food” 中的两个 o。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;{n,}&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;n 是一个非负整数。至少匹配n 次。例如，’o{2,}’ 不能匹配 “Bob” 中的 ‘o’，但能匹配 “foooood” 中的所有 o。’o{1,}’ 等价于 ‘o+’。’o{0,}’ 则等价于 ‘o*’。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;{n,m}&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;m 和 n 均为非负整数，其中n &amp;lt;= m。最少匹配 n 次且最多匹配 m 次。例如，”o{1,3}” 将匹配 “fooooood” 中的前三个 o。’o{0,1}’ 等价于 ‘o?’。请注意在逗号和两个数之间不能有空格。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;?&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;当该字符紧跟在任何一个其他限制符 (*, +, ?, {n}, {n,}, {n,m}) 后面时，匹配模式是非贪婪的。非贪婪模式尽可能少的匹配所搜索的字符串，而默认的贪婪模式则尽可能多的匹配所搜索的字符串。例如，对于字符串 “oooo”，’o+?’ 将匹配单个 “o”，而 ‘o+’ 将匹配所有 ‘o’。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;.&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配除 “\n” 之外的任何单个字符。要匹配包括 ‘\n’ 在内的任何字符，请使用象 ‘[.\n]’ 的模式。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;(pattern)&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配 pattern 并获取这一匹配。所获取的匹配可以从产生的 Matches 集合得到，在VBScript 中使用 SubMatches 集合，在JScript 中则使用 $0…$9 属性。要匹配圆括号字符，请使用 ‘(’ 或 ‘)’。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;(?:pattern)&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配 pattern 但不获取匹配结果，也就是说这是一个非获取匹配，不进行存储供以后使用。这在使用 “或” 字符 &lt;code class=&quot;highlighter-rouge&quot;&gt;(|)&lt;/code&gt; 来组合一个模式的各个部分是很有用。例如， &lt;code class=&quot;highlighter-rouge&quot;&gt;‘industr(?:y|ies)&lt;/code&gt; 就是一个比 &lt;code class=&quot;highlighter-rouge&quot;&gt;‘industry|industries’&lt;/code&gt; 更简略的表达式。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;(?=pattern)&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;正向预查，在任何匹配 pattern 的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如，&lt;code class=&quot;highlighter-rouge&quot;&gt;’Windows (?=95|98|NT|2000)’&lt;/code&gt; 能匹配 “Windows 2000″ 中的 “Windows” ，但不能匹配 “Windows 3.1″ 中的 “Windows”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;(?!pattern)&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;负向预查，在任何不匹配 pattern 的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如&lt;code class=&quot;highlighter-rouge&quot;&gt;’Windows (?!95|98|NT|2000)’&lt;/code&gt; 能匹配 “Windows 3.1″ 中的 “Windows”，但不能匹配 “Windows 2000″ 中的 “Windows”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;x&lt;code class=&quot;highlighter-rouge&quot;&gt;|&lt;/code&gt;y&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配 x 或 y。例如，’z&lt;code class=&quot;highlighter-rouge&quot;&gt;|&lt;/code&gt;food’ 能匹配 “z” 或 “food”。’(z&lt;code class=&quot;highlighter-rouge&quot;&gt;|&lt;/code&gt;f)ood’ 则匹配 “zood” 或 “food”。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;[xyz]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;字符集合。匹配所包含的任意一个字符。例如， ‘[abc]’ 可以匹配 “plain” 中的 ‘a’。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;[^xyz]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;负值字符集合。匹配未包含的任意字符。例如， ‘[^abc]’ 可以匹配 “plain” 中的’p’。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;[a-z]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;字符范围。匹配指定范围内的任意字符。例如，’[a-z]’ 可以匹配 ‘a’ 到 ‘z’ 范围内的任意小写字母字符。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;[^a-z]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;负值字符范围。匹配任何不在指定范围内的任意字符。例如，’[^a-z]’ 可以匹配任何不在 ‘a’ 到 ‘z’ 范围内的任意字符。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;\b&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配一个单词边界，也就是指单词和空格间的位置。例如， ‘er\b’ 可以匹配”never” 中的 ‘er’，但不能匹配 “verb” 中的 ‘er’。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;\B&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配非单词边界。’er\B’ 能匹配 “verb” 中的 ‘er’，但不能匹配 “never” 中的 ‘er’。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;\cx&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配由 x 指明的控制字符。例如， \cM 匹配一个 Control-M 或回车符。x 的值必须为 A-Z 或 a-z 之一。否则，将 c 视为一个原义的 ‘c’ 字符。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;\d&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配一个数字字符。等价于 [0-9]。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;\D&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配一个非数字字符。等价于 [^0-9]。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;\f&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配一个换页符。等价于 \x0c 和 \cL。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;\n&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配一个换行符。等价于 \x0a 和 \cJ。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;\r&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配一个回车符。等价于 \x0d 和 \cM。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;\s&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配任何空白字符，包括空格、制表符、换页符等等。等价于 [ \f\n\r\t\v]。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;\S&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配任何非空白字符。等价于 [^ \f\n\r\t\v]。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;\t&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配一个制表符。等价于 \x09 和 \cI。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;\v&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配一个垂直制表符。等价于 \x0b 和 \cK。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;\w&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配包括下划线的任何单词字符。等价于’[A-Za-z0-9_]’。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;\W&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配任何非单词字符。等价于 ‘[^A-Za-z0-9_]’。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;\xn&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配 n，其中 n 为十六进制转义值。十六进制转义值必须为确定的两个数字长。例如，’\x41′ 匹配 “A”。’\x041′ 则等价于 ‘\x04′ &amp;amp; “1″。正则表达式中可以使用 ASCII 编码。.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;\num&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配 num，其中 num 是一个正整数。对所获取的匹配的引用。例如，’(.)\1′ 匹配两个连续的相同字符。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;\n&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;标识一个八进制转义值或一个向后引用。如果 \n 之前至少 n 个获取的子表达式，则 n 为向后引用。否则，如果 n 为八进制数字 (0-7)，则 n 为一个八进制转义值。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;\nm&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;标识一个八进制转义值或一个向后引用。如果 \nm 之前至少有 nm 个获得子表达式，则 nm 为向后引用。如果 \nm 之前至少有 n 个获取，则 n 为一个后跟文字 m 的向后引用。如果前面的条件都不满足，若 n 和 m 均为八进制数字 (0-7)，则 \nm 将匹配八进制转义值 nm。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;\nml&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;如果 n 为八进制数字 (0-3)，且 m 和 l 均为八进制数字 (0-7)，则匹配八进制转义值 nml。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;\un&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配 n，其中 n 是一个用四个十六进制数字表示的 Unicode 字符。例如， \u00A9 匹配版权符号 (?)。&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ol&gt;
  &lt;li&gt;部分例子&lt;/li&gt;
&lt;/ol&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;正则表达式&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;说明&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;/\b([a-z]+) \1\b/gi&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;一个单词连续出现的位置&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;/(\w+):\/\/([^/:]+)(:\d&lt;em&gt;)?([^# ]&lt;/em&gt;)/&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;将一个URL解析为协议、域、端口及相对路径&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/^(?:Chapter|Section) [1-9][0-9]{0,1}$/&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;定位章节的位置&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;/[-a-z]/&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;A至z共26个字母再加一个-号。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;/ter\b/&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;可匹配chapter，而不能terminal&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;/\Bapt/&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;可匹配chapter，而不能aptitude&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/Windows(?=95 |98 |NT )/&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;可匹配Windows95或Windows98或WindowsNT,当找到一个匹配后，从Windows后面开始进行下一次&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ol&gt;
  &lt;li&gt;正则表达式匹配规则&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;7.1 基本模式匹配&lt;/p&gt;

&lt;p&gt;一切从最基本的开始。模式，是正规表达式最基本的元素，它们是一组描述字符串特征的字符。模式可以很简单，由普通的字符串组成，也可以非常复杂，往往用特殊的字符表示一个范围内的字符、重复出现，或表示上下文。例如：&lt;/p&gt;

&lt;p&gt;^once&lt;/p&gt;

&lt;p&gt;这个模式包含一个特殊的字符^，表示该模式只匹配那些以once开头的字符串。例如该模式与字符串”once upon a time”匹配，与”There once was a man from NewYork”不匹配。正如如^符号表示开头一样，$符号用来匹配那些以给定模式结尾的字符串。&lt;/p&gt;

&lt;p&gt;bucket$&lt;/p&gt;

&lt;p&gt;这个模式与”Who kept all of this cash in a bucket”匹配，与”buckets”不匹配。字符^和$同时使用时，表示精确匹配（字符串与模式一样）。例如：&lt;/p&gt;

&lt;p&gt;^bucket$&lt;/p&gt;

&lt;p&gt;只匹配字符串”bucket”。如果一个模式不包括^和$，那么它与任何包含该模式的字符串匹配。例如：模式&lt;/p&gt;

&lt;p&gt;once&lt;/p&gt;

&lt;p&gt;与字符串&lt;/p&gt;

&lt;p&gt;There once was a man from NewYork 
Who kept all of his cash in a bucket.&lt;/p&gt;

&lt;p&gt;是匹配的。&lt;/p&gt;

&lt;p&gt;在该模式中的字母(o-n-c-e)是字面的字符，也就是说，他们表示该字母本身，数字也是一样的。其他一些稍微复杂的字符，如标点符号和白字符（空格、制表符等），要用到转义序列。所有的转义序列都用反斜杠()打头。制表符的转义序列是：\t。所以如果我们要检测一个字符串是否以制表符开头，可以用这个模式：&lt;/p&gt;

&lt;p&gt;^\t&lt;/p&gt;

&lt;p&gt;类似的，用\n表示“新行”，\r表示回车。其他的特殊符号，可以用在前面加上反斜杠，如反斜杠本身用\表示，句号.用.表示，以此类推。&lt;/p&gt;

&lt;p&gt;7.2 字符簇&lt;/p&gt;

&lt;p&gt;在INTERNET的程序中，正规表达式通常用来验证用户的输入。当用户提交一个FORM以后，要判断输入的电话号码、地址、EMAIL地址、信用卡号码等是否有效，用普通的基于字面的字符是不够的。&lt;/p&gt;

&lt;p&gt;所以要用一种更自由的描述我们要的模式的办法，它就是字符簇。要建立一个表示所有元音字符的字符簇，就把所有的元音字符放在一个方括号里：&lt;/p&gt;

&lt;p&gt;[AaEeIiOoUu]&lt;/p&gt;

&lt;p&gt;这个模式与任何元音字符匹配，但只能表示一个字符。用连字号可以表示一个字符的范围，如：&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;[a-z]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;//匹配所有的小写字母&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;[A-Z]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;//匹配所有的大写字母&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;[a-zA-Z]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;//匹配所有的字母&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;[0-9]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;//匹配所有的数字&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;[0-9.-]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;//匹配所有的数字，句号和减号&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;[ \f\r\t\n]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;//匹配所有的白字符&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;同样的，这些也只表示一个字符，这是一个非常重要的。如果要匹配一个由一个小写字母和一位数字组成的字符串，比如”z2″、”t6″或”g7″，但不是”ab2″、”r2d3″ 或”b52″的话，用这个模式：&lt;/p&gt;

&lt;p&gt;^[a-z][0-9]$&lt;/p&gt;

&lt;p&gt;尽管[a-z]代表26个字母的范围，但在这里它只能与第一个字符是小写字母的字符串匹配。&lt;/p&gt;

&lt;p&gt;前面曾经提到^表示字符串的开头，但它还有另外一个含义。当在一组方括号里使用^是，它表示“非”或“排除”的意思，常常用来剔除某个字符。还用前面的例子，我们要求第一个字符不能是数字：&lt;/p&gt;

&lt;p&gt;^[^0-9][0-9]$&lt;/p&gt;

&lt;p&gt;这个模式与”&amp;amp;5″、”g7″及”-2″是匹配的，但与”12″、”66″是不匹配的。下面是几个排除特定字符的例子：&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;[^a-z]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;//除了小写字母以外的所有字符&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;[^\\/\^]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;//除了()(/)(^)之外的所有字符&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;[^\”\’]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;//除了双引号(”)和单引号(’)之外的所有字符&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;特殊字符”.” (点，句号)在正规表达式中用来表示除了“新行”之外的所有字符。所以模式”^.5$”与任何两个字符的、以数字5结尾和以其他非“新行”字符开头的字符串匹配。模式”.”可以匹配任何字符串，除了空串和只包括一个“新行”的字符串。&lt;/p&gt;

&lt;p&gt;PHP的正规表达式有一些内置的通用字符簇，列表如下：&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;字符簇&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;含义&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;[[:alpha:]]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;任何字母&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;[[:digit:]]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;任何数字&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;[[:alnum:]]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;任何字母和数字&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;[[:space:]]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;任何白字符&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;[[:upper:]]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;任何大写字母&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;[[:lower:]]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;任何小写字母&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;[[:punct:]]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;任何标点符号&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;[[:xdigit:]]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;任何16进制的数字，相当于[0-9a-fA-F]&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;7.3 确定重复出现&lt;/p&gt;

&lt;p&gt;到现在为止，你已经知道如何去匹配一个字母或数字，但更多的情况下，可能要匹配一个单词或一组数字。一个单词有若干个字母组成，一组数字有若干个单数组成。跟在字符或字符簇后面的花括号({})用来确定前面的内容的重复出现的次数。&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;字符簇&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;含义&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;^[a-zA-Z_]$&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;所有的字母和下划线&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;^[[:alpha:]]{3}$&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;所有的3个字母的单词&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;^a$&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;字母a&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;^a{4}$&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;aaaa&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;^a{2,4}$&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;aa,aaa或aaaa&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;^a{1,3}$&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;a,aa或aaa&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;^a{2,}$&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;包含多于两个a的字符串&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;^a{2,}&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;如：aardvark和aaab，但apple不行&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;a{2,}&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;如：baad和aaa，但Nantucket不行&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;\t{2}&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;两个制表符&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;.{2}&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;所有的两个字符&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;这些例子描述了花括号的三种不同的用法。一个数字，{x}的意思是“前面的字符或字符簇只出现x次”；一个数字加逗号，{x,}的意思是“前面的内容出现x或更多的次数”；两个用逗号分隔的数字，{x,y}表示“前面的内容至少出现x次，但不超过y次”。我们可以把模式扩展到更多的单词或数字：&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;^[a-zA-Z0-9_]{1,}$&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;//所有包含一个以上的字母、数字或下划线的字符串&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;^[0-9]{1,}$&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;//所有的正数&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;^-{0,1}[0-9]{1,}$&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;//所有的整数&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;^-{0,1}[0-9]{0,}.{0,1}[0-9]{0,}$&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;//所有的小数&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;最后一个例子不太好理解，是吗？这么看吧：与所有以一个可选的负号(-{0,1})开头(^)、跟着0个或更多的数字([0-9]{0,})、和一个可选的小数点(.{0,1})再跟上0个或多个数字([0-9]{0,})，并且没有其他任何东西($)。下面你将知道能够使用的更为简单的方法。&lt;/p&gt;

&lt;p&gt;特殊字符”?”与{0,1}是相等的，它们都代表着：“0个或1个前面的内容”或“前面的内容是可选的”。所以刚才的例子可以简化为：&lt;/p&gt;

&lt;p&gt;^-?[0-9]{0,}.?[0-9]{0,}$&lt;/p&gt;

&lt;p&gt;特殊字符”*”与{0,}是相等的，它们都代表着“0个或多个前面的内容”。最后，字符”+”与 {1,}是相等的，表示“1个或多个前面的内容”，所以上面的4个例子可以写成：&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;^[a-zA-Z0-9_]+$&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;//所有包含一个以上的字母、数字或下划线的字符串&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;^[0-9]+$&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;//所有的正数&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;^-?[0-9]+$&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;//所有的整数&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;^-?[0-9]&lt;em&gt;.?[0-9]&lt;/em&gt;$&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;//所有的小数&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;当然这并不能从技术上降低正规表达式的复杂性，但可以使它们更容易阅读。&lt;/p&gt;

&lt;p&gt;转自：http://blog.sina.com.cn/s/blog_461c24d50100dtnz.html&lt;/p&gt;

&lt;p&gt;正则表达式非常有用，查找、匹配、处理字符串、替换和转换字符串，输入输出等。而且各种语言都支持，例如.NET正则库，JDK正则包, Perl, JavaScript等各种脚本语言都支持正则表达式。下面整理一些常用的正则表达式。&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;字符&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;描述&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;\&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;将下一个字符标记为一个特殊字符、或一个原义字符、或一个 向后引用、或一个八进制转义符。例如，’n’ 匹配字符 “n”。’\n’ 匹配一个换行符。序列 ‘\’ 匹配 “&quot; 而 “(” 则匹配 “(“。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;^&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配输入字符串的开始位置。如果设置了 RegExp 对象的 Multiline 属性，^ 也匹配 ‘\n’ 或 ‘\r’ 之后的位置。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;$&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配输入字符串的结束位置。如果设置了RegExp 对象的 Multiline 属性，$ 也匹配 ‘\n’ 或 ‘\r’ 之前的位置。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;*&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配前面的子表达式零次或多次。例如，zo* 能匹配 “z” 以及 “zoo”。* 等价于{0,}。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;+&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配前面的子表达式一次或多次。例如，’zo+’ 能匹配 “zo” 以及 “zoo”，但不能匹配 “z”。+ 等价于 {1,}。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;?&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配前面的子表达式零次或一次。例如，”do(es)?” 可以匹配 “do” 或 “does” 中的”do” 。? 等价于 {0,1}。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;{n}&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;n 是一个非负整数。匹配确定的 n 次。例如，’o{2}’ 不能匹配 “Bob” 中的 ‘o’，但是能匹配 “food” 中的两个 o。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;{n,}&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;n 是一个非负整数。至少匹配n 次。例如，’o{2,}’ 不能匹配 “Bob” 中的 ‘o’，但能匹配 “foooood” 中的所有 o。’o{1,}’ 等价于 ‘o+’。’o{0,}’ 则等价于 ‘o*‘。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;{n,m}&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;m 和 n 均为非负整数，其中n &amp;lt;= m。最少匹配 n 次且最多匹配 m 次。例如，”o{1,3}” 将匹配 “fooooood” 中的前三个 o。’o{0,1}’ 等价于 ‘o?’。请注意在逗号和两个数之间不能有空格。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;?&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;当该字符紧跟在任何一个其他限制符 (*, +, ?, {n}, {n,}, {n,m}) 后面时，匹配模式是非贪婪的。非贪婪模式尽可能少的匹配所搜索的字符串，而默认的贪婪模式则尽可能多的匹配所搜索的字符串。例如，对于字符串 “oooo”，’o+?’ 将匹配单个 “o”，而 ‘o+’ 将匹配所有 ‘o’。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;.&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配除 “\n” 之外的任何单个字符。要匹配包括 ‘\n’ 在内的任何字符，请使用象 ‘[.\n]’ 的模式。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;(pattern)&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配 pattern 并获取这一匹配。所获取的匹配可以从产生的 Matches 集合得到，在VBScript 中使用 SubMatches 集合，在JScript 中则使用 $0…$9 属性。要匹配圆括号字符，请使用 ‘(’ 或 ‘)‘。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;(?:pattern)&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配 pattern 但不获取匹配结果，也就是说这是一个非获取匹配，不进行存储供以后使用。这在使用 “或” 字符 (&lt;code class=&quot;highlighter-rouge&quot;&gt;|&lt;/code&gt;) 来组合一个模式的各个部分是很有用。例如， &lt;code class=&quot;highlighter-rouge&quot;&gt;&#39;industr(?:y|ies)&lt;/code&gt; 就是一个比 &lt;code class=&quot;highlighter-rouge&quot;&gt;&#39;industry|industries&#39;&lt;/code&gt; 更简略的表达式。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;(?=pattern)&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;正向预查，在任何匹配 pattern 的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如，&lt;code class=&quot;highlighter-rouge&quot;&gt;&#39;Windows (?=95|98|NT|2000)&#39;&lt;/code&gt; 能匹配 “Windows 2000” 中的 “Windows” ，但不能匹配 “Windows 3.1” 中的 “Windows”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;(?!pattern)&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;负向预查，在任何不匹配 pattern 的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如&lt;code class=&quot;highlighter-rouge&quot;&gt;&#39;Windows (?!95|98|NT|2000)&#39;&lt;/code&gt; 能匹配 “Windows 3.1” 中的 “Windows”，但不能匹配 “Windows 2000” 中的 “Windows”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;x|y&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配 x 或 y。例如，&lt;code class=&quot;highlighter-rouge&quot;&gt;&#39;z|food&#39;&lt;/code&gt; 能匹配 “z” 或 “food”。&lt;code class=&quot;highlighter-rouge&quot;&gt;&#39;(z|f)ood&#39;&lt;/code&gt; 则匹配 “zood” 或 “food”。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;[xyz]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;字符集合。匹配所包含的任意一个字符。例如， ‘[abc]’ 可以匹配 “plain” 中的 ‘a’。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;[^xyz]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;负值字符集合。匹配未包含的任意字符。例如， ‘[^abc]’ 可以匹配 “plain” 中的’p’。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;[a-z]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;字符范围。匹配指定范围内的任意字符。例如，’[a-z]’ 可以匹配 ‘a’ 到 ‘z’ 范围内的任意小写字母字符。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;[^a-z]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;负值字符范围。匹配任何不在指定范围内的任意字符。例如，’[^a-z]’ 可以匹配任何不在 ‘a’ 到 ‘z’ 范围内的任意字符。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;\b&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配一个单词边界，也就是指单词和空格间的位置。例如， ‘er\b’ 可以匹配”never” 中的 ‘er’，但不能匹配 “verb” 中的 ‘er’。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;\B&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配非单词边界。’er\B’ 能匹配 “verb” 中的 ‘er’，但不能匹配 “never” 中的 ‘er’。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;\cx&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配由 x 指明的控制字符。例如， \cM 匹配一个 Control-M 或回车符。x 的值必须为 A-Z 或 a-z 之一。否则，将 c 视为一个原义的 ‘c’ 字符。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;\d&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配一个数字字符。等价于 [0-9]。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;\D&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配一个非数字字符。等价于 [^0-9]。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;\f&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配一个换页符。等价于 \x0c 和 \cL。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;\n&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配一个换行符。等价于 \x0a 和 \cJ。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;\r&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配一个回车符。等价于 \x0d 和 \cM。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;\s&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配任何空白字符，包括空格、制表符、换页符等等。等价于 [ \f\n\r\t\v]。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;\S&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配任何非空白字符。等价于 [^ \f\n\r\t\v]。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;\t&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配一个制表符。等价于 \x09 和 \cI。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;\v&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配一个垂直制表符。等价于 \x0b 和 \cK。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;\w&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配包括下划线的任何单词字符。等价于’[A-Za-z0-9_]’。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;\W&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配任何非单词字符。等价于 ‘[^A-Za-z0-9_]‘。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;\xn&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配 n，其中 n 为十六进制转义值。十六进制转义值必须为确定的两个数字长。例如，’\x41’ 匹配 “A”。’\x041’ 则等价于 ‘\x04’ &amp;amp; “1”。正则表达式中可以使用 ASCII 编码。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;\num&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配 num，其中 num 是一个正整数。对所获取的匹配的引用。例如，’(.)\1’ 匹配两个连续的相同字符。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;\n&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;标识一个八进制转义值或一个向后引用。如果 \n 之前至少 n 个获取的子表达式，则 n 为向后引用。否则，如果 n 为八进制数字 (0-7)，则 n 为一个八进制转义值。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;\nm&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;标识一个八进制转义值或一个向后引用。如果 \nm 之前至少有 nm 个获得子表达式，则 nm 为向后引用。如果 \nm 之前至少有 n 个获取，则 n 为一个后跟文字 m 的向后引用。如果前面的条件都不满足，若 n 和 m 均为八进制数字 (0-7)，则 \nm 将匹配八进制转义值 nm。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;\nml&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;如果 n 为八进制数字 (0-3)，且 m 和 l 均为八进制数字 (0-7)，则匹配八进制转义值 nml。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;/i&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;使正则表达式对大小写不敏感, (?-i)是关闭大小写不敏感 (?i)te(?-i)st应该匹配TEst，但是不能匹配teST或TEST.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;/s&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;开启“单行模式”，即点号“.”匹配新行符&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;/m&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;开启“多行模式”，即“^”和“$”匹配新行符的前面和后面的位置。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;^[0-9]*$&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;只能输入数字&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;^\d{n}$&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;只能输入n位的数字&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;^\d{n,}$&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;只能输入至少n位的数字&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;^\d{m,n}$&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;只能输入m~n位的数字&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;^(0|[1-9][0-9]*)$	&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;只能输入零和非零开头的数字&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;^[0-9]+(.[0-9]{2})?$&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;只能输入有两位小数的正实数&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;^[0-9]+(.[0-9]{1,3})?$&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;只能输入有1~3位小数的正实数&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;^+?[1-9][0-9]*$&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;只能输入非零的正整数&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;^-[1-9][]0-9”*$&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;只能输入非零的负整数&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;^.{3}$&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;只能输入长度为3的字符&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;^[A-Za-z]+$&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;只能输入由26个英文字母组成的字符串&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;^[A-Za-z0-9]+$&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;只能输入由数字和26个英文字母组成的字符串&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;^\w+$&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;只能输入由数字、26个英文字母或者下划线组成的字符串&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;^[a-zA-Z]\w{5,17}$&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;验证用户密码：以字母开头，长度在6~18之间，只能包含字符、数字和下划线。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;[^%&amp;amp;’,;=?$\x22]+&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;验证是否含有^%&amp;amp;’,;=?$&quot;等字符&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;^[\u4e00-\u9fa5]{0,}$&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;只能输入汉字&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;^\w+([-+.]\w+)&lt;em&gt;@\w+([-.]\w+)&lt;/em&gt;.\w+([-.]\w+)*$&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;验证Email地址&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;^http://([\w-]+.)+[\w-]+(/[\w-./?%&amp;amp;=]*)?$&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;验证InternetURL&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;^\d{15}|\d{18}$&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;验证身份证号（15位或18位数字）&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;^((2[0-4]\d|25[0-5]|[01]?\d\d?)\.){3}(2[0-4]\d|25[0-5]|[01]?\d\d?)$&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;验证IP地址&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;(\w)\1&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配两个两个重叠出现的字符 例如，”aabbc11asd”， 返回结果为aa bb 11三组match&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&amp;lt;(?&lt;tag&gt;[^\s&amp;gt;]+)[^&amp;gt;]*&amp;gt;.*&amp;lt;/\k&lt;tag&gt;&amp;gt;&lt;/tag&gt;&lt;/tag&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配成对的HTML标签&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;(?!)&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;不出现，负声明&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;下例演示如何取得一个&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;a&amp;gt;&lt;/code&gt;标签对中的全部内容，即使其中包含别的HTML tag。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newsContent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;url:&amp;lt;a href=&quot;&quot;1.html&quot;&quot;&amp;gt;&amp;lt;img src=&quot;&quot;1.gif&quot;&quot;&amp;gt;test&amp;lt;span style=&quot;&quot;color:red;&quot;&quot;&amp;gt;
 
Regex&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;.&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; 
&lt;span class=&quot;n&quot;&gt;Regex&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;regEnd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Regex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;@`&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;\s*a[^&amp;gt;]*&amp;gt;([^&amp;lt;]|&amp;lt;(?!/a))*&amp;lt;\s*/a\s*&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RegexOptions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Multiline&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ol&gt;
  &lt;li&gt;匹配组&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;常用的组匹配：(实用)&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;(exp)&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配exp并且捕获到一个自动命名的组&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;(?&lt;name&gt;exp)&lt;/name&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;匹配exp并且捕获到组’name’&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;(?=exp)&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;exp出现在声明右侧，但exp不作为匹配&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;括号中的模式必须出现在声明右侧，但不作为匹配的一部分 ，例如：&lt;/p&gt;

&lt;p&gt;输入： public keywod string “abc”; 
正则：\b\w+(?=ing\b)，返回“str”， 
意思为：匹配以ing结束的单词，但ing不作为返回
(?&amp;lt;=exp)	exp出现在声明左侧，但exp不作为匹配&lt;/p&gt;

&lt;p&gt;括号中的模式必须出现在声明左侧，但不作为匹配的一部分 ，例如：&lt;/p&gt;

&lt;p&gt;输入： public remember string “abc”; 
正则：(?&amp;lt;=\bre)\w+\b，返回“member”， 
意思为：匹配以re开头的单词，但re不作为返回
(?!exp)&lt;/p&gt;

&lt;p&gt;exp不出现在声明右侧，但exp不作为匹配&lt;/p&gt;

&lt;p&gt;括号中的模式必须不出现在声明右侧 ，例如：&lt;/p&gt;

&lt;p&gt;输入： remember aqa bqu “abc”; 
正则：\b\w&lt;em&gt;q(?!u)\w&lt;/em&gt;\b，返回“aqa”， 
意思为：匹配带q后面不是跟随u的单词
(?&amp;lt;!exp)&lt;/p&gt;

&lt;p&gt;exp不出现在声明左侧，但exp不作为匹配&lt;/p&gt;

&lt;p&gt;输入：public string keywod = “abc”; string value = “test”;&lt;/p&gt;

&lt;p&gt;目的：匹配 关键字=”“，例如获得关键字keyword，value；获得等于的值abc和test&lt;/p&gt;

&lt;p&gt;表达式：string (?&lt;x&gt;[^=]*?) *= *(?&lt;y&gt;[^;]*?);&lt;/y&gt;&lt;/x&gt;&lt;/p&gt;

&lt;p&gt;代码：&lt;/p&gt;

&lt;p&gt;private void ParseKeywords(string input)
{
 System.Text.RegularExpressions.MatchCollection mc = 
 System.Text.RegularExpressions.Regex.Matches(input, @”string (?&lt;x&gt;[^=]*?) *= *(?&lt;y&gt;[^;]*?);&quot;);&lt;/y&gt;&lt;/x&gt;&lt;/p&gt;

&lt;p&gt;if (mc != null &amp;amp;&amp;amp; mc.Count &amp;gt; 0)
 {
 foreach (System.Text.RegularExpressions.Match m in mc)
 {
 string keyword = m.Groups[“x”].Value;
 string value = m.Groups[“y”].Value;
 }
 }
}
2. 匹配并替换&lt;/p&gt;

&lt;p&gt;输入：public &amp;lt;%=classname%&amp;gt;Extension : IExt&lt;/p&gt;

&lt;p&gt;目的：匹配 &amp;lt;%= %&amp;gt;中间的classname并替换&lt;/p&gt;

&lt;p&gt;表达式：&amp;lt;%=.*%&amp;gt;&lt;/p&gt;

&lt;p&gt;代码：&lt;/p&gt;

&lt;p&gt;private string Replace(string input)
{
 return Regex.Replace(input, @”&amp;lt;%=.*%&amp;gt;”, new MatchEvaluator(RefineCodeTag), RegexOptions.Singleline);
}&lt;/p&gt;

&lt;p&gt;string RefineCodeTag(Match m)
{
 string x = m.ToString();&lt;/p&gt;

&lt;p&gt;x = Regex.Replace(x, “&amp;lt;%=”, “”);
 x = Regex.Replace(x, “%&amp;gt;”, “”);&lt;/p&gt;

&lt;p&gt;return x.Trim() + “,”;
}
正则表达式选项RegexOptions:&lt;/p&gt;

&lt;p&gt;ExplicitCapture&lt;/p&gt;

&lt;p&gt;n	
只有定义了命名或编号的组才捕获&lt;/p&gt;

&lt;p&gt;IgnoreCase	i	不区分大小写
IgnorePatternWhitespace	x	消除模式中的非转义空白并启用由 # 标记的注释。
MultiLine	m	
多行模式，其原理是修改了^和$的含义&lt;/p&gt;

&lt;p&gt;SingleLine	s	
单行模式，和MultiLine相对应&lt;/p&gt;

&lt;p&gt;正则表达式替换的其他功能：&lt;/p&gt;

&lt;p&gt;$number	把匹配的第number组替换成替换表达式&lt;/p&gt;

&lt;p&gt;这段代码返回的是 “01 012 03 05”&lt;/p&gt;

&lt;p&gt;就是说，对组一的每个匹配结果都用”0$1”这个表达式来替换，”0$1”中”$1”由组1匹配的结果代入&lt;/p&gt;

&lt;p&gt;public static void Main()
{ 
 string s = “1 12 3 5”;
 s = Regex.Replace(s,@”(\d+)(?#这个是注释)”,”0$1”,RegexOptions.Compiled|RegexOptions.IgnoreCase);
 Console.WriteLine(s);
 Console.ReadLine();
 }
${name}&lt;/p&gt;

&lt;p&gt;把匹配的组名为”name”的组替换成表达式，&lt;/p&gt;

&lt;p&gt;上例的Regex expression改成@”(?&lt;name&gt;\d+)(?#这个是注释)&quot;后面的替换式改为&quot;0${name}&quot;结果是一样的&lt;/name&gt;&lt;/p&gt;

&lt;p&gt;$$&lt;/p&gt;

&lt;p&gt;做$的转义符，如上例表达式改成@”(?&lt;name&gt;\d+)(?#这个是注释)&quot;和&quot;$$${name}&quot;，则结果为&quot;$1 $12 $3 $5&quot;&lt;/name&gt;&lt;/p&gt;

&lt;p&gt;$&amp;amp;	替换整个匹配
$`	替换匹配前的字符
$’	替换匹配后的字符
$+	替换最后匹配的组
$_	替换整个字符串&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;匹配URL中文件名&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;输入：http://www.9499.net/page1.htm&lt;/p&gt;

&lt;p&gt;目的：从URL地址中提取文件名&lt;/p&gt;

&lt;p&gt;表达式：s=s.replace(/(.&lt;em&gt;\/){0,}([^.]+).&lt;/em&gt;/ig,”$2”) ;&lt;/p&gt;

&lt;p&gt;代码：&lt;/p&gt;

&lt;p&gt;string s = “http://www.9499.net/page1.htm”; 
s = s.replace(/(.&lt;em&gt;\/){0,}([^.]+).&lt;/em&gt;/ig, “$2”) ;&lt;/p&gt;

</description>
    </item>
    
    <item>
      <title>Spark&amp;Spark性能调优实战</title>
      <link>http://lilifeng.net/blogs/2015/10/26/spark-optimization/</link>
      <pubDate>Mon, 26 Oct 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>spark</category>
      
      <category>大数据</category>
      
      
      <category>Internet</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/10/26/spark-optimization/</guid>
      <description>&lt;p&gt;【原文地址  http://blog.csdn.net/zcc_0015/article/details/38460917】&lt;/p&gt;

&lt;p&gt;Spark特别适用于多次操作特定的数据，分mem-only和mem &amp;amp; disk。其中mem-only:效率高，但占用大量的内存，成本很高;mem &amp;amp; disk:内存用完后，会自动向磁盘迁移，解决了内存不足的问题，却带来了数据的置换的消费。Spark常见的调优工具有nman、Jmeter和Jprofile,以下是Spark调优的一个实例分析：&lt;/p&gt;

&lt;p&gt;1、场景：精确客户群&lt;/p&gt;

&lt;p&gt;对一个容量为300g的客户信息表在spark上进行查询优化，该大宽表有1800多列，有效使用的有20列。&lt;/p&gt;

&lt;p&gt;2、优化达到的效果：查询由原来的40.232s降低为2.7s&lt;/p&gt;

&lt;p&gt;3、优化过程分析&lt;/p&gt;

&lt;p&gt;第一步：首先发现磁盘存在大量的iowait，通过查看相关日志文件，发现一个block的大小进而推算出整个数据文件大小为300G整个内存无法容纳，采用压缩的方法实现优化，结合本数据文件的特点，存在大量的0和1，选 Gzip算法进行压缩，压缩后的大小为1.9G，该步使得查询从40.232降为了20.12s。&lt;/p&gt;

&lt;p&gt;第二步：大宽表存在1800多列，而有效使用的只有20多列，故通过RCFILE只将有效的列加载，该步使得查询从20s降为12s。&lt;/p&gt;

&lt;p&gt;第三步：通过Jprofile分析出CPU的负载过高，到底是什么原因造成的，仔细发现序列化机制有问题。Spark的serialization框架有两种：java自身的和kryo的。其中kryo 是一个快速高效的Java对象图形序列化框架,主要特点是性能、高效和易用，换成kryo后，查询从12s降到7s。&lt;/p&gt;

&lt;p&gt;第四步：进一步分析CPU各核负载量很不均匀，内存也没有用满，系统的资源没有得到充分利用，该如何利用？ (1)Spark的RDD的partition个数创建task的个数是对应的;(2)Partition的个数在hadoop的RDD中由block的个数决定的，内存：系统总内存数=work内存大小&lt;em&gt;work数=SPARK_WORKER_MEMORY&lt;/em&gt;SPARK_WORKER_INSTANCES;&lt;/p&gt;

&lt;p&gt;CPU:系统总的task数=work数×work所占的cores数=SPARK_WORKER_INSTANCES*SPARK_WORKER_CORES，计算task并行度，内存分配情况，调优参数：&lt;/p&gt;

&lt;p&gt;SPARK_WORKER_INSTANCES=4&lt;/p&gt;

&lt;p&gt;SPARK_WORKER_CORES = 3&lt;/p&gt;

&lt;p&gt;SPARK_WORKER_MEMORY = 6G&lt;/p&gt;

&lt;p&gt;Cpu(12core)  mem(24G)，通过这几个参数的优化，查询由7s降到5s。&lt;/p&gt;

&lt;p&gt;第五步：进一步发现Sharkserver端出现明显的fullGC,通过调优参数&lt;/p&gt;

&lt;p&gt;Export SHARK_MASTER_MEM=2g,该步由6s降到3sl;&lt;/p&gt;

&lt;p&gt;第六步：又发现当两表关联时，cpu 出现瓶颈，分析原因是日表做了gzip压缩，优化方法：日表不使用gzip压缩，将日表做成内存表。查询从3s降到2s。&lt;/p&gt;

&lt;p&gt;4、总结&lt;/p&gt;

&lt;p&gt;优化是一个逐步求精的过程，回顾该优化过程，主要是从以下几个因素考虑：(1)mem;(2)cpu;(3)dis;(4)网络IO;(5)序列化机制。认真这些因素为主线，挖掘与其相关的内容时行大胆尝试。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>【程序化购买】系列之二：技术特点</title>
      <link>http://lilifeng.net/blogs/2015/10/18/speech-pb-c2-technique-basics/</link>
      <pubDate>Sun, 18 Oct 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>原生</category>
      
      <category>程序化购买</category>
      
      <category>讲座</category>
      
      
      <category>广告平台</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/10/18/speech-pb-c2-technique-basics/</guid>
      <description>&lt;ul&gt;
  &lt;li&gt;技术和计算导向&lt;/li&gt;
  &lt;li&gt;效果的可衡量&lt;/li&gt;
  &lt;li&gt;创意和投放方式的标准化&lt;/li&gt;
  &lt;li&gt;媒体概念多样化&lt;/li&gt;
  &lt;li&gt;数据驱动的投放决策&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;/file/PBC2-Basics.pdf&quot;&gt;程序化购买】系列之二：技术特点&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Flume1.6.0连接Kafka0.8.2以及其中可能出现的问题</title>
      <link>http://lilifeng.net/blogs/2015/10/15/flume-with-kafka/</link>
      <pubDate>Thu, 15 Oct 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>原生</category>
      
      <category>Flume</category>
      
      <category>Kafka</category>
      
      
      <category>Internet</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/10/15/flume-with-kafka/</guid>
      <description>&lt;p&gt;最终正确的example.conf文件如下：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt; example.conf: A single-node Flume configuration

&lt;span class=&quot;c&quot;&gt;# Name the components on this agent&lt;/span&gt;
a1.sources &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; r2
a1.sinks &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; k1
a1.channels &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; c1

a1.sources.r1.type &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; netcat
a1.sources.r1.bind &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; localhost
a1.sources.r1.port &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 44444

a1.sources.r2.type &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; org.apache.flume.source.kafka.KafkaSource
a1.sources.r2.zookeeperConnect &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; localhost:2181
a1.sources.r2.topic &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; my-replicated-topic

&lt;span class=&quot;c&quot;&gt;# Describe the sink&lt;/span&gt;
a1.sinks.k1.type &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; logger

&lt;span class=&quot;c&quot;&gt;# Use a channel which buffers events in memory&lt;/span&gt;
a1.channels.c1.type &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; memory
a1.channels.c1.capacity &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 1000
a1.channels.c1.transactionCapacity &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 100

&lt;span class=&quot;c&quot;&gt;# Bind the source and sink to the channel&lt;/span&gt;
a1.sources.r1.channels &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; c1
a1.sources.r2.channels &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; c1
a1.sinks.k1.channel &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; c1&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;问题：&lt;/p&gt;

&lt;p&gt;1 Class Not Found&lt;/p&gt;

&lt;p&gt;需要使用正确的type即KafkaSource，网上有些type是&lt;code class=&quot;highlighter-rouge&quot;&gt;org.apache.flume.plugins.KafkaSource&lt;/code&gt;，已经与Flume1.6.0不兼容了。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;a1.sources.r2.type &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; org.apache.flume.source.kafka.KafkaSource&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;2 Unable to start PollableSourceRunner&lt;/p&gt;

&lt;p&gt;主要原因是zookeeper.jar没有被Flume找到，因此解决这个问题的步骤如下：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;clone flume.env.template and rename one to flume.env.&lt;/li&gt;
  &lt;li&gt;edit flume.env and set the zookeeper path like this:&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;FLUME_CLASSPATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/Codes/apache-kafka/kafka_2.10-0.8.2.2/libs/zookeeper-3.4.6.jar&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;restart flume&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;3 Flume与kafka通讯速度慢&lt;/p&gt;

&lt;p&gt;把partition.key和partition.class配置去掉，调整flume日志级别为ERROR级，处理性能可以提升不少。&lt;/p&gt;

&lt;p&gt;80万数据不到10S处理完成。&lt;/p&gt;

</description>
    </item>
    
    <item>
      <title>Spark的硬件配置</title>
      <link>http://lilifeng.net/blogs/2015/10/11/spark-hardware/</link>
      <pubDate>Sun, 11 Oct 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>spark</category>
      
      <category>大数据</category>
      
      
      <category>Internet</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/10/11/spark-hardware/</guid>
      <description>&lt;p&gt;从MapReduce的兴起，就带来一种思路，就是希望通过大量廉价的机器来处理以前需要耗费昂贵资源的海量数据。这种方式事实上是一种架构的水平伸缩模式——真正的以量取胜。毕竟，以现在的硬件发展来看，CPU的核数、内存的容量以及海量存储硬盘，都慢慢变得低廉而高效。然而，对于商业应用的海量数据挖掘或分析来看，硬件成本依旧是开发商非常关注的。当然最好的结果是：既要马儿跑得快，还要马儿少吃草。&lt;/p&gt;

&lt;p&gt;Spark相对于Hadoop的MapReduce而言，确乎要跑得迅捷许多。然而，Spark这种In-Memory的计算模式，是否在硬件资源尤其是内存资源的消耗上，要求更高呢？我既找不到这么多机器，也无法租用多台虚拟instance，再没法测评的情况下，只要寻求Spark的官方网站，又或者通过Google搜索。从Spark官方网站，Databricks公司Patrick Wendell的演讲以及Matei Zaharia的Spark论文，找到了一些关于Spark硬件配置的支撑数据。&lt;/p&gt;

&lt;p&gt;Spark与存储系统&lt;/p&gt;

&lt;p&gt;如果Spark使用HDFS作为存储系统，则可以有效地运用Spark的standalone mode cluster，让Spark与HDFS部署在同一台机器上。这种模式的部署非常简单，且读取文件的性能更高。当然，Spark对内存的使用是有要求的，需要合理分配它与HDFS的资源。因此，需要配置Spark和HDFS的环境变量，为各自的任务分配内存和CPU资源，避免相互之间的资源争用。&lt;/p&gt;

&lt;p&gt;若HDFS的机器足够好，这种部署可以优先考虑。若数据处理的执行效率要求非常高，那么还是需要采用分离的部署模式，例如部署在Hadoop YARN集群上。&lt;/p&gt;

&lt;p&gt;Spark对磁盘的要求&lt;/p&gt;

&lt;p&gt;Spark是in memory的迭代式运算平台，因此它对磁盘的要求不高。Spark官方推荐为每个节点配置4-8块磁盘，且并不需要配置为RAID（即将磁盘作为单独的mount point）。然后，通过配置spark.local.dir来指定磁盘列表。&lt;/p&gt;

&lt;p&gt;Spark对内存的要求&lt;/p&gt;

&lt;p&gt;Spark虽然是in memory的运算平台，但从官方资料看，似乎本身对内存的要求并不是特别苛刻。官方网站只是要求内存在8GB之上即可（Impala要求机器配置在128GB）。当然，真正要高效处理，仍然是内存越大越好。若内存超过200GB，则需要当心，因为JVM对超过200GB的内存管理存在问题，需要特别的配置。&lt;/p&gt;

&lt;p&gt;内存容量足够大，还得真正分给了Spark才行。Spark建议需要提供至少75%的内存空间分配给Spark，至于其余的内存空间，则分配给操作系统与buffer cache。这就需要部署Spark的机器足够干净。&lt;/p&gt;

&lt;p&gt;考虑内存消耗问题，倘若我们要处理的数据仅仅是进行一次处理，用完即丢弃，就应该避免使用cache或persist，从而降低对内存的损耗。若确实需要将数据加载到内存中，而内存又不足以加载，则可以设置Storage Level。0.9版本的Spark提供了三种Storage Level：MEMORY_ONLY（这是默认值），MEMORY_AND_DISK，以及DISK_ONLY。&lt;/p&gt;

&lt;p&gt;关于数据的持久化，Spark默认是持久化到内存中。但它也提供了三种持久化RDD的存储方式：&lt;/p&gt;

&lt;p&gt;in-memory storage as deserialized Java objects&lt;/p&gt;

&lt;p&gt;in-memory storage as serialised data&lt;/p&gt;

&lt;p&gt;on-disk storage&lt;/p&gt;

&lt;p&gt;第一种存储方式性能最优，第二种方式则对RDD的展现方式（Representing）提供了扩展，第三种方式则用于内存不足时。&lt;/p&gt;

&lt;p&gt;然而，在最新版（V1.0.2）的Spark中，提供了更多的Storage Level选择。一个值得注意的选项是OFF_HEAP，它能够将RDD以序列化格式存储到Tachyon中。相比MEMORY_ONLY_SER，这一选项能够减少执行垃圾回收，使Spark的执行器（executor）更小，并能共享内存池。Tachyon是一个基于内存的分布式文件系统，性能远超HDFS。Tachyon与Spark同源同宗，都烙有伯克利AMPLab的印记。目前，Tachyon的版本为0.5.0，还处于实验阶段。&lt;/p&gt;

&lt;p&gt;注意，RDDs是Lazy的，在执行Transformation操作如map、filter时，并不会提交Job，只有在执行Action操作如count、first时，才会执行Job，此时才会进行数据的加载。当然，对于一些shuffle操作，例如reduceByKey，虽然仅是Transformation操作，但它在执行时会将一些中间数据进行持久化，而无需显式调用persist()函数。这是为了应对当节点出现故障时，能够避免针对大量数据进行重计算。要计算Spark加载的Dataset大小，可以通过Spark提供的Web UI Monitoring工具来帮助分析与判断。&lt;/p&gt;

&lt;p&gt;Spark的RDD是具有分区（partition）的，Spark并非是将整个RDD一次性加载到内存中。Spark针对partition提供了eviction policy，这一Policy采用了LRU（Least Recently Used）机制。当一个新的RDD分区需要计算时，如果没有合适的空间存储，就会根据LRU策略，将最少访问的RDD分区弹出，除非这个新分区与最少访问的分区属于同一个RDD。这也在一定程度上缓和了对内存的消耗。&lt;/p&gt;

&lt;p&gt;Spark对内存的消耗主要分为三部分：&lt;/p&gt;

&lt;p&gt;数据集中对象的大小；&lt;/p&gt;

&lt;p&gt;访问这些对象的内存消耗；&lt;/p&gt;

&lt;p&gt;垃圾回收GC的消耗。&lt;/p&gt;

&lt;p&gt;一个通常的内存消耗计算方法是：内存消耗大小= 对象字段中原生数据 * (2~5)。 这是因为Spark运行在JVM之上，操作的Java对象都有定义的“object header”，而数据结构（如Map，LinkedList）对象自身也需要占用内存空间。此外，对于存储在数据结构中的基本类型，还需要装箱（Boxing）。Spark也提供了一些内存调优机制，例如执行对象的序列化，可以释放一部分内存空间。还可以通过为JVM设置flag来标记存放的字节数（选择4个字节而非8个字节）。在JDK 7下，还可以做更多优化，例如对字符编码的设置。这些配置都可以在spark-env.sh中设置。&lt;/p&gt;

&lt;p&gt;Spark对网络的要求&lt;/p&gt;

&lt;p&gt;Spark属于网络绑定型系统，因而建议使用10G及以上的网络带宽。&lt;/p&gt;

&lt;p&gt;Spark对CPU的要求&lt;/p&gt;

&lt;p&gt;Spark可以支持一台机器扩展至数十个CPU core，它实现的是线程之间最小共享。若内存足够大，则制约运算性能的就是网络带宽与CPU数。&lt;/p&gt;

&lt;p&gt;Spark官方利用Amazon EC2的环境对Spark进行了基准测评。例如，在交互方式下进行数据挖掘（Interative Data Mining），租用Amazon EC2的100个实例，配置为8核、68GB的内存。对1TB的维基百科页面查阅日志（维基百科两年的数据）进行数据挖掘。在查询时，针对整个输入数据进行全扫描，只需要耗费5-7秒的时间。如下图所示：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/151011_1.png&quot; alt=&quot;DataSize&quot; /&gt;&lt;/p&gt;

&lt;p&gt;在Matei Zaharia的Spark论文中还给出了一些使用Spark的真实案例。视频处理公司Conviva，使用Spark将数据子集加载到RDD中。报道说明，对于200GB压缩过的数据进行查询和聚合操作，并运行在两台Spark机器上，占用内存为96GB，执行完全部操作需要耗费30分钟左右的时间。同比情况下，Hadoop需要耗费20小时。注意：之所以200GB的压缩数据只占用96GB内存，是因为RDD的处理方式，使得我们可以只加载匹配客户过滤的行和列，而非所有压缩数据。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hadoop VS Spark</title>
      <link>http://lilifeng.net/blogs/2015/10/10/spark-vs-hadoop/</link>
      <pubDate>Sat, 10 Oct 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>spark</category>
      
      <category>hadoop</category>
      
      <category>大数据</category>
      
      
      <category>Internet</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/10/10/spark-vs-hadoop/</guid>
      <description>&lt;p&gt;Hadoop
首先看一下Hadoop解决了什么问题，Hadoop就是解决了大数据（大到一台计算机无法进行存储，一台计算机无法在要求的时间内进行处理）的可靠存储和处理。
HDFS，在由普通PC组成的集群上提供高可靠的文件存储，通过将块保存多个副本的办法解决服务器或硬盘坏掉的问题。
MapReduce，通过简单的Mapper和Reducer的抽象提供一个编程模型，可以在一个由几十台上百台的PC组成的不可靠集群上并发地，分布式地处理大量的数据集，而把并发、分布式（如机器间通信）和故障恢复等计算细节隐藏起来。而Mapper和Reducer的抽象，又是各种各样的复杂数据处理都可以分解为的基本元素。这样，复杂的数据处理可以分解为由多个Job（包含一个Mapper和一个Reducer）组成的有向无环图（DAG）,然后每个Mapper和Reducer放到Hadoop集群上执行，就可以得出结果。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/151010_1.jpg&quot; alt=&quot;Map&amp;amp;Reduce&quot; /&gt;&lt;/p&gt;

&lt;p&gt;用MapReduce统计一个文本文件中单词出现的频率的示例WordCount请参见：WordCount - Hadoop Wiki，如果对MapReduce不恨熟悉，通过该示例对MapReduce进行一些了解对理解下文有帮助。&lt;/p&gt;

&lt;p&gt;在MapReduce中，Shuffle是一个非常重要的过程，正是有了看不见的Shuffle过程，才可以使在MapReduce之上写数据处理的开发者完全感知不到分布式和并发的存在。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/151010_2.jpg&quot; alt=&quot;Hadoop Definitive Guide By Tom White&quot; /&gt;&lt;/p&gt;

&lt;p&gt;广义的Shuffle是指图中在Map和Reuce之间的一系列过程。&lt;/p&gt;

&lt;p&gt;Hadoop的局限和不足
但是，MapRecue存在以下局限，使用起来比较困难。
抽象层次低，需要手工编写代码来完成，使用上难以上手。
只提供两个操作，Map和Reduce，表达力欠缺。
一个Job只有Map和Reduce两个阶段（Phase），复杂的计算需要大量的Job完成，Job之间的依赖关系是由开发者自己管理的。
处理逻辑隐藏在代码细节中，没有整体逻辑
中间结果也放在HDFS文件系统中
ReduceTask需要等待所有MapTask都完成后才可以开始
时延高，只适用Batch数据处理，对于交互式数据处理，实时数据处理的支持不够
对于迭代式数据处理性能比较差&lt;/p&gt;

&lt;p&gt;比如说，用MapReduce实现两个表的Join都是一个很有技巧性的过程，如下图所示：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/151010_3.jpg&quot; alt=&quot;用MapReduce实现两个表的Join&quot; /&gt;&lt;/p&gt;

&lt;p&gt;因此，在Hadoop推出之后，出现了很多相关的技术对其中的局限进行改进，如Pig，Cascading，JAQL，OOzie，Tez，Spark等。&lt;/p&gt;

&lt;p&gt;Apache Pig
Apache Pig也是Hadoop框架中的一部分，Pig提供类SQL语言（Pig Latin）通过MapReduce来处理大规模半结构化数据。而Pig Latin是更高级的过程语言，通过将MapReduce中的设计模式抽象为操作，如Filter，GroupBy，Join，OrderBy，由这些操作组成有向无环图（DAG）。例如如下程序：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;n&quot;&gt;visits&lt;/span&gt;             &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;load&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;‘&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;visits&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;’&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gVisits&lt;/span&gt;          &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;visits&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;visitCounts&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gVisits&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;generate&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;visits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;urlInfo&lt;/span&gt;          &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;load&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;‘&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlInfo&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;’&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;category&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pRank&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;visitCounts&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;join&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;visitCounts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urlInfo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;gCategories&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;visitCounts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;category&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;topUrls&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gCategories&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;generate&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;visitCounts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;store&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;topUrls&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;into&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;‘&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;topUrls&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;’&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;描述了数据处理的整个过程。&lt;/p&gt;

&lt;p&gt;而Pig Latin又是通过编译为MapReduce，在Hadoop集群上执行的。上述程序被编译成MapReduce时，会产生如下图所示的Map和Reduce：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/151010_4.jpg&quot; alt=&quot;Pig Latin被编译成MapReduce&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Apache Pig解决了MapReduce存在的大量手写代码，语义隐藏，提供操作种类少的问题。类似的项目还有Cascading，JAQL等。&lt;/p&gt;

&lt;p&gt;Apache Tez
Apache Tez，Tez是HortonWorks的Stinger Initiative的的一部分。作为执行引擎，Tez也提供了有向无环图（DAG），DAG由顶点（Vertex）和边（Edge）组成，Edge是对数据的移动的抽象，提供了One-To-One，BroadCast，和Scatter-Gather三种类型，只有Scatter-Gather才需要进行Shuffle。&lt;/p&gt;

&lt;p&gt;以如下SQL为例：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;AVERAGE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;price&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;itemId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;itemId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;state&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/img/151010_5.jpg&quot; alt=&quot;MapReduce VS Tez&quot; /&gt;&lt;/p&gt;

&lt;p&gt;途中蓝色方块表示Map，绿色方块表示Reduce，云状表示写屏障（write barrier，一种内核机制，可以理解为持久的写），Tez的优化主要体现在：
去除了连续两个作业之间的写屏障
去除了每个工作流中多余的Map阶段（Stage）
通过提供DAG语义和操作，提供了整体的逻辑，通过减少不必要的操作，Tez提升了数据处理的执行性能。&lt;/p&gt;

&lt;p&gt;Apache Spark
Apache Spark是一个新兴的大数据处理的引擎，主要特点是提供了一个集群的分布式内存抽象，以支持需要工作集的应用。&lt;/p&gt;

&lt;p&gt;这个抽象就是RDD（Resilient Distributed Dataset），RDD就是一个不可变的带分区的记录集合，RDD也是Spark中的编程模型。Spark提供了RDD上的两类操作，转换和动作。转换是用来定义一个新的RDD，包括map, flatMap, filter, union, sample, join, groupByKey, cogroup, ReduceByKey, cros, sortByKey, mapValues等，动作是返回一个结果，包括collect, reduce, count, save, lookupKey。&lt;/p&gt;

&lt;p&gt;Spark的API非常简单易用，Spark的WordCount的示例如下所示：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spark&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SparkContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;master&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;appName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sparkHome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jars&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spark&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;textFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hdfs://...&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;counts&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;flatMap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
                 &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
                 &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;reduceByKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;counts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;saveAsTextFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hdfs://...&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;其中的file是根据HDFS上的文件创建的RDD，后面的flatMap，map，reduceByKe都创建出一个新的RDD，一个简短的程序就能够执行很多个转换和动作。&lt;/p&gt;

&lt;p&gt;在Spark中，所有RDD的转换都是是惰性求值的。RDD的转换操作会生成新的RDD，新的RDD的数据依赖于原来的RDD的数据，每个RDD又包含多个分区。那么一段程序实际上就构造了一个由相互依赖的多个RDD组成的有向无环图（DAG）。并通过在RDD上执行动作将这个有向无环图作为一个Job提交给Spark执行。&lt;/p&gt;

&lt;p&gt;例如，上面的WordCount程序就会生成如下的DAG&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;scala&amp;gt; &lt;/span&gt;counts.toDebugString
res0: String &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
MapPartitionsRDD[7] at reduceByKey at &amp;lt;console&amp;gt;:14 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1 partitions&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  ShuffledRDD[6] at reduceByKey at &amp;lt;console&amp;gt;:14 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1 partitions&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    MapPartitionsRDD[5] at reduceByKey at &amp;lt;console&amp;gt;:14 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1 partitions&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
      MappedRDD[4] at map at &amp;lt;console&amp;gt;:14 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1 partitions&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        FlatMappedRDD[3] at flatMap at &amp;lt;console&amp;gt;:14 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1 partitions&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
          MappedRDD[1] at textFile at &amp;lt;console&amp;gt;:12 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1 partitions&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
            HadoopRDD[0] at textFile at &amp;lt;console&amp;gt;:12 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1 partitions&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Spark对于有向无环图Job进行调度，确定阶段（Stage），分区（Partition），流水线（Pipeline），任务（Task）和缓存（Cache），进行优化，并在Spark集群上运行Job。RDD之间的依赖分为宽依赖（依赖多个分区）和窄依赖（只依赖一个分区），在确定阶段时，需要根据宽依赖划分阶段。根据分区划分任务。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/151010_6.jpg&quot; alt=&quot;Spark DAG&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Spark支持故障恢复的方式也不同，提供两种方式，Linage，通过数据的血缘关系，再执行一遍前面的处理，Checkpoint，将数据集存储到持久存储中。&lt;/p&gt;

&lt;p&gt;Spark为迭代式数据处理提供更好的支持。每次迭代的数据可以保存在内存中，而不是写入文件。&lt;/p&gt;

&lt;p&gt;Spark的性能相比Hadoop有很大提升，2014年10月，Spark完成了一个Daytona Gray类别的Sort Benchmark测试，排序完全是在磁盘上进行的，与Hadoop之前的测试的对比结果如表格所示：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/151010_7.jpg&quot; alt=&quot;Spark Sort Benchmark&quot; /&gt;&lt;/p&gt;

&lt;p&gt;从表格中可以看出排序100TB的数据（1万亿条数据），Spark只用了Hadoop所用1/10的计算资源，耗时只有Hadoop的1/3。&lt;/p&gt;

&lt;p&gt;Spark的优势不仅体现在性能提升上的，Spark框架为批处理（Spark Core），交互式（Spark SQL），流式（Spark Streaming），机器学习（MLlib），图计算（GraphX）提供一个统一的数据处理平台，这相对于使用Hadoop有很大优势。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/151010_8.jpg&quot; alt=&quot;Spark Architect&quot; /&gt;&lt;/p&gt;

&lt;p&gt;按照Databricks的连城的说法是One Stack To Rule Them All&lt;/p&gt;

&lt;p&gt;特别是在有些情况下，你需要进行一些ETL工作，然后训练一个机器学习的模型，最后进行一些查询，如果是使用Spark，你可以在一段程序中将这三部分的逻辑完成形成一个大的有向无环图（DAG），而且Spark会对大的有向无环图进行整体优化。&lt;/p&gt;

&lt;p&gt;例如下面的程序：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;points&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sqlContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;   &lt;span class=&quot;err&quot;&gt;“&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;latitude&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;longitude&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;historic_tweets&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;”&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  
&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;KMeans&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;points&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  
&lt;span class=&quot;n&quot;&gt;sc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;twitterStream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(...).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;closestCenter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;reduceByWindow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;“&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;”&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;（示例来源：http://www.slideshare.net/Hadoop_Summit/building-a-unified-data-pipeline-in-apache-spark）
这段程序的第一行是用Spark SQL 查寻出了一些点，第二行是用MLlib中的K-means算法使用这些点训练了一个模型，第三行是用Spark Streaming处理流中的消息，使用了训练好的模型。&lt;/p&gt;

&lt;p&gt;Lambda Architecture
Lambda Architecture是一个大数据处理平台的参考模型，如下图所示：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/151010_9.jpg&quot; alt=&quot;Lambda Architecture&quot; /&gt;&lt;/p&gt;

&lt;p&gt;其中包含3层，Batch Layer，Speed Layer和Serving Layer，由于Batch Layer和Speed Layer的数据处理逻辑是一致的，如果用Hadoop作为Batch Layer，而用Storm作为Speed Layer，你需要维护两份使用不同技术的代码。&lt;/p&gt;

&lt;p&gt;而Spark可以作为Lambda Architecture一体化的解决方案,大致如下：
Batch Layer，HDFS+Spark Core，将实时的增量数据追加到HDFS中，使用Spark Core批量处理全量数据，生成全量数据的视图。，
Speed Layer，Spark Streaming来处理实时的增量数据，以较低的时延生成实时数据的视图。
Serving Layer，HDFS+Spark SQL（也许还有BlinkDB），存储Batch Layer和Speed Layer输出的视图，提供低时延的即席查询功能，将批量数据的视图与实时数据的视图合并。
总结
如果说，MapReduce是公认的分布式数据处理的低层次抽象，类似逻辑门电路中的与门，或门和非门，那么Spark的RDD就是分布式大数据处理的高层次抽象，类似逻辑电路中的编码器或译码器等。&lt;/p&gt;

&lt;p&gt;RDD就是一个分布式的数据集合（Collection），对这个集合的任何操作都可以像函数式编程中操作内存中的集合一样直观、简便，但集合操作的实现确是在后台分解成一系列Task发送到几十台上百台服务器组成的集群上完成的。最近新推出的大数据处理框架Apache Flink也使用数据集（Data Set）和其上的操作作为编程模型的。&lt;/p&gt;

&lt;p&gt;由RDD组成的有向无环图（DAG）的执行是调度程序将其生成物理计划并进行优化，然后在Spark集群上执行的。Spark还提供了一个类似于MapReduce的执行引擎，该引擎更多地使用内存，而不是磁盘，得到了更好的执行性能。&lt;/p&gt;

&lt;p&gt;那么Spark解决了Hadoop的哪些问题呢？
抽象层次低，需要手工编写代码来完成，使用上难以上手。
=&amp;gt;基于RDD的抽象，实数据处理逻辑的代码非常简短。。
只提供两个操作，Map和Reduce，表达力欠缺。
=&amp;gt;提供很多转换和动作，很多基本操作如Join，GroupBy已经在RDD转换和动作中实现。
一个Job只有Map和Reduce两个阶段（Phase），复杂的计算需要大量的Job完成，Job之间的依赖关系是由开发者自己管理的。
=&amp;gt;一个Job可以包含RDD的多个转换操作，在调度时可以生成多个阶段（Stage），而且如果多个map操作的RDD的分区不变，是可以放在同一个Task中进行。
处理逻辑隐藏在代码细节中，没有整体逻辑
=&amp;gt;在Scala中，通过匿名函数和高阶函数，RDD的转换支持流式API，可以提供处理逻辑的整体视图。代码不包含具体操作的实现细节，逻辑更清晰。
中间结果也放在HDFS文件系统中
=&amp;gt;中间结果放在内存中，内存放不下了会写入本地磁盘，而不是HDFS。
ReduceTask需要等待所有MapTask都完成后才可以开始
=&amp;gt; 分区相同的转换构成流水线放在一个Task中运行，分区不同的转换需要Shuffle，被划分到不同的Stage中，需要等待前面的Stage完成后才可以开始。
时延高，只适用Batch数据处理，对于交互式数据处理，实时数据处理的支持不够
=&amp;gt;通过将流拆成小的batch提供Discretized Stream处理流数据。
对于迭代式数据处理性能比较差
=&amp;gt;通过在内存中缓存数据，提高迭代式计算的性能。&lt;/p&gt;

&lt;p&gt;因此，Hadoop MapReduce会被新一代的大数据处理平台替代是技术发展的趋势，而在新一代的大数据处理平台中，Spark目前得到了最广泛的认可和支持，从参加Spark Summit 2014的厂商的各种基于Spark平台进行的开发就可以看出一二。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Linux下用Shell批量修改文本类型文件格式</title>
      <link>http://lilifeng.net/blogs/2015/10/09/linux-shell-change-file-encoding/</link>
      <pubDate>Fri, 09 Oct 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>原生</category>
      
      <category>shell</category>
      
      <category>linux</category>
      
      
      <category>Internet</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/10/09/linux-shell-change-file-encoding/</guid>
      <description>
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;find ./ -type f -iname &lt;span class=&quot;s1&quot;&gt;&#39;*.txt&#39;&lt;/span&gt; | &lt;span class=&quot;k&quot;&gt;while &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;read &lt;/span&gt;i; 
&lt;span class=&quot;k&quot;&gt;do
	&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%.*&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
	iconv -f gbk -t utf-8 &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%.*&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;.txt&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&amp;gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;.tmp&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
	mv &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;.tmp&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%.*&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;.txt&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;;
&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
    </item>
    
    <item>
      <title>【程序化购买】系列之一：入门与简介</title>
      <link>http://lilifeng.net/blogs/2015/09/18/speech-pb-c1-introduction/</link>
      <pubDate>Fri, 18 Sep 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>原生</category>
      
      <category>程序化购买</category>
      
      <category>讲座</category>
      
      
      <category>广告平台</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/09/18/speech-pb-c1-introduction/</guid>
      <description>&lt;p&gt;20多年前，也就是1994年10月27日，有史以来第一个网络横幅广告登上了hotwired.com网。在之后的四个月里，看到这个广告的网民中有44％的人点击了它。
20多年后，现如今互联网上的网络横幅广告总体的点击率一般在0.2%-0.5%之间，20年间相差了100-200倍的差距。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/file/PBC1-Introduction.pdf&quot;&gt;程序化购买】系列之一：入门与简介&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Stay Hungry, Stay Foolish - Jobs</title>
      <link>http://lilifeng.net/blogs/2015/08/11/stay-hungry-stay-foolish/</link>
      <pubDate>Tue, 11 Aug 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>Jobs</category>
      
      
      <category>博文</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/08/11/stay-hungry-stay-foolish/</guid>
      <description>&lt;p&gt;‘You’ve got to find what you love,’ Jobs says&lt;/p&gt;

&lt;p&gt;This is the text of the Commencement address by Steve Jobs, CEO of Apple Computer and of Pixar Animation Studios, delivered on June 12, 2005.&lt;/p&gt;

&lt;p&gt;I am honored to be with you today at your commencement from one of the finest universities in the world. Truth be told, I never graduated from college and this is the closest I’ve ever gotten to a college graduation. Today I want to tell you three stories from my life. That’s it. No big deal. Just 3 stories.&lt;/p&gt;

&lt;p&gt;The first story is about connecting the dots.&lt;/p&gt;

&lt;p&gt;I dropped out of Reed College after the first 6 months, but then stayed around as a drop-in for another 18 months or so before I really quit. So why did I drop out?&lt;/p&gt;

&lt;p&gt;It started before I was born. My biological mother was a young, unwed college graduate student, and she decided to put me up for adoption. She felt very strongly that I should be adopted by college graduates, so everything was all set for me to be adopted at birth by a lawyer and his wife. Except that when I popped out they decided at the last minute that they really wanted a girl. So my parents, who were on a waiting list, got a call in the middle of the night asking: “We’ve got an unexpected baby boy; do you want him?” They said: “Of course.” My biological mother found out later that my mother had never graduated from college and that my father had never graduated from high school. She refused to sign the final adoption papers. She only relented a few months later when my parents promised that I would go to the college. This was the start in my life.&lt;/p&gt;

&lt;p&gt;And 17 years later I did go to college. But I naively chose a college that was almost as expensive as Stanford, and all of my working-class parents’ savings were being spent on my college tuition. After six months, I couldn’t see the value in it. I had no idea what I wanted to do with my life and no idea how college was going to help me figure it out. And here I was spending all of the money my parents had saved their entire life. So I decided to drop out and trust that it would all work out OK. It was pretty scary at the time, but looking back it was one of the best decisions I ever made. The minute I dropped out I could stop taking the required classes that didn’t interest me, and begin dropping in on the ones that looked far more interesting.&lt;/p&gt;

&lt;p&gt;It wasn’t all romantic. I didn’t have a dorm room, so I slept on the floor in friends’ rooms, I returned coke bottles for the 5¢ deposits to buy food with, and I would walk the 7 miles across town every Sunday night to get one good meal a week at the Hare Krishna temple. I loved it. And much of what I stumbled into by following my curiosity and intuition turned out to be priceless later on. Let me give you one example:&lt;/p&gt;

&lt;p&gt;Reed College at that time offered perhaps the best calligraphy instruction in the country. Throughout the campus every poster, every label on every drawer, was beautifully hand calligraphed. Because I had dropped out and didn’t have to take the normal classes, I decided to take a calligraphy class to learn how to do this. I learned about serif and san serif typefaces, about varying the amount of space between different letter combinations, about what makes great typography great. It was beautiful, historical, artistically subtle in a way that science can’t capture, and I found it fascinating.&lt;/p&gt;

&lt;p&gt;None of this had even a hope of any practical application in my life. But ten years later, when we were designing the first Macintosh computer, it all came back to me. And we designed it all into the Mac. It was the first computer with beautiful typography. If I had never dropped in on that single course in college, the Mac would have never had multiple typefaces or proportionally spaced fonts. And since Windows just copied the Mac, its likely that no personal computer would have them. If I had never dropped out, I would have never dropped in on this calligraphy class, and personal computers might not have the wonderful typography that they do. Of course it was impossible to connect the dots looking forward when I was in college. But it was very, very clear looking backwards ten years later.&lt;/p&gt;

&lt;p&gt;Again, you can’t connect the dots looking forward; you can only connect them looking backwards. So you have to trust that the dots will somehow connect in your future. You have to trust in something — your gut, destiny, life, karma, whatever, because believing that the dots will connect down the road would give you the confidence to follow your heart even when it will lead you off the well worn path and that will make all the difference.&lt;/p&gt;

&lt;p&gt;My second story is about love and loss.&lt;/p&gt;

&lt;p&gt;I was lucky — I found what I loved to do early in life. Woz and I started Apple in my parents garage when I was 20. We worked hard, and in 10 years Apple had grown from just the two of us in a garage into a $2 billion company with over 4000 employees. We had just released our finest creation — the Macintosh — a year earlier, and I had just turned 30. And then I got fired. How can you get fired from a company you started? Well, as Apple grew we hired someone who I thought was very talented to run the company with me, and for the first year or so things went well. But then our visions of the future began to diverge and eventually we had a falling out. When we did, our Board of Directors sided with him. So at 30 I was out. And very publicly out. What had been the focus of my entire adult life was gone, and it was devastating.&lt;/p&gt;

&lt;p&gt;I really didn’t know what to do for a few months. I felt that I had let the previous generation of entrepreneurs down - that I had dropped the baton as it was being passed to me. I met with David Packard and Bob Noyce and tried to apologize for screwing up so badly. I was a very public failure, and I even thought about running away from the valley. But something slowly began to dawn on me — I still loved what I did. The turn of events at Apple had not changed that one bit. I had been rejected, but I was still in love. And so I decided to start over.&lt;/p&gt;

&lt;p&gt;I didn’t see it then, but it turned out that getting fired from Apple was the best thing that could have ever happened to me. The heaviness of being successful was replaced by the lightness of being a beginner again, less sure about everything. It freed me to enter one of the most creative periods of my life.&lt;/p&gt;

&lt;p&gt;During the next five years, I started a company named NeXT, another company named Pixar, and fell in love with an amazing woman who would become my wife. Pixar went on to create the world’s first computer animated feature film, Toy Story, and is now the most successful animation studio in the world. In a remarkable turn of events, Apple bought NeXT, I returned to Apple, and the technology we developed at NeXT is at the heart of Apple’s current renaissance. And Laurene and I have a wonderful family together.&lt;/p&gt;

&lt;p&gt;I’m pretty sure none of this would have happened if I hadn’t been fired from Apple. It was awful tasting medicine, but I guess the patient needed it. Sometimes life hits you in the head with a brick. Don’t lose faith. I’m convinced that the only thing that kept me going was that I loved what I did. You’ve got to find what you love. And that is as true for your work as it is for your lovers. Your work is going to fill a large part of your life, and the only way to be truly satisfied is to do what you believe is great work. And the only way to do great work is to love what you do. If you haven’t found it yet, keep looking. Don’t settle. As with all matters of the heart, you’ll know when you find it. And, like any great relationship, it just gets better and better as the years roll on. So keep looking. Don’t settle.&lt;/p&gt;

&lt;p&gt;My third story is about death.&lt;/p&gt;

&lt;p&gt;When I was 17, I read a quote that went something like: “If you live each day as if it was your last, someday you’ll most certainly be right.” It made an impression on me, and since then, for the past 33 years, I have looked in the mirror every morning and asked myself: “If today were the last day of my life, would I want to do what I am about to do today?” And whenever the answer has been “No” for too many days in a row, I know I need to change something.&lt;/p&gt;

&lt;p&gt;Remembering that I’ll be dead soon is the most important tool I’ve ever encountered to help me make the big choices in life. Because almost everything — all external expectations, all pride, all fear of embarrassment or failure - these things just fall away in the face of death, leaving only what is truly important. Remembering that you are going to die is the best way I know to avoid the trap of thinking you have something to lose. You are already naked. There is no reason not to follow your heart.&lt;/p&gt;

&lt;p&gt;About a year ago I was diagnosed with cancer. I had a scan at 7:30 in the morning, and it clearly showed a tumor on my pancreas. I didn’t even know what a pancreas was. The doctors told me this was almost certainly a type of cancer that is incurable, and that I should expect to live no longer than three to six months. My doctor advised me to go home and get my affairs in order, which is doctor’s code for prepare to die. It means to try and to tell your kids everything you thought you’d have the next 10 years to tell them in just a few months. It means to make sure everything is buttoned up so that it will be as easy as possible for your family. It means to say your goodbyes.&lt;/p&gt;

&lt;p&gt;I lived with that diagnosis all day. Later that evening I had a biopsy, where they stuck an endoscope down my throat, through my stomach and into my intestines, put a needle into my pancreas and got a few cells from the tumor. I was sedated, but my wife, who was there, told me that when they viewed the cells under a microscope the doctors started crying because it turned out to be a very rare form of pancreatic cancer that is curable with surgery. I had the surgery and I’m fine now.&lt;/p&gt;

&lt;p&gt;This was the closest I’ve been to facing death, and I hope its the closest I get for a few more decades. Having lived through it, I can now say this to you with a bit more certainty than when death was a useful but purely intellectual concept:&lt;/p&gt;

&lt;p&gt;No one wants to die. Even people who want to go to heaven don’t want to die to get there. And yet death is the destination we all share. No one has ever escaped it. And that is as it should be, because Death is very likely the single best invention of Life. It is Life’s change agent. It clears out the old to make way for the new. Right now the new is you, but someday not too long from now, you will gradually become the old and be cleared away. Sorry to be so dramatic, but it is quite true.&lt;/p&gt;

&lt;p&gt;Your time is limited, so don’t waste it living someone else’s life. Don’t be trapped by dogma — which is living with the results of other people’s thinking. Don’t let the noise of others’ opinions drown out your own inner voice. And most important, have the courage to follow your heart and intuition. They somehow already know what you truly want to become. Everything else is secondary.&lt;/p&gt;

&lt;p&gt;When I was young, there was an amazing publication called The Whole Earth Catalog, which was one of the bibles of my generation. It was created by a fellow named Stewart Brand not far from here in Menlo Park, and he brought it to life with his poetic touch. This was in the late 1960’s, before personal computers and desktop publishing, so it was all made with typewriters, scissors, and polaroid cameras. It was sort of like Google in paperback form, 35 years before Google came along: it was idealistic, and overflowing with neat tools and great notions.&lt;/p&gt;

&lt;p&gt;Stewart and his team put out several issues of The Whole Earth Catalog, and then when it had run its course, they put out a final issue. It was the mid-1970s, and I was your age. On the back cover of their final issue was a photograph of an early morning country road, the kind you might find yourself hitchhiking on if you were so adventurous. Beneath it were the words: “Stay Hungry. Stay Foolish.” It was their farewell message as they signed off. Stay Hungry. Stay Foolish. And I have always wished that for myself. And now, as you graduate to begin anew, I wish that for you.&lt;/p&gt;

&lt;p&gt;Stay Hungry. Stay Foolish.&lt;/p&gt;

&lt;p&gt;Thank you all very much.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Perforce意外重启后无法启动的问题</title>
      <link>http://lilifeng.net/blogs/2015/08/10/perforce-unexpect-restart-fix/</link>
      <pubDate>Mon, 10 Aug 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>原生</category>
      
      <category>Perforce</category>
      
      
      <category>Internet</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/08/10/perforce-unexpect-restart-fix/</guid>
      <description>&lt;p&gt;1 首先删除p4.protect，备份并删除p4.counters&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;rm -rf p4.protect
mv p4.counters p4.counters.bak&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;2 备份用户信息文件并删除&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;mv p4.users p4.users.bak&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;3 重启perforce服务&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;services perforce start&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;4 连接Perforce服务器并建立新用户&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;./p4v.exe
new user aaa //密码需要符合要求，如大小写+数字+8位以上&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;5 以新用户登录进入Perforce Admin并成为sole administrator&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;login aaa
admin login aaa as sole administrator&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;6 在Perforce Admin中重新创建所有用户并进行权限重新设置&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;user create xxx
user permission xxx&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;7 打开命令行工具，根据p4.counters.bak中的key和value进行p4 counter update&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;//example: change 2794; maxCommitChange 2794; upgrade 23;
p4 -p localhost:1666 -u ace -P %PASSWORD% -C utf8 counter -f change 3914
p4 -p localhost:1666 -u ace -P %PASSWORD% -C utf8 counter -f maxCommitChange 3914
p4 -p localhost:1666 -u ace -P %PASSWORD% -C utf8 counter -f upgrade 23&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
    </item>
    
    <item>
      <title>网络广告术语之IAB用语</title>
      <link>http://lilifeng.net/blogs/2015/08/07/Advertise-glossary-iab/</link>
      <pubDate>Fri, 07 Aug 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>术语</category>
      
      
      <category>广告平台</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/08/07/Advertise-glossary-iab/</guid>
      <description>&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Deal ID&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Cross-Device Targeting&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Cookie Usage&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Ad Serving&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Campaign Optimization&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Audience Extensions&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Dynamic Allocation&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Tech Stack&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Emerging Technology &lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Viewability Standards&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Real Time Bidding (RTB)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Supply Side Platforms (SSP)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Demand Side Platforms (DSP)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Exchanges&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Data Management Platforms (DMP)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Yield Management&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Audience Buying&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Open Marketplace&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Private Marketplace&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Automated Guaranteed&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Unreserved Fixed Rate&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Invitation Only Auction&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Open Auction&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Trading Desks&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;New Ad Networks&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Managed Services&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Programmatic IPOs/M&amp;amp;A activity&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Campaign Optimization&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Price Transparency&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Audience Discovery&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Buying process&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Programmatic vendors&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Multi-channel programmatic&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Mobile Targeting&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Social vendors&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Automated Native&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Linear TV&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Radio&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>HTTP请求头系列（3）-Cookies</title>
      <link>http://lilifeng.net/blogs/2015/08/05/http-header-cookies/</link>
      <pubDate>Wed, 05 Aug 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>原生</category>
      
      <category>HTTP</category>
      
      <category>Header</category>
      
      
      <category>Internet</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/08/05/http-header-cookies/</guid>
      <description>&lt;blockquote&gt;
  &lt;p&gt;系列列表：&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;/blogs/2012/08/03/http-header-overall/&quot;&gt;HTTP请求头系列（1）-总览&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;/blogs/2012/08/04/http-header-P3P/&quot;&gt;HTTP请求头系列（2）-P3P&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;/blogs/2012/08/05/http-header-cookies/&quot;&gt;HTTP请求头系列（3）-Cookies&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Cookie相关的Http头&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;有 两个Http头部和Cookie有关：Set-Cookie和Cookie。
Set-Cookie由服务器发送，它包含在响应请求的头部中。它用于在客户端创建一个Cookie
Cookie头由客户端发送，包含在HTTP请求的头部中。注意，只有cookie的domain和path与请求的URL匹配才会发送这个cookie。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Set-Cookie Header 
    Set-Cookie响应头的格式如下所示：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;        Set-Cookie: &amp;lt;name&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;value&amp;gt;[; &amp;lt;name&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;value&amp;gt;]...
                    &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;; &lt;span class=&quot;nv&quot;&gt;expires&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;date&amp;gt;][; &lt;span class=&quot;nv&quot;&gt;domain&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;domain_name&amp;gt;]
                    &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;; &lt;span class=&quot;nv&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;some_path&amp;gt;][; secure][; httponly]

    &lt;span class=&quot;nv&quot;&gt;expires&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;date&amp;gt;: 设置cookie的有效期，如果cookie超过date所表示的日期时，cookie将失效。
                    如果没有设置这个选项，那么cookie将在浏览器关闭时失效。
                    注意：date是格林威治时间&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;GMT&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;，使用如下格式表示：
                        DAY, DD MMM YYYY HH:MM:SS GMT

                        DAY
                            The day of the week &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Sun, Mon, Tue, Wed, Thu, Fri, Sat&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.
                        DD
                            The day &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;the month &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;such as 01 &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the first day of the month&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.
                        MMM
                            The three-letter abbreviation &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the month &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Jan, Feb, Mar, Apr, May, Jun, Jul, Aug, Sep, Oct, Nov, Dec&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.
                        YYYY
                            The year.
                        HH
                            The hour value &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;military &lt;span class=&quot;nb&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;22 would be 10:00 P.M., &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;example&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.
                        MM
                            The minute value.
                        SS
                            The second value.

    &lt;span class=&quot;nv&quot;&gt;domain&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;domain_name&amp;gt; : 
    &lt;span class=&quot;nv&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;some_path&amp;gt;:
                    注：临时cookie&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;没有expires参数的cookie&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;不能带有domain选项。
                    当客户端发送一个http请求时，会将有效的cookie一起发送给服务器。
                    如果一个cookie的domain和path参数和URL匹配，那么这个cookie就是有效的。
                    一个URL中包含有domain和path，可以参考[http://www.w3school.com.cn/html/html_url.asp]&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;http://www.w3school.com.cn/html/html_url.asp&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
 


    secure   : 表示cookie只能被发送到http服务器。
    httponly : 表示cookie不能被客户端脚本获取到。&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;在程序中生成expires&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;C的方式 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;        &lt;span class=&quot;kt&quot;&gt;time_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;curTime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;tm&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gmTime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gmtime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;curTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;strExperis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;strftime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strTimeBuf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; %a, %d %b %Y %X GMT;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gmTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;JavaScript的方式 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;        &lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;expires&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toGMTString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
    </item>
    
    <item>
      <title>HTTP请求头系列（2）-P3P</title>
      <link>http://lilifeng.net/blogs/2015/08/04/http-header-P3P/</link>
      <pubDate>Tue, 04 Aug 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>原生</category>
      
      <category>HTTP</category>
      
      <category>Header</category>
      
      
      <category>Internet</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/08/04/http-header-P3P/</guid>
      <description>&lt;blockquote&gt;
  &lt;p&gt;系列列表：&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;/blogs/2012/08/03/http-header-overall/&quot;&gt;HTTP请求头系列（1）-总览&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;/blogs/2012/08/04/http-header-P3P/&quot;&gt;HTTP请求头系列（2）-P3P&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;/blogs/2012/08/05/http-header-cookies/&quot;&gt;HTTP请求头系列（3）-Cookies&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;对于IE来说(默认安全级别下)，iframe、img、link等标签都是只发送session cookie（又叫 第一方cookie），拦截本地cookie发送（又叫第三方cookie）。当这些标签跨域引用一个页面，实际上是发起了一次GET请求。&lt;/p&gt;

&lt;p&gt;如果这个跨域的请求，HTTP返回头中带有Set-Cookie ， 那么这个cookie对浏览器来说，实际上是无效的。&lt;/p&gt;

&lt;p&gt;看如下测试&lt;/p&gt;

&lt;p&gt;假设有 www.a.com    与 www.b.com 两个域&lt;/p&gt;

&lt;p&gt;在 www.b.com 上有一个页面，其中包含一个指向 www.a.com 的iframe&lt;/p&gt;

&lt;p&gt;http://www.b.com/test.html 的内容为：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;iframe&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;300&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;300&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.a.com/test.php&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/iframe&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;http://www.a.com/test.php 是一个对 a.com 域设置 cookie的页面，其内容为：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Set-Cookie: test=axis; domain=.a.com; path=/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;此时我们请求 http://www.b.com/test.html , 他包含一个iframe，会去跨域请求 www.a.com/test.php ，该php页面会尝试 set-cookie&lt;/p&gt;

&lt;p&gt;第一次请求， test.php 会 set-cookie，所以浏览器会收到一个cookie。&lt;/p&gt;

&lt;p&gt;如果 set-cookie 成功，再次请求该页面，浏览器应该会 sent 刚才 recieve 到的cookie。可是由于前面说的跨域限制，在IE里的iframe标签是 set-cookie不成功的，所以无法sent刚才收到的cookie。 这里无论是 session cookie 还是本地cookie都是一样。&lt;/p&gt;

&lt;p&gt;可以看到，第二次发包，还是没能sent出去cookie&lt;/p&gt;

&lt;p&gt;但是这种情况在加入了P3P header 后会改变。&lt;/p&gt;

&lt;p&gt;P3P header允许跨域访问隐私数据，从而可以跨域set-cookie成功&lt;/p&gt;

&lt;p&gt;我们修改 www.a.com/test.php 为&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;P3P: CP=CURa ADMa DEVa PSAo PSDo OUR BUS UNI PUR INT DEM STA PRE COM NAV OTC NOI DSP COR&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Set-Cookie: test=axis; expires=Sun, 23-Dec-2018 08:13:02 GMT; domain=.a.com; path=/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;再次访问两次上面的测试过程&lt;/p&gt;

&lt;p&gt;可以看到第二个包已经发送出了收到的cookie&lt;/p&gt;

&lt;p&gt;而我们写的javascript也能够弹出cookie了。&lt;/p&gt;

&lt;p&gt;值得注意的是，P3P header只需要设置一次，这样跟在这个P3P header后面的所有 set-cookie，都可以跨域访问了。也就是说: 被P3P header设置过一次后，之后的请求不再需要P3P header，也能够在iframe里跨域发送这些cookie。&lt;/p&gt;

&lt;p&gt;但是如果用 set-cookie 去改变设置好的cookie，则不再具有这种跨域访问特性。&lt;/p&gt;

&lt;p&gt;P3P header 还有一个特点就是同一个包里只能设置一次，后面的P3P Header不会覆盖前面的P3P header，浏览器只认第一个。&lt;/p&gt;

&lt;p&gt;P3P 是 The Platform for Privacy Preferences 的简称&lt;/p&gt;

&lt;p&gt;更多具体的内容可以参阅W3C的标准 &lt;a href=&quot;http://www.w3.org/TR/P3P/&quot;&gt;http://www.w3.org/TR/P3P/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;在这里，我们看到的很乱的 P3P header里的东西，都不知道是什么乱七八糟的策略内容，实际上这是一些简写&lt;/p&gt;

&lt;p&gt;比如 上面用到的&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;P3P: &lt;span class=&quot;nv&quot;&gt;CP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;CURa ADMa DEVa PSAo PSDo OUR BUS UNI PUR INT DEM STA PRE COM NAV OTC NOI DSP COR&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;CP 是 Compact Policy 的简写&lt;/p&gt;

&lt;p&gt;CURa 中 CUR 是 &lt;current&gt;&lt;/current&gt; 的简写， a 是 always 的简写&lt;/p&gt;

&lt;p&gt;当然P3P header也可以直接 引用一个 xml 策略文件&lt;/p&gt;

&lt;p&gt;比如这么写&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;HTTP/1.1 200 OK
P3P: &lt;span class=&quot;nv&quot;&gt;policyref&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://catalog.example.com/P3P/PolicyReferences.xml&quot;&lt;/span&gt;
Content-Type: text/html
Content-Length: 7413
Server: CC-Galaxy/1.3.18&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;使用P3P的方法还有很多，这里不一一列举了。&lt;/p&gt;

&lt;p&gt;最后，利用P3P Header 的这种特性，在实际攻击中，还是可以利用一下的。&lt;/p&gt;

&lt;p&gt;比如利用CRLF插入一个P3P header后，改变一个本地cookie的值，该cookie在之后的过程中可以被iframe引用到，也许会发生一些很奇妙的事情。&lt;/p&gt;

&lt;p&gt;具体会变成什么样我也不知道，毕竟web应用安全和环境的关系是越来越紧密了。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>HTTP请求头系列（1）-总览</title>
      <link>http://lilifeng.net/blogs/2015/08/03/http-header-overall/</link>
      <pubDate>Mon, 03 Aug 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>原生</category>
      
      <category>HTTP</category>
      
      <category>Header</category>
      
      
      <category>Internet</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/08/03/http-header-overall/</guid>
      <description>&lt;blockquote&gt;
  &lt;p&gt;系列列表：&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;/blogs/2012/08/03/http-header-overall/&quot;&gt;HTTP请求头系列（1）-总览&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;/blogs/2012/08/04/http-header-P3P/&quot;&gt;HTTP请求头系列（2）-P3P&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;/blogs/2012/08/05/http-header-cookies/&quot;&gt;HTTP请求头系列（3）-Cookies&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;先来看一个现成的http请求头：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;http://192.168.10.214/track?platform&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1&amp;amp;type&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1&amp;amp;item&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;hello&amp;amp;pos&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1,2,3,4&amp;amp;url&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;www.baidu.com&amp;amp;aid&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1111

General
	Remote Address:192.168.10.214:80
	Request URL:http://192.168.10.214/track?platform&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1&amp;amp;type&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1&amp;amp;item&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;hello&amp;amp;pos&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1,2,3,4&amp;amp;url&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;www.baidu.com&amp;amp;aid&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1111
	Request Method:GET
	Status Code:200 OK
Response Headers
	Cache-Control:private, no-cache, no-cache&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Set-Cookie, proxy-revalidate
	Connection:keep-alive
	Content-Length:43
	Content-Type:image/gif
	Date:Tue, 11 Aug 2015 02:38:28 GMT
	P3p:CP&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;CURa ADMa DEVa PSAo PSDo OUR BUS UNI PUR INT DEM STA PRE COM NAV OTC NOI DSP COR
	Pragma:no-cache
	Server:nginx/1.8.0
	Set-Cookie:mmsid&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0000000000000031;expires&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Wed, 10 Aug 2016 02:38:28 GMT;domain&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;192.168.10.214;path&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/
	X-Content-Type-Options:nosniff
	Last-Modified:Tue, 14 Jan 2014 07:16:10 GMT
Request Headers
	Accept:text/html,application/xhtml+xml,application/xml;q&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0.9,image/webp,&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;;&lt;span class=&quot;nv&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0.8
	Accept-Encoding:gzip, deflate, sdch
	Accept-Language:en-US,en;q&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0.8,zh-CN;q&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0.6,zh;q&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0.4,zh-TW;q&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0.2
	Cache-Control:no-cache
	Connection:keep-alive
	Cookie:mmsid&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0000000000000031
	Host:192.168.10.214
	Pragma:no-cache
	User-Agent:Mozilla/5.0 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Macintosh; Intel Mac OS X 10_10_4&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; AppleWebKit/537.36 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;KHTML, like Gecko&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Chrome/43.0.2357.134 Safari/537.36
	Referer:http://192.168.10.214/test
Query String Parameters
	platform:1
	&lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;:1
	item:hello
	pos:1,2,3,4
	url:www.baidu.com
	aid:1111	&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;针对不同的条目，进行一个简单的解释：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;	Remote Address:192.168.10.214:80&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;	Request URL:http://192.168.10.214/track?platform&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1&amp;amp;type&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1&amp;amp;item&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;hello&amp;amp;pos&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1,2,3,4&amp;amp;url&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;www.baidu.com&amp;amp;aid&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1111&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;请求的url，当前请求的是一个API接口/track，后面跟了一些参数，实际上参数需要urlencode的，但是这里是手动请求所以没有。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;	Request Method:GET&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;请求的方法，当前是GET。&lt;/p&gt;

&lt;p&gt;这个字段是大小写敏感的，包括OPTIONS、GET、HEAD、POST、PUT、DELETE、 TRACE。&lt;/p&gt;

&lt;p&gt;方法GET和HEAD应该被所有的通用WEB服务器支持，其他所有方法的实现是可选的。
webservice标准REST，一个请求就是请求一个资源，而用HTTP协议中自带的方法定义请求资源的状态（GET、POST、PUT、DELETE）。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;	Status Code:200 OK&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;http状态码，表明这个请求响应的状态，是服务器返回来的，也就是8.su.bdimg.com返回的。&lt;/p&gt;

&lt;p&gt;一个数字定义响应的类别，后两个数字没有分类的作用。第一个数字可能取5个不同的值：
1xx:信息响应类，表示接收到请求并且继续处理
2xx:处理成功响应类，表示动作被成功接收、理解和接受
3xx:重定向响应类，为了完成指定的动作，必须接受进一步处理
4xx:客户端错误，客户请求包含语法错误或者是不能正确执行
5xx:服务端错误，服务器不能正确执行一个正确的请求&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;	Cache-Control:private, no-cache, no-cache&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Set-Cookie, proxy-revalidate&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;cache-control是用于控制网页的缓存，跟Expires同个意思。&lt;/p&gt;

&lt;p&gt;max-age单位是秒，就是从现在开始到15552000之间都是有用的，这张图片都是被缓存下来的。
Cache-Control是HTTP1.1才有的，不适用与HTTP1.0，而Expires既适用于HTTP1.0，也适用于HTTP1.1。
Ctrl+F5时缓存无效，都会重新获取。&lt;/p&gt;

&lt;p&gt;有以下几种取值：&lt;/p&gt;

&lt;p&gt;max-age：（只接受 Age 值小于 max-age 值，并且没有过期的对象）
max-stale：（可以接受过去的对象，但是过期时间必须小于 max-stale 值）
min-fresh：（接受其新鲜生命期大于其当前 Age 跟 min-fresh 值之和的缓存对象）
响应：public(可以用 Cached 内容回应任何用户)
private（只能用缓存内容回应先前请求该内容的那个用户）
no-cache（可以缓存，但是只有在跟WEB服务器验证了其有效后，才能返回给客户端）&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;	Connection:keep-alive&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;客户端与服务器连接的类型。keep-alive和close两种，可以理解为长连接和短连接。其实是对应tcp的长连接和短连接。&lt;/p&gt;

&lt;p&gt;HTTP是一个无状态的面向连接的协议。是在tcp上的应用层协议。
在HTTP/1.0中默认是close，短连接。就是每次请求完毕都立即关闭连接。
从 HTTP/1.1起，默认使用keep-alive，长连接。就是每次请求完毕仍然保持一段时间连接。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;	Content-Length:43&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;服务器告诉浏览器自己响应的对象的长度。不包含http头的大小。这里就是指图片的大小，7183.png就是322B大小。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;	Content-Type:image/gif&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;服务器返回的数据的mineType，是符合Accept要求的。一张png图片，是官方定义的资源类型。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;	Date:Tue, 11 Aug 2015 02:38:28 GMT&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;信息发送的时间，GMT格林威治时间。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;	P3p:CP&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;CURa ADMa DEVa PSAo PSDo OUR BUS UNI PUR INT DEM STA PRE COM NAV OTC NOI DSP COR&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;P3P 是 The Platform for Privacy Preferences 的简称，P3P header允许跨域访问隐私数据，从而可以跨域set-cookie成功。值得注意的是，P3P header只需要设置一次，这样跟在这个P3P header后面的所有 set-cookie，都可以跨域访问了。也就是说: 被P3P header设置过一次后，之后的请求不再需要P3P header，也能够在iframe里跨域发送这些cookie。但是如果用 set-cookie 去改变设置好的cookie，则不再具有这种跨域访问特性。P3P header 还有一个特点就是同一个包里只能设置一次，后面的P3P Header不会覆盖前面的P3P header，浏览器只认第一个。&lt;/p&gt;

&lt;p&gt;可参考&lt;a href=&quot;/blogs/2012/08/04/http-header-P3P/&quot;&gt;HTTP请求头系列（2）-P3P&lt;/a&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;	Pragma:no-cache&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Pragma头域用来包含实现特定的指令，最常用的是Pragma:no-cache。在HTTP/1.1协议中，它的含义和Cache-Control:no-cache相同。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;	Server:nginx/1.8.0&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;服务器的类型和版本&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;	Set-Cookie:mmsid&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0000000000000031;expires&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Wed, 10 Aug 2016 02:38:28 GMT;domain&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;192.168.10.214;path&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Set-Cookie由服务器发送，它包含在响应请求的头部中。它用于在客户端创建一个Cookie。mmsid设置了一个自定义的键值对，expires定义了cookie的过期时间，domain定义了cookie生效的域名，path定义了cookie生效的路径。&lt;/p&gt;

&lt;p&gt;请参考&lt;a href=&quot;/blogs/2012/08/05/http-header-cookies/&quot;&gt;HTTP请求头系列（3）-Cookies&lt;/a&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;	X-Content-Type-Options:nosniff&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;这个header主要用来防止在IE9、chrome和safari中的MIME类型混淆攻击。firefox目前对此还存在争议。通常浏览器可以通过嗅探内容本身的方法来决定它是什么类型，而不是看响应中的content-type值。通过设置 X-Content-Type-Options：如果content-type和期望的类型匹配，则不需要嗅探，只能从外部加载确定类型的资源。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;	Last-Modified:Tue, 14 Jan 2014 07:16:10 GMT&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;在浏览器第一次请求某一个URL时，服务器端的返回状态会是200，内容是请求的资源，同时将Last-Modified属性标记此文件在服务期端最后被修改的时间。
客户端第二次请求此URL时，根据 HTTP 协议的规定，浏览器会向服务器传送 If-Modified-Since 报头，询问该时间之后文件是否有被修改过：&lt;/p&gt;

&lt;p&gt;Tue, 14 Jan 2014 07:16:10 GMT&lt;/p&gt;

&lt;p&gt;如果服务器端的资源没有变化，则自动返回 HTTP 304 （Not Changed.）状态码，内容为空，这样就节省了传输数据量。当服务器端代码发生改变或者重启服务器时，则重新发出资源，返回和第一次请求时类似。从而保证不向客户端重复发出资源，也保证当服务器有变化时，客户端能够得到最新的资源。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;	Accept:text/html,application/xhtml+xml,application/xml;q&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0.9,image/webp,&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;;&lt;span class=&quot;nv&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0.8&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;告诉服务器自己接受什么介质类型（mineType），&lt;em&gt;/&lt;/em&gt; 表示任何类型，type/* 表示该类型下的所有子类型，type/sub-type。&lt;/p&gt;

&lt;p&gt;image/webp是指一种webp的图片格式，是google弄出来的。这种mineType不是官方定义的。&lt;/p&gt;

&lt;p&gt;在质量相同的情况下，WebP格式图像的体积要比JPEG格式图像小40%。美中不足的是，WebP格式图像的编码时间“比JPEG格式图像长8倍”。&lt;/p&gt;

&lt;p&gt;q是权重，&lt;em&gt;/&lt;/em&gt;的权重是0.8，而image/webp的权重是默认值1.（q为0时，不接受这种类型）&lt;/p&gt;

&lt;p&gt;这个句子的意思是我这个浏览器优先接受webp格式的图片，但是如果没有这种图片，那给我随便什么东西。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;	Accept-Encoding:gzip, deflate, sdch&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;浏览器可以解码的编码方法（压缩方法）&lt;/p&gt;

&lt;p&gt;gzip是 GNU zip 的缩写，它是一个 GNU 自由软件的文件压缩程序，也经常用来表示 gzip 这种文件格式。
deflate是同时使用了 LZ77 算法与哈夫曼编码（Huffman Coding）的一个无损数据压缩算法。
sdch是Chrome自己定义的压缩方法。
这些编码方法，都是为了减少传输的数据，需要服务器的支持。&lt;/p&gt;

&lt;p&gt;假设8.su.bdimg.com服务器是nginx，可以开启gzip压缩功能，那么当我们的Chrome发送这个请求时，服务器会先将png用gzip算法压缩，再发到Chrome。然后Chrome解压缩，显示出来。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;	Accept-Language:en-US,en;q&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0.8,zh-CN;q&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0.6,zh;q&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0.4,zh-TW;q&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0.2&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;浏览器支持的语言，中文简体和中文。优先支持中文。（上面解释过了q是权重的意思，zh-CN权重是1，zh权重是0.8）。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;	Cookie:mmsid&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0000000000000031&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;请求串将存在于当前域和当前路径的cookie发送给服务器。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;	Host:192.168.10.214&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;主机是192.168.10.214，这个可以从request url里面看出来。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;	User-Agent:Mozilla/5.0 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Macintosh; Intel Mac OS X 10_10_4&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; AppleWebKit/537.36 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;KHTML, like Gecko&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Chrome/43.0.2357.134 Safari/537.36&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;最复杂的一个字段。user-Agent每个浏览器都不同，但都类似。&lt;/p&gt;

&lt;p&gt;Mozilla/5.0基本上所有的浏览器都以Mozilla开头，表明兼容Mozilla的网站，历史问题，因为以前Mozilla是老大。&lt;/p&gt;

&lt;p&gt;Macintosh  苹果的内核，表明我的电脑是苹果系统&lt;/p&gt;

&lt;p&gt;Intel Mac OS X 10_10_4  操作系统具体版本及版本号&lt;/p&gt;

&lt;p&gt;AppleWebKit/537.36 chrome内核类型与版本，是现在最流行的内核之一，开源。&lt;/p&gt;

&lt;p&gt;KHTML, like Gecko KHTML排版引擎，AppleWebKit用的排版引擎WebCore的鼻祖是KHTML。Gecko排版引擎，Firefox的排版引擎。不知为什么这里要写like，有关系吗？难道KHTML是模仿Gecko？呵呵。&lt;/p&gt;

&lt;p&gt;Chrome/43.0.2357.134 当前Chrome的版本&lt;/p&gt;

&lt;p&gt;Safari/537.36 不知道什么意思，但是Safari是苹果浏览器，而AppleWebKit也是苹果开发用于Safari，因此可能是AppleWebKit需要一部分Safari的功能。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;	Referer:http://192.168.10.214/test&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;发送这个请求的页面地址。我们这个请求是在百度首页发出的请求一张图片。故这个参数是百度的网址。&lt;/p&gt;

</description>
    </item>
    
    <item>
      <title>广告特征工程+人工智能：特征历史数据指导特征计算（三）</title>
      <link>http://lilifeng.net/blogs/2015/08/01/algorithm-ad-feature-history-teach/</link>
      <pubDate>Sat, 01 Aug 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>原生</category>
      
      <category>DSP</category>
      
      <category>算法</category>
      
      
      <category>广告平台</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/08/01/algorithm-ad-feature-history-teach/</guid>
      <description>&lt;blockquote&gt;
  &lt;p&gt;系列列表：&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;/blogs/2012/07/28/algorithm-ad-feature-online-feature-definition/&quot;&gt;广告特征工程+人工智能：在线程序化特征定义（一）&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;/blogs/2012/07/30/algorithm-ad-feature-bigdata-reference-inputs/&quot;&gt;广告特征工程+人工智能：大数据结果引入并特征相关化（二）&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;/blogs/2012/08/01/algorithm-ad-feature-history-teach/&quot;&gt;广告特征工程+人工智能：特征历史数据指导特征计算（三）&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;#特征历史数据指导特征计算&lt;/p&gt;

&lt;p&gt;##按照概率的计算方式&lt;/p&gt;

&lt;p&gt;假设用户A已经拥有如下标签：&lt;strong&gt;F10男性&lt;/strong&gt;，&lt;strong&gt;F12已婚&lt;/strong&gt;，&lt;strong&gt;F16无子女&lt;/strong&gt;，&lt;strong&gt;F20本科&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;待投的广告有2个：&lt;strong&gt;微型轿车&lt;/strong&gt;、&lt;strong&gt;大中型轿车&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;那么我们将市场平均概率与该人的相应实际情况进行比较，也就是市场概率即此人的购车期望与此人的目前实际情况进行比较，涉及到期望的数据为：&lt;/p&gt;

&lt;p&gt;与待投广告有关的市场期望标签：&lt;strong&gt;F2=用户.轿车.Exists(轿车.cat=微型)&lt;/strong&gt;,&lt;strong&gt;F6=用户.轿车.Exists(轿车.cat=中大型)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;根据往年历史调研，与此有关的几项数据有：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F10,F2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;/P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F2&lt;span class=&quot;o&quot;&gt;)=&lt;/span&gt;50.3%
P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F10,F6&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;/P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F6&lt;span class=&quot;o&quot;&gt;)=&lt;/span&gt;64.3%
P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F12,F16,F2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;/P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F2&lt;span class=&quot;o&quot;&gt;)=&lt;/span&gt;11.6%
P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F20,F2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;/P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F2&lt;span class=&quot;o&quot;&gt;)=&lt;/span&gt;22.7%
P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F20,F2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;/P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F6&lt;span class=&quot;o&quot;&gt;)=&lt;/span&gt;43.6%&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;那么分别计算此人对某广告的期望与实际情况：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F10,F12,F16,F20,F2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;为有车概率
P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F10,F12,F16,F20&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;或P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F10,F12,F16,F20,^F2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;为无车的概率&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;那么我们是需要计算&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F10,F12,F16,F20,F2&lt;span class=&quot;o&quot;&gt;)=&lt;/span&gt;1-^P
&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1-^P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F10&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;|^P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F12&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;|^P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F16&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;|^P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F20&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;|^P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1-^P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F10,F2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;|^P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F12,F16&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;|^P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F20&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1-&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1-P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F10,F2&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;|&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;##按照均值的计算方式&lt;/p&gt;

&lt;p&gt;##来源的影响&lt;/p&gt;

&lt;p&gt;##时间的影响&lt;/p&gt;

</description>
    </item>
    
    <item>
      <title>广告特征工程+人工智能：大数据结果引入并特征相关化（二）</title>
      <link>http://lilifeng.net/blogs/2015/07/30/algorithm-ad-feature-bigdata-reference-inputs/</link>
      <pubDate>Thu, 30 Jul 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>原生</category>
      
      <category>DSP</category>
      
      <category>算法</category>
      
      
      <category>广告平台</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/07/30/algorithm-ad-feature-bigdata-reference-inputs/</guid>
      <description>&lt;blockquote&gt;
  &lt;p&gt;系列列表：&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;/blogs/2012/07/28/algorithm-ad-feature-online-feature-definition/&quot;&gt;广告特征工程+人工智能：在线程序化特征定义（一）&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;/blogs/2012/07/30/algorithm-ad-feature-bigdata-reference-inputs/&quot;&gt;广告特征工程+人工智能：大数据结果引入并特征相关化（二）&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;/blogs/2012/08/01/algorithm-ad-feature-history-teach/&quot;&gt;广告特征工程+人工智能：特征历史数据指导特征计算（三）&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;#大数据结果引入并特征相关化&lt;/p&gt;

&lt;p&gt;1 平均年龄：微型轿车33.3，小型轿车33.6，紧凑型轿车34.6，中型轿车35.1，中大型轿车37.0，轿车34.4，SUV35.6，MPV35.3&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;from &lt;span class=&quot;nv&quot;&gt;$SOURCE&lt;/span&gt;, at &lt;span class=&quot;nv&quot;&gt;$TIME&lt;/span&gt;, MEAN&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F1|F2&lt;span class=&quot;o&quot;&gt;)=&lt;/span&gt;33.3
from &lt;span class=&quot;nv&quot;&gt;$SOURCE&lt;/span&gt;, at &lt;span class=&quot;nv&quot;&gt;$TIME&lt;/span&gt;, MEAN&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F1|F3&lt;span class=&quot;o&quot;&gt;)=&lt;/span&gt;33.6
from &lt;span class=&quot;nv&quot;&gt;$SOURCE&lt;/span&gt;, at &lt;span class=&quot;nv&quot;&gt;$TIME&lt;/span&gt;, MEAN&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F1|F4&lt;span class=&quot;o&quot;&gt;)=&lt;/span&gt;34.6
from &lt;span class=&quot;nv&quot;&gt;$SOURCE&lt;/span&gt;, at &lt;span class=&quot;nv&quot;&gt;$TIME&lt;/span&gt;, MEAN&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F1|F5&lt;span class=&quot;o&quot;&gt;)=&lt;/span&gt;35.1
from &lt;span class=&quot;nv&quot;&gt;$SOURCE&lt;/span&gt;, at &lt;span class=&quot;nv&quot;&gt;$TIME&lt;/span&gt;, MEAN&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F1|F6&lt;span class=&quot;o&quot;&gt;)=&lt;/span&gt;37.0
from &lt;span class=&quot;nv&quot;&gt;$SOURCE&lt;/span&gt;, at &lt;span class=&quot;nv&quot;&gt;$TIME&lt;/span&gt;, MEAN&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F1|F7&lt;span class=&quot;o&quot;&gt;)=&lt;/span&gt;34.4
from &lt;span class=&quot;nv&quot;&gt;$SOURCE&lt;/span&gt;, at &lt;span class=&quot;nv&quot;&gt;$TIME&lt;/span&gt;, MEAN&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F1|F8&lt;span class=&quot;o&quot;&gt;)=&lt;/span&gt;35.6
from &lt;span class=&quot;nv&quot;&gt;$SOURCE&lt;/span&gt;, at &lt;span class=&quot;nv&quot;&gt;$TIME&lt;/span&gt;, MEAN&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F1|F9&lt;span class=&quot;o&quot;&gt;)=&lt;/span&gt;35.3&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;2 性别比例：微型轿车（男性50.3%，女性49.7%），小型轿车（55.1%，44.9%），紧凑型轿车（56.7%，43.3%），中型轿车（61.3%，38.7%），中大型轿车（64.3%，35.7%），轿车（56.9%，43.1%），SUV（74.1%，25.9%），MPV（77.7%，22.3%）&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;from &lt;span class=&quot;nv&quot;&gt;$SOURCE&lt;/span&gt;, at &lt;span class=&quot;nv&quot;&gt;$TIME&lt;/span&gt;, P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F10,F2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;/P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F2&lt;span class=&quot;o&quot;&gt;)=&lt;/span&gt;50.3%
from &lt;span class=&quot;nv&quot;&gt;$SOURCE&lt;/span&gt;, at &lt;span class=&quot;nv&quot;&gt;$TIME&lt;/span&gt;, P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F10,F3&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;/P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F3&lt;span class=&quot;o&quot;&gt;)=&lt;/span&gt;55.1%
from &lt;span class=&quot;nv&quot;&gt;$SOURCE&lt;/span&gt;, at &lt;span class=&quot;nv&quot;&gt;$TIME&lt;/span&gt;, P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F10,F4&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;/P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F4&lt;span class=&quot;o&quot;&gt;)=&lt;/span&gt;56.7%
from &lt;span class=&quot;nv&quot;&gt;$SOURCE&lt;/span&gt;, at &lt;span class=&quot;nv&quot;&gt;$TIME&lt;/span&gt;, P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F10,F5&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;/P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F5&lt;span class=&quot;o&quot;&gt;)=&lt;/span&gt;61.3%
from &lt;span class=&quot;nv&quot;&gt;$SOURCE&lt;/span&gt;, at &lt;span class=&quot;nv&quot;&gt;$TIME&lt;/span&gt;, P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F10,F6&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;/P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F6&lt;span class=&quot;o&quot;&gt;)=&lt;/span&gt;64.3%
from &lt;span class=&quot;nv&quot;&gt;$SOURCE&lt;/span&gt;, at &lt;span class=&quot;nv&quot;&gt;$TIME&lt;/span&gt;, P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F10,F7&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;/P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F7&lt;span class=&quot;o&quot;&gt;)=&lt;/span&gt;56.9%
from &lt;span class=&quot;nv&quot;&gt;$SOURCE&lt;/span&gt;, at &lt;span class=&quot;nv&quot;&gt;$TIME&lt;/span&gt;, P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F10,F8&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;/P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F8&lt;span class=&quot;o&quot;&gt;)=&lt;/span&gt;74.1%
from &lt;span class=&quot;nv&quot;&gt;$SOURCE&lt;/span&gt;, at &lt;span class=&quot;nv&quot;&gt;$TIME&lt;/span&gt;, P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F10,F9&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;/P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F9&lt;span class=&quot;o&quot;&gt;)=&lt;/span&gt;77.7%, &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;3 婚姻状况：微型轿车（已婚有子女64.7%，已婚无子女11.6%，未婚23.7%），小型轿车（61.0%，19.9%，19.0%），紧凑型轿车（68.5%，13.9%，17.5%）&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;from &lt;span class=&quot;nv&quot;&gt;$SOURCE&lt;/span&gt;, at &lt;span class=&quot;nv&quot;&gt;$TIME&lt;/span&gt;, P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F12,F15,F2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;/P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F2&lt;span class=&quot;o&quot;&gt;)=&lt;/span&gt;64.7%
from &lt;span class=&quot;nv&quot;&gt;$SOURCE&lt;/span&gt;, at &lt;span class=&quot;nv&quot;&gt;$TIME&lt;/span&gt;, P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F12,F16,F2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;/P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F2&lt;span class=&quot;o&quot;&gt;)=&lt;/span&gt;11.6%
from &lt;span class=&quot;nv&quot;&gt;$SOURCE&lt;/span&gt;, at &lt;span class=&quot;nv&quot;&gt;$TIME&lt;/span&gt;, P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F12,F15,F3&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;/P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F3&lt;span class=&quot;o&quot;&gt;)=&lt;/span&gt;61.0%
from &lt;span class=&quot;nv&quot;&gt;$SOURCE&lt;/span&gt;, at &lt;span class=&quot;nv&quot;&gt;$TIME&lt;/span&gt;, P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F12,F16,F3&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;/P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F3&lt;span class=&quot;o&quot;&gt;)=&lt;/span&gt;19.9%&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;4 家庭人数：轿车（3.07人），SUV（3.11人），MPV（3.20人）&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;from &lt;span class=&quot;nv&quot;&gt;$SOURCE&lt;/span&gt;, at &lt;span class=&quot;nv&quot;&gt;$TIME&lt;/span&gt;, MEAN&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F17|F7&lt;span class=&quot;o&quot;&gt;)=&lt;/span&gt;3.07
from &lt;span class=&quot;nv&quot;&gt;$SOURCE&lt;/span&gt;, at &lt;span class=&quot;nv&quot;&gt;$TIME&lt;/span&gt;, MEAN&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F17|F8&lt;span class=&quot;o&quot;&gt;)=&lt;/span&gt;3.11
from &lt;span class=&quot;nv&quot;&gt;$SOURCE&lt;/span&gt;, at &lt;span class=&quot;nv&quot;&gt;$TIME&lt;/span&gt;, MEAN&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F17|F9&lt;span class=&quot;o&quot;&gt;)=&lt;/span&gt;3.20&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;5 最高学历：微型轿车（高中及以下35.5%，大专40.9%，本科22.7%），中大型轿车（19.5%，34.6%，43.6%）&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;from &lt;span class=&quot;nv&quot;&gt;$SOURCE&lt;/span&gt;, at &lt;span class=&quot;nv&quot;&gt;$TIME&lt;/span&gt;, P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F18,F2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;/P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F2&lt;span class=&quot;o&quot;&gt;)=&lt;/span&gt;35.5%
from &lt;span class=&quot;nv&quot;&gt;$SOURCE&lt;/span&gt;, at &lt;span class=&quot;nv&quot;&gt;$TIME&lt;/span&gt;, P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F19,F2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;/P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F2&lt;span class=&quot;o&quot;&gt;)=&lt;/span&gt;40.9%
from &lt;span class=&quot;nv&quot;&gt;$SOURCE&lt;/span&gt;, at &lt;span class=&quot;nv&quot;&gt;$TIME&lt;/span&gt;, P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F20,F2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;/P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F2&lt;span class=&quot;o&quot;&gt;)=&lt;/span&gt;22.7%
from &lt;span class=&quot;nv&quot;&gt;$SOURCE&lt;/span&gt;, at &lt;span class=&quot;nv&quot;&gt;$TIME&lt;/span&gt;, P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F18,F6&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;/P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F6&lt;span class=&quot;o&quot;&gt;)=&lt;/span&gt;19.5%
from &lt;span class=&quot;nv&quot;&gt;$SOURCE&lt;/span&gt;, at &lt;span class=&quot;nv&quot;&gt;$TIME&lt;/span&gt;, P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F19,F6&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;/P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F6&lt;span class=&quot;o&quot;&gt;)=&lt;/span&gt;34.6%
from &lt;span class=&quot;nv&quot;&gt;$SOURCE&lt;/span&gt;, at &lt;span class=&quot;nv&quot;&gt;$TIME&lt;/span&gt;, P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F20,F2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;/P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F6&lt;span class=&quot;o&quot;&gt;)=&lt;/span&gt;43.6%&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;6 所在行业：零售批发（微型15.8%，中大型轿车8.7%，SUV12.9%），贸易进出口（微型5.6%，中大型11.3%，SUV9.3%）&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;from &lt;span class=&quot;nv&quot;&gt;$SOURCE&lt;/span&gt;, at &lt;span class=&quot;nv&quot;&gt;$TIME&lt;/span&gt;, P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F22,F2&lt;span class=&quot;o&quot;&gt;)=&lt;/span&gt;15.8%
from &lt;span class=&quot;nv&quot;&gt;$SOURCE&lt;/span&gt;, at &lt;span class=&quot;nv&quot;&gt;$TIME&lt;/span&gt;, P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F22,F6&lt;span class=&quot;o&quot;&gt;)=&lt;/span&gt;8.7%
from &lt;span class=&quot;nv&quot;&gt;$SOURCE&lt;/span&gt;, at &lt;span class=&quot;nv&quot;&gt;$TIME&lt;/span&gt;, P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F22,F8&lt;span class=&quot;o&quot;&gt;)=&lt;/span&gt;12.9%&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;7 职业：雇员人数在20人及以上的企业业主（微型3.8%，中大型14.7%，SUV5.9%），外资企业高级管理人员（微型0.8%，中大型4.5%，SUV3.2%）&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;from &lt;span class=&quot;nv&quot;&gt;$SOURCE&lt;/span&gt;, at &lt;span class=&quot;nv&quot;&gt;$TIME&lt;/span&gt;, P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F32,F27,F2&lt;span class=&quot;o&quot;&gt;)=&lt;/span&gt;3.8%
from &lt;span class=&quot;nv&quot;&gt;$SOURCE&lt;/span&gt;, at &lt;span class=&quot;nv&quot;&gt;$TIME&lt;/span&gt;, P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F32,F27,F6&lt;span class=&quot;o&quot;&gt;)=&lt;/span&gt;14.7%
from &lt;span class=&quot;nv&quot;&gt;$SOURCE&lt;/span&gt;, at &lt;span class=&quot;nv&quot;&gt;$TIME&lt;/span&gt;, P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F32,F27,F8&lt;span class=&quot;o&quot;&gt;)=&lt;/span&gt;5.9%
from &lt;span class=&quot;nv&quot;&gt;$SOURCE&lt;/span&gt;, at &lt;span class=&quot;nv&quot;&gt;$TIME&lt;/span&gt;, P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F29,F26,F2&lt;span class=&quot;o&quot;&gt;)=&lt;/span&gt;0.8%
from &lt;span class=&quot;nv&quot;&gt;$SOURCE&lt;/span&gt;, at &lt;span class=&quot;nv&quot;&gt;$TIME&lt;/span&gt;, P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F29,F26,F6&lt;span class=&quot;o&quot;&gt;)=&lt;/span&gt;4.5%
from &lt;span class=&quot;nv&quot;&gt;$SOURCE&lt;/span&gt;, at &lt;span class=&quot;nv&quot;&gt;$TIME&lt;/span&gt;, P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F29,F26,F8&lt;span class=&quot;o&quot;&gt;)=&lt;/span&gt;3.2%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;8 个人家庭收入：微型轿车（个人5728，家庭11821），中大型轿车（个人20225，家庭37705），SUV（11206，19536）&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;from &lt;span class=&quot;nv&quot;&gt;$SOURCE&lt;/span&gt;, at &lt;span class=&quot;nv&quot;&gt;$TIME&lt;/span&gt;, MEAN&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F34|F2&lt;span class=&quot;o&quot;&gt;)=&lt;/span&gt;5728
from &lt;span class=&quot;nv&quot;&gt;$SOURCE&lt;/span&gt;, at &lt;span class=&quot;nv&quot;&gt;$TIME&lt;/span&gt;, MEAN&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F35|F2&lt;span class=&quot;o&quot;&gt;)=&lt;/span&gt;11821
from &lt;span class=&quot;nv&quot;&gt;$SOURCE&lt;/span&gt;, at &lt;span class=&quot;nv&quot;&gt;$TIME&lt;/span&gt;, MEAN&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F34|F6&lt;span class=&quot;o&quot;&gt;)=&lt;/span&gt;20225
from &lt;span class=&quot;nv&quot;&gt;$SOURCE&lt;/span&gt;, at &lt;span class=&quot;nv&quot;&gt;$TIME&lt;/span&gt;, MEAN&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F35|F6&lt;span class=&quot;o&quot;&gt;)=&lt;/span&gt;37705&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;9 购车动机：在接受调查的人中，上下班方便（微型86.7%，中大型轿车71.4%，SUV70.9%）&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;from &lt;span class=&quot;nv&quot;&gt;$SOURCE&lt;/span&gt;, at &lt;span class=&quot;nv&quot;&gt;$TIME&lt;/span&gt;, P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F36,F38,F2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;/P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F38&lt;span class=&quot;o&quot;&gt;)=&lt;/span&gt;86.7%
from &lt;span class=&quot;nv&quot;&gt;$SOURCE&lt;/span&gt;, at &lt;span class=&quot;nv&quot;&gt;$TIME&lt;/span&gt;, P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F36,F38,F6&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;/P&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F38&lt;span class=&quot;o&quot;&gt;)=&lt;/span&gt;71.4%&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;10 油耗：微型车（不开空调6.7，开空调7.9），中大型轿车（11.0，12.3）&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;from &lt;span class=&quot;nv&quot;&gt;$SOURCE&lt;/span&gt;, at &lt;span class=&quot;nv&quot;&gt;$TIME&lt;/span&gt;, MEAN&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F45|F47&lt;span class=&quot;o&quot;&gt;)=&lt;/span&gt;6.7
from &lt;span class=&quot;nv&quot;&gt;$SOURCE&lt;/span&gt;, at &lt;span class=&quot;nv&quot;&gt;$TIME&lt;/span&gt;, MEAN&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F46|F47&lt;span class=&quot;o&quot;&gt;)=&lt;/span&gt;7.9
from &lt;span class=&quot;nv&quot;&gt;$SOURCE&lt;/span&gt;, at &lt;span class=&quot;nv&quot;&gt;$TIME&lt;/span&gt;, MEAN&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F45|F51&lt;span class=&quot;o&quot;&gt;)=&lt;/span&gt;11.0
from &lt;span class=&quot;nv&quot;&gt;$SOURCE&lt;/span&gt;, at &lt;span class=&quot;nv&quot;&gt;$TIME&lt;/span&gt;, MEAN&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;F46|F51&lt;span class=&quot;o&quot;&gt;)=&lt;/span&gt;12.3&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;#特征历史数据指导特征计算&lt;/p&gt;

</description>
    </item>
    
    <item>
      <title>机器学习算法：逻辑回归（Logistic Regression）</title>
      <link>http://lilifeng.net/blogs/2015/07/29/algorithm-machine-learning-logistic-regression/</link>
      <pubDate>Wed, 29 Jul 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>DSP</category>
      
      <category>算法</category>
      
      
      <category>广告平台</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/07/29/algorithm-machine-learning-logistic-regression/</guid>
      <description>&lt;p&gt;机器学习算法一般是这样一个步骤：&lt;/p&gt;

&lt;p&gt;1）对于一个问题，我们用数学语言来描述它，然后建立一个模型，例如回归模型或者分类模型等来描述这个问题；&lt;/p&gt;

&lt;p&gt;2）通过最大似然、最大后验概率或者最小化分类误差等等建立模型的代价函数，也就是一个最优化问题。找到最优化问题的解，也就是能拟合我们的数据的最好的模型参数；&lt;/p&gt;

&lt;p&gt;3）然后我们需要求解这个代价函数，找到最优解。这求解也就分很多种情况了：&lt;/p&gt;

&lt;p&gt;3.1）如果这个优化函数存在解析解。例如我们求最值一般是对代价函数求导，找到导数为0的点，也就是最大值或者最小值的地方了。如果代价函数能简单求导，并且求导后为0的式子存在解析解，那么我们就可以直接得到最优的参数了。&lt;/p&gt;

&lt;p&gt;3.2）如果式子很难求导，例如函数里面存在隐含的变量或者变量相互间存在耦合，也就互相依赖的情况。或者求导后式子得不到解释解，例如未知参数的个数大于已知方程组的个数等。这时候我们就需要借助迭代算法来一步一步找到最有解了。迭代是个很神奇的东西，它将远大的目标（也就是找到最优的解，例如爬上山顶）记在心上，然后给自己定个短期目标（也就是每走一步，就离远大的目标更近一点），脚踏实地，心无旁贷，像个蜗牛一样，一步一步往上爬，支撑它的唯一信念是：只要我每一步都爬高一点，那么积跬步，肯定能达到自己人生的巅峰，尽享山登绝顶我为峰的豪迈与忘我。&lt;/p&gt;

&lt;p&gt;另外需要考虑的情况是，如果代价函数是凸函数，那么就存在全局最优解，方圆五百里就只有一个山峰，那命中注定了，它就是你要找的唯一了。但如果是非凸的，那么就会有很多局部最优的解，有一望无际的山峰，人的视野是伟大的也是渺小的，你不知道哪个山峰才是最高的，可能你会被命运作弄，很无辜的陷入一个局部最优里面，坐井观天，以为自己找到的就是最好的。没想到山外有山，人外有人，光芒总在未知的远处默默绽放。但也许命运眷恋善良的你，带给你的总是最好的归宿。也有很多不信命的人，觉得人定胜天的人，誓要找到最好的，否则不会罢休，永不向命运妥协，除非自己有一天累了，倒下了，也要靠剩下的一口气，迈出一口气能支撑的路程。好悲凉啊……哈哈。&lt;/p&gt;

&lt;p&gt;呃，不知道扯那去了，也不知道自己说的有没有错，有错的话请大家不吝指正。那下面就进入正题吧。正如上面所述，逻辑回归就是这样的一个过程：面对一个回归或者分类问题，建立代价函数，然后通过优化方法迭代求解出最优的模型参数，然后测试验证我们这个求解的模型的好坏，冥冥人海，滚滚红尘，我们是否找到了最适合的那个她。&lt;/p&gt;

&lt;p&gt;#一、逻辑回归（LogisticRegression）&lt;/p&gt;

&lt;p&gt;Logistic regression（逻辑回归）是当前业界比较常用的机器学习方法，用于估计某种事物的可能性。之前在经典之作《数学之美》中也看到了它用于广告预测，也就是根据某广告被用户点击的可能性，把最可能被用户点击的广告摆在用户能看到的地方，然后叫他“你点我啊！”用户点了，你就有钱收了。这就是为什么我们的电脑现在广告泛滥的原因了。&lt;/p&gt;

&lt;p&gt;还有类似的某用户购买某商品的可能性，某病人患有某种疾病的可能性啊等等。这个世界是随机的（当然了，人为的确定性系统除外，但也有可能有噪声或产生错误的结果，只是这个错误发生的可能性太小了，小到千万年不遇，小到忽略不计而已），所以万物的发生都可以用可能性或者几率（Odds）来表达。“几率”指的是某事物发生的可能性与不发生的可能性的比值。&lt;/p&gt;

&lt;p&gt;Logistic regression可以用来回归，也可以用来分类，主要是二分类。还记得上几节讲的支持向量机SVM吗？它就是个二分类的例如，它可以将两个不同类别的样本给分开，思想是找到最能区分它们的那个分类超平面。但当你给一个新的样本给它，它能够给你的只有一个答案，你这个样本是正类还是负类。例如你问SVM，某个女生是否喜欢你，它只会回答你喜欢或者不喜欢。这对我们来说，显得太粗鲁了，要不希望，要不绝望，这都不利于身心健康。那如果它可以告诉我，她很喜欢、有一点喜欢、不怎么喜欢或者一点都不喜欢，你想都不用想了等等，告诉你她有49%的几率喜欢你，总比直接说她不喜欢你，来得温柔。而且还提供了额外的信息，她来到你的身边你有多少希望，你得再努力多少倍，知己知彼百战百胜，哈哈。Logistic regression就是这么温柔的，它给我们提供的就是你的这个样本属于正类的可能性是多少。&lt;/p&gt;

&lt;p&gt;还得来点数学。（更多的理解，请参阅参考文献）假设我们的样本是{x, y}，y是0或者1，表示正类或者负类，x是我们的m维的样本特征向量。那么这个样本x属于正类，也就是y=1的“概率”可以通过下面的逻辑函数来表示：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/150729_6.png&quot; alt=&quot;逻辑函数&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这里θ是模型参数，也就是回归系数，σ是sigmoid函数。实际上这个函数是由下面的对数几率（也就是x属于正类的可能性和负类的可能性的比值的对数）变换得到的：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/150729_7.png&quot; alt=&quot;对数几率&quot; /&gt;&lt;/p&gt;

&lt;p&gt;换句话说，y也就是我们关系的变量，例如她喜不喜欢你，与多个自变量（因素）有关，例如你人品怎样、车子是两个轮的还是四个轮的、长得胜过潘安还是和犀利哥有得一拼、有千尺豪宅还是三寸茅庐等等，我们把这些因素表示为x1, x2,…, xm。那这个女的怎样考量这些因素呢？最快的方式就是把这些因素的得分都加起来，最后得到的和越大，就表示越喜欢。但每个人心里其实都有一杆称，每个人考虑的因素不同，萝卜青菜，各有所爱嘛。例如这个女生更看中你的人品，人品的权值是0.6，不看重你有没有钱，没钱了一起努力奋斗，那么有没有钱的权值是0.001等等。我们将这些对应x1, x2,…, xm的权值叫做回归系数，表达为θ1, θ2,…, θm。他们的加权和就是你的总得分了。请选择你的心仪男生，非诚勿扰！哈哈。&lt;/p&gt;

&lt;p&gt;所以说上面的logistic回归就是一个线性分类模型，它与线性回归的不同点在于：为了将线性回归输出的很大范围的数，例如从负无穷到正无穷，压缩到0和1之间，这样的输出值表达为“可能性”才能说服广大民众。当然了，把大值压缩到这个范围还有个很好的好处，就是可以消除特别冒尖的变量的影响（不知道理解的是否正确）。而实现这个伟大的功能其实就只需要平凡一举，也就是在输出加一个logistic函数。另外，对于二分类来说，可以简单的认为：如果样本x属于正类的概率大于0.5，那么就判定它是正类，否则就是负类。实际上，SVM的类概率就是样本到边界的距离，这个活实际上就让logistic regression给干了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/150729_1.png&quot; alt=&quot;SVM vs LR&quot; /&gt;&lt;/p&gt;

&lt;p&gt;所以说，Logistic Regression 就是一个被logistic方程归一化后的线性回归，仅此而已。&lt;/p&gt;

&lt;p&gt;好了，关于LR的八卦就聊到这。归入到正统的机器学习框架下，模型选好了，只是模型的参数θ还是未知的，我们需要用我们收集到的数据来训练求解得到它。那我们下一步要做的事情就是建立代价函数了。&lt;/p&gt;

&lt;p&gt;LogisticRegression最基本的学习算法是最大似然。&lt;/p&gt;

&lt;p&gt;假设我们有n个独立的训练样本{(x1, y1) ,(x2, y2),…, (xn, yn)}，y={0, 1}。那每一个观察到的样本(xi, yi)出现的概率是：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/150729_8.png&quot; alt=&quot;单样本概率&quot; /&gt;&lt;/p&gt;

&lt;p&gt;上面为什么是这样呢？当y=1的时候，后面那一项是不是没有了，那就只剩下x属于1类的概率，当y=0的时候，第一项是不是没有了，那就只剩下后面那个x属于0的概率（1减去x属于1的概率）。所以不管y是0还是1，上面得到的数，都是(x, y)出现的概率。那我们的整个样本集，也就是n个独立的样本出现的似然函数为（因为每个样本都是独立的，所以n个样本出现的概率就是他们各自出现的概率相乘）：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/150729_9.png&quot; alt=&quot;似然函数&quot; /&gt;&lt;/p&gt;

&lt;p&gt;那最大似然法就是求模型中使得似然函数最大的系数取值θ*。这个最大似然就是我们的代价函数（cost function）了。&lt;/p&gt;

&lt;p&gt;OK，那代价函数有了，我们下一步要做的就是优化求解了。我们先尝试对上面的代价函数求导，看导数为0的时候可不可以解出来，也就是有没有解析解，有这个解的时候，就皆大欢喜了，一步到位。如果没有就需要通过迭代了，耗时耗力。&lt;/p&gt;

&lt;p&gt;我们先变换下L(θ)：取自然对数，然后化简（不要看到一堆公式就害怕哦，很简单的哦，只需要耐心一点点，自己动手推推就知道了。注：有xi的时候，表示它是第i个样本，下面没有做区分了，相信你的眼睛是雪亮的），得到：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/150729_10.png&quot; alt=&quot;变换L(θ)去对数化简&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这时候，用L(θ)对θ求导，得到：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/150729_11.png&quot; alt=&quot;L(θ)对θ求导&quot; /&gt;&lt;/p&gt;

&lt;p&gt;然后我们令该导数为0，你会很失望的发现，它无法解析求解。不信你就去尝试一下。所以没办法了，只能借助高大上的迭代来搞定了。这里选用了经典的梯度下降算法。&lt;/p&gt;

&lt;p&gt;#二、优化求解&lt;/p&gt;

&lt;p&gt;##2.1、梯度下降(gradient descent)&lt;/p&gt;

&lt;p&gt;Gradient descent 又叫 steepest descent，是利用一阶的梯度信息找到函数局部最优解的一种方法，也是机器学习里面最简单最常用的一种优化方法。它的思想很简单，和我开篇说的那样，要找最小值，我只需要每一步都往下走（也就是每一步都可以让代价函数小一点），然后不断的走，那肯定能走到最小值的地方，例如下图所示：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/150729_2.png&quot; alt=&quot;梯度下降&quot; /&gt;&lt;/p&gt;

&lt;p&gt;但，我同时也需要更快的到达最小值啊，怎么办呢？我们需要每一步都找下坡最快的地方，也就是每一步我走某个方向，都比走其他方法，要离最小值更近。而这个下坡最快的方向，就是梯度的负方向了。&lt;/p&gt;

&lt;p&gt;对logistic Regression来说，梯度下降算法新鲜出炉，如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/150729_12.png&quot; alt=&quot;梯度下降算法&quot; /&gt;&lt;/p&gt;

&lt;p&gt;其中，参数α叫学习率，就是每一步走多远，这个参数蛮关键的。如果设置的太多，那么很容易就在最优值附加徘徊，因为你步伐太大了。例如要从广州到上海，但是你的一步的距离就是广州到北京那么远，没有半步的说法，自己能迈那么大步，是幸运呢？还是不幸呢？事物总有两面性嘛，它带来的好处是能很快的从远离最优值的地方回到最优值附近，只是在最优值附近的时候，它有心无力了。但如果设置的太小，那收敛速度就太慢了，向蜗牛一样，虽然会落在最优的点，但是这速度如果是猴年马月，我们也没这耐心啊。所以有的改进就是在这个学习率这个地方下刀子的。我开始迭代是，学习率大，慢慢的接近最优值的时候，我的学习率变小就可以了。所谓采两者之精华啊！这个优化具体见2.3 。&lt;/p&gt;

&lt;p&gt;梯度下降算法的伪代码如下：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;################################################&lt;/span&gt;
初始化回归系数为1
重复下面步骤直到收敛&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
   计算整个数据集的梯度
   使用alpha x gradient来更新回归系数
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
返回回归系数值
&lt;span class=&quot;c&quot;&gt;################################################&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;注：因为本文中是求解的Logit回归的代价函数是似然函数，需要最大化似然函数。所以我们要用的是梯度上升算法。但因为其和梯度下降的原理是一样的，只是一个是找最大值，一个是找最小值。找最大值的方向就是梯度的方向，最小值的方向就是梯度的负方向。不影响我们的说明，所以当时自己就忘了改过来了，谢谢评论下面@wxltt的指出。另外，最大似然可以通过取负对数，转化为求最小值。代码里面的注释也是有误的，写的代码是梯度上升，注销成了梯度下降，对大家造成的不便，希望大家海涵。&lt;/p&gt;

&lt;p&gt;##2.2、随机梯度下降SGD (stochastic gradient descent)&lt;/p&gt;

&lt;p&gt;梯度下降算法在每次更新回归系数的时候都需要遍历整个数据集（计算整个数据集的回归误差），该方法对小数据集尚可。但当遇到有数十亿样本和成千上万的特征时，就有点力不从心了，它的计算复杂度太高。改进的方法是一次仅用一个样本点（的回归误差）来更新回归系数。这个方法叫随机梯度下降算法。由于可以在新的样本到来的时候对分类器进行增量的更新（假设我们已经在数据库A上训练好一个分类器h了，那新来一个样本x。对非增量学习算法来说，我们需要把x和数据库A混在一起，组成新的数据库B，再重新训练新的分类器。但对增量学习算法，我们只需要用新样本x来更新已有分类器h的参数即可），所以它属于在线学习算法。与在线学习相对应，一次处理整个数据集的叫“批处理”。&lt;/p&gt;

&lt;p&gt;随机梯度下降算法的伪代码如下：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;################################################&lt;/span&gt;
初始化回归系数为1
重复下面步骤直到收敛&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        对数据集中每个样本
               计算该样本的梯度
                使用alpha xgradient来更新回归系数
 &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
返回回归系数值
&lt;span class=&quot;c&quot;&gt;################################################&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;##2.3、改进的随机梯度下降&lt;/p&gt;

&lt;p&gt;评价一个优化算法的优劣主要是看它是否收敛，也就是说参数是否达到稳定值，是否还会不断的变化？收敛速度是否快？&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/150729_3.png&quot; alt=&quot;随机梯度下降算法在200次迭代中三个回归系数的变化过程&quot; /&gt;&lt;/p&gt;

&lt;p&gt;上图展示了随机梯度下降算法在200次迭代中（请先看第三和第四节再回来看这里。我们的数据库有100个二维样本，每个样本都对系数调整一次，所以共有200*100=20000次调整）三个回归系数的变化过程。其中系数X2经过50次迭代就达到了稳定值。但系数X1和X0到100次迭代后稳定。而且可恨的是系数X1和X2还在很调皮的周期波动，迭代次数很大了，心还停不下来。产生这个现象的原因是存在一些无法正确分类的样本点，也就是我们的数据集并非线性可分，但我们的logistic regression是线性分类模型，对非线性可分情况无能为力。然而我们的优化程序并没能意识到这些不正常的样本点，还一视同仁的对待，调整系数去减少对这些样本的分类误差，从而导致了在每次迭代时引发系数的剧烈改变。对我们来说，我们期待算法能避免来回波动，从而快速稳定和收敛到某个值。&lt;/p&gt;

&lt;p&gt;对随机梯度下降算法，我们做两处改进来避免上述的波动问题：&lt;/p&gt;

&lt;p&gt;1）在每次迭代时，调整更新步长alpha的值。随着迭代的进行，alpha越来越小，这会缓解系数的高频波动（也就是每次迭代系数改变得太大，跳的跨度太大）。当然了，为了避免alpha随着迭代不断减小到接近于0（这时候，系数几乎没有调整，那么迭代也没有意义了），我们约束alpha一定大于一个稍微大点的常数项，具体见代码。&lt;/p&gt;

&lt;p&gt;2）每次迭代，改变样本的优化顺序。也就是随机选择样本来更新回归系数。这样做可以减少周期性的波动，因为样本顺序的改变，使得每次迭代不再形成周期性。&lt;/p&gt;

&lt;p&gt;改进的随机梯度下降算法的伪代码如下：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;################################################&lt;/span&gt;
初始化回归系数为1
重复下面步骤直到收敛&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
       对随机遍历的数据集中的每个样本
              随着迭代的逐渐进行，减小alpha的值
              计算该样本的梯度
              使用alpha x gradient来更新回归系数
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
返回回归系数值
&lt;span class=&quot;c&quot;&gt;################################################&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/img/150729_4.png&quot; alt=&quot;改进后的梯度下降算法在200次迭代中三个回归系数的变化过程&quot; /&gt;&lt;/p&gt;

&lt;p&gt;比较原始的随机梯度下降和改进后的梯度下降，可以看到两点不同：&lt;/p&gt;

&lt;p&gt;1）系数不再出现周期性波动。&lt;/p&gt;

&lt;p&gt;2）系数可以很快的稳定下来，也就是快速收敛。这里只迭代了20次就收敛了。而上面的随机梯度下降需要迭代200次才能稳定。&lt;/p&gt;

&lt;p&gt;#三、Python实现&lt;/p&gt;

&lt;p&gt;我使用的Python是2.7.5版本的。附加的库有Numpy和Matplotlib。具体的安装和配置见前面的博文。在代码中已经有了比较详细的注释了。不知道有没有错误的地方，如果有，还望大家指正（每次的运行结果都有可能不同）。里面我写了个可视化结果的函数，但只能在二维的数据上面使用。直接贴代码：&lt;/p&gt;

&lt;p&gt;logRegression.py&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;#################################################  &lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# logRegression: Logistic Regression  &lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Author : zouxy  &lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Date   : 2014-03-02  &lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# HomePage : http://blog.csdn.net/zouxy09  &lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Email  : zouxy09@qq.com  &lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#################################################  &lt;/span&gt;
  
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;  
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;plt&lt;/span&gt;  
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;time&lt;/span&gt;  
  
  
&lt;span class=&quot;c&quot;&gt;# calculate the sigmoid function  &lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sigmoid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;  
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;  
  
  
&lt;span class=&quot;c&quot;&gt;# train a logistic regression model using some optional optimize algorithm  &lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# input: train_x is a mat datatype, each row stands for one sample  &lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#        train_y is mat datatype too, each row is the corresponding label  &lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#        opts is optimize option include step and maximum number of iterations  &lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;trainLogRegres&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;train_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;train_y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;opts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;  
    &lt;span class=&quot;c&quot;&gt;# calculate training time  &lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;startTime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;  
  
    &lt;span class=&quot;n&quot;&gt;numSamples&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numFeatures&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;train_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  
    &lt;span class=&quot;n&quot;&gt;alpha&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;opts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;alpha&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;maxIter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;opts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;maxIter&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;  
    &lt;span class=&quot;n&quot;&gt;weights&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ones&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numFeatures&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;  
  
    &lt;span class=&quot;c&quot;&gt;# optimize through gradient descent algorilthm  &lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;maxIter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;  
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;opts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;optimizeType&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;gradDescent&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# gradient descent algorilthm  &lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sigmoid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;train_x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;weights&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  
            &lt;span class=&quot;n&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;train_y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;  
            &lt;span class=&quot;n&quot;&gt;weights&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;weights&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alpha&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;train_x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transpose&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;  
        &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;opts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;optimizeType&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;stocGradDescent&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# stochastic gradient descent  &lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numSamples&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;  
                &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sigmoid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;train_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;weights&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  
                &lt;span class=&quot;n&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;train_y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;  
                &lt;span class=&quot;n&quot;&gt;weights&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;weights&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alpha&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;train_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transpose&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;  
        &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;opts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;optimizeType&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;smoothStocGradDescent&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# smooth stochastic gradient descent  &lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;# randomly select samples to optimize for reducing cycle fluctuations   &lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;dataIndex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numSamples&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  
            &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numSamples&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;  
                &lt;span class=&quot;n&quot;&gt;alpha&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.01&lt;/span&gt;  
                &lt;span class=&quot;n&quot;&gt;randIndex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uniform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dataIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;  
                &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sigmoid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;train_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;randIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;weights&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  
                &lt;span class=&quot;n&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;train_y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;randIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;  
                &lt;span class=&quot;n&quot;&gt;weights&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;weights&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alpha&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;train_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;randIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transpose&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;  
                &lt;span class=&quot;k&quot;&gt;del&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dataIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;randIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# during one interation, delete the optimized sample  &lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;  
            &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NameError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;Not support optimize method type!&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  
      
  
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;Congratulations, training complete! Took &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;fs!&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;startTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;weights&lt;/span&gt;  
  
  
&lt;span class=&quot;c&quot;&gt;# test your trained Logistic Regression model given test set  &lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;testLogRegres&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weights&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test_y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;  
    &lt;span class=&quot;n&quot;&gt;numSamples&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numFeatures&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;test_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  
    &lt;span class=&quot;n&quot;&gt;matchCount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;  
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;xrange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numSamples&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;  
        &lt;span class=&quot;n&quot;&gt;predict&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sigmoid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;test_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;weights&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;  
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;predict&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;test_y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]):&lt;/span&gt;  
            &lt;span class=&quot;n&quot;&gt;matchCount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  
    &lt;span class=&quot;n&quot;&gt;accuracy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;matchCount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numSamples&lt;/span&gt;  
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;accuracy&lt;/span&gt;  
  
  
&lt;span class=&quot;c&quot;&gt;# show your trained logistic regression model only available with 2-D data  &lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;showLogRegres&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weights&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;train_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;train_y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;  
    &lt;span class=&quot;c&quot;&gt;# notice: train_x and train_y is mat datatype  &lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;numSamples&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numFeatures&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;train_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numFeatures&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;  
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Sorry! I can not draw because the dimension of your data is not 2!&quot;&lt;/span&gt;  
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  
  
    &lt;span class=&quot;c&quot;&gt;# draw all samples  &lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;xrange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numSamples&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;  
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;train_y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;  
            &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;train_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;train_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;or&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  
        &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;train_y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;  
            &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;train_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;train_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;ob&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  
  
    &lt;span class=&quot;c&quot;&gt;# draw the classify line  &lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;min_x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;train_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;  
    &lt;span class=&quot;n&quot;&gt;max_x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;train_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;  
    &lt;span class=&quot;n&quot;&gt;weights&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;weights&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# convert mat to array  &lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;y_min_x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weights&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;weights&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;min_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;weights&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;  
    &lt;span class=&quot;n&quot;&gt;y_max_x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weights&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;weights&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;weights&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;  
    &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;min_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y_min_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y_max_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;-g&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  
    &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xlabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;X1&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ylabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;X2&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  
    &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;  &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;#四、测试结果&lt;/p&gt;

&lt;p&gt;测试代码：&lt;/p&gt;

&lt;p&gt;test_logRegression.py&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;#################################################  &lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# logRegression: Logistic Regression  &lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Author : zouxy  &lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Date   : 2014-03-02  &lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# HomePage : http://blog.csdn.net/zouxy09  &lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Email  : zouxy09@qq.com  &lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#################################################  &lt;/span&gt;
  
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;  
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;plt&lt;/span&gt;  
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;time&lt;/span&gt;  
  
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;loadData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;  
    &lt;span class=&quot;n&quot;&gt;train_x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;  
    &lt;span class=&quot;n&quot;&gt;train_y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;  
    &lt;span class=&quot;n&quot;&gt;fileIn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;E:/Python/Machine Learning in Action/testSet.txt&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fileIn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;readlines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;  
        &lt;span class=&quot;n&quot;&gt;lineArr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;  
        &lt;span class=&quot;n&quot;&gt;train_x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lineArr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]),&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lineArr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])])&lt;/span&gt;  
        &lt;span class=&quot;n&quot;&gt;train_y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lineArr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;  
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;train_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;train_y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transpose&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;  
  
  
&lt;span class=&quot;c&quot;&gt;## step 1: load data  &lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;step 1: load data...&quot;&lt;/span&gt;  
&lt;span class=&quot;n&quot;&gt;train_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;train_y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loadData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;  
&lt;span class=&quot;n&quot;&gt;test_x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;train_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test_y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;train_y&lt;/span&gt;  
  
&lt;span class=&quot;c&quot;&gt;## step 2: training...  &lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;step 2: training...&quot;&lt;/span&gt;  
&lt;span class=&quot;n&quot;&gt;opts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;alpha&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;maxIter&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;optimizeType&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;smoothStocGradDescent&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;  
&lt;span class=&quot;n&quot;&gt;optimalWeights&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trainLogRegres&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;train_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;train_y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;opts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  
  
&lt;span class=&quot;c&quot;&gt;## step 3: testing  &lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;step 3: testing...&quot;&lt;/span&gt;  
&lt;span class=&quot;n&quot;&gt;accuracy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;testLogRegres&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;optimalWeights&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test_y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  
  
&lt;span class=&quot;c&quot;&gt;## step 4: show the result  &lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;step 4: show the result...&quot;&lt;/span&gt;    
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;The classify accuracy is: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%.3&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;accuracy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  
&lt;span class=&quot;n&quot;&gt;showLogRegres&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;optimalWeights&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;train_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;train_y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;   &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;测试数据是二维的，共100个样本。有2个类。如下：&lt;/p&gt;

&lt;p&gt;testSet.txt&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.017612&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;14.053064&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;  
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.395634&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;4.662541&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.752157&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;6.538620&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;  
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.322371&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;7.152853&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;  
&lt;span class=&quot;mf&quot;&gt;0.423363&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;11.054677&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;  
&lt;span class=&quot;mf&quot;&gt;0.406704&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;7.067335&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  
&lt;span class=&quot;mf&quot;&gt;0.667394&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;12.741452&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;  
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.460150&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;6.866805&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  
&lt;span class=&quot;mf&quot;&gt;0.569411&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;9.548755&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;  
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.026632&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;10.427743&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;  
&lt;span class=&quot;mf&quot;&gt;0.850433&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;6.920334&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  
&lt;span class=&quot;mf&quot;&gt;1.347183&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;13.175500&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;  
&lt;span class=&quot;mf&quot;&gt;1.176813&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;3.167020&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.781871&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;9.097953&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;  
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.566606&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;5.749003&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  
&lt;span class=&quot;mf&quot;&gt;0.931635&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;1.589505&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.024205&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;6.151823&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.036453&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;2.690988&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.196949&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;0.444165&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  
&lt;span class=&quot;mf&quot;&gt;1.014459&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;5.754399&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  
&lt;span class=&quot;mf&quot;&gt;1.985298&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;3.230619&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.693453&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.557540&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.576525&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;11.778922&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;  
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.346811&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.678730&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.124484&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;2.672471&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  
&lt;span class=&quot;mf&quot;&gt;1.217916&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;9.597015&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;  
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.733928&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;9.098687&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;  
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;3.642001&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.618087&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  
&lt;span class=&quot;mf&quot;&gt;0.315985&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;3.523953&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  
&lt;span class=&quot;mf&quot;&gt;1.416614&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;9.619232&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;  
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.386323&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;3.989286&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  
&lt;span class=&quot;mf&quot;&gt;0.556921&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;8.294984&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  
&lt;span class=&quot;mf&quot;&gt;1.224863&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;11.587360&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;  
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.347803&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.406051&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  
&lt;span class=&quot;mf&quot;&gt;1.196604&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;4.951851&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  
&lt;span class=&quot;mf&quot;&gt;0.275221&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;9.543647&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;  
&lt;span class=&quot;mf&quot;&gt;0.470575&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;9.332488&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;  
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.889567&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;9.542662&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;  
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.527893&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;12.150579&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;  
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.185247&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;11.309318&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;  
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.445678&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;3.297303&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  
&lt;span class=&quot;mf&quot;&gt;1.042222&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;6.105155&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.618787&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;10.320986&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;  
&lt;span class=&quot;mf&quot;&gt;1.152083&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;0.548467&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  
&lt;span class=&quot;mf&quot;&gt;0.828534&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;2.676045&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.237728&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;10.549033&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;  
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.683565&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.166125&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  
&lt;span class=&quot;mf&quot;&gt;0.229456&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;5.921938&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.959885&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;11.555336&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;  
&lt;span class=&quot;mf&quot;&gt;0.492911&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;10.993324&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;  
&lt;span class=&quot;mf&quot;&gt;0.184992&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;8.721488&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;  
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.355715&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;10.325976&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;  
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.397822&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;8.058397&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;  
&lt;span class=&quot;mf&quot;&gt;0.824839&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;13.730343&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;  
&lt;span class=&quot;mf&quot;&gt;1.507278&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;5.027866&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  
&lt;span class=&quot;mf&quot;&gt;0.099671&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;6.835839&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.344008&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;10.717485&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;  
&lt;span class=&quot;mf&quot;&gt;1.785928&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;7.718645&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.918801&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;11.560217&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;  
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.364009&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;4.747300&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.841722&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;4.119083&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  
&lt;span class=&quot;mf&quot;&gt;0.490426&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;1.960539&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.007194&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;9.075792&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;  
&lt;span class=&quot;mf&quot;&gt;0.356107&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;12.447863&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;  
&lt;span class=&quot;mf&quot;&gt;0.342578&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;12.281162&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;  
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.810823&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.466018&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  
&lt;span class=&quot;mf&quot;&gt;2.530777&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;6.476801&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  
&lt;span class=&quot;mf&quot;&gt;1.296683&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;11.607559&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;  
&lt;span class=&quot;mf&quot;&gt;0.475487&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;12.040035&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;  
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.783277&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;11.009725&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;  
&lt;span class=&quot;mf&quot;&gt;0.074798&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;11.023650&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;  
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.337472&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;0.468339&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.102781&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;13.763651&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;  
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.147324&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;2.874846&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  
&lt;span class=&quot;mf&quot;&gt;0.518389&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;9.887035&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;  
&lt;span class=&quot;mf&quot;&gt;1.015399&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;7.571882&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;  
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.658086&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.027255&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  
&lt;span class=&quot;mf&quot;&gt;1.319944&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;2.171228&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  
&lt;span class=&quot;mf&quot;&gt;2.056216&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;5.019981&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.851633&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;4.375691&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.510047&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;6.061992&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;  
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.076637&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;3.181888&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  
&lt;span class=&quot;mf&quot;&gt;1.821096&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;10.283990&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;  
&lt;span class=&quot;mf&quot;&gt;3.010150&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;8.401766&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.099458&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;1.688274&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.834872&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.733869&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.846637&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;3.849075&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  
&lt;span class=&quot;mf&quot;&gt;1.400102&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;12.628781&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;  
&lt;span class=&quot;mf&quot;&gt;1.752842&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;5.468166&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  
&lt;span class=&quot;mf&quot;&gt;0.078557&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;0.059736&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  
&lt;span class=&quot;mf&quot;&gt;0.089392&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.715300&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  
&lt;span class=&quot;mf&quot;&gt;1.825662&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;12.693808&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;  
&lt;span class=&quot;mf&quot;&gt;0.197445&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;9.744638&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;  
&lt;span class=&quot;mf&quot;&gt;0.126117&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;0.922311&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.679797&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;1.220530&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  
&lt;span class=&quot;mf&quot;&gt;0.677983&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;2.556666&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  
&lt;span class=&quot;mf&quot;&gt;0.761349&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;10.693862&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;  
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.168791&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;0.143632&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  
&lt;span class=&quot;mf&quot;&gt;1.388610&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;9.341997&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;  
&lt;span class=&quot;mf&quot;&gt;0.317029&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;14.739025&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;  &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;训练结果：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/150729_5.png&quot; alt=&quot;训练结果&quot; /&gt;&lt;/p&gt;

&lt;p&gt;(a)梯度下降算法迭代500次。&lt;/p&gt;

&lt;p&gt;(b)随机梯度下降算法迭代200次。&lt;/p&gt;

&lt;p&gt;(c)改进的随机梯度下降算法迭代20次。&lt;/p&gt;

&lt;p&gt;(d)改进的随机梯度下降算法迭代200次。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>广告特征工程+人工智能：在线程序化特征定义（一）</title>
      <link>http://lilifeng.net/blogs/2015/07/28/algorithm-ad-feature-online-feature-definition/</link>
      <pubDate>Tue, 28 Jul 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>原生</category>
      
      <category>DSP</category>
      
      <category>算法</category>
      
      
      <category>广告平台</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/07/28/algorithm-ad-feature-online-feature-definition/</guid>
      <description>&lt;blockquote&gt;
  &lt;p&gt;系列列表：&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;/blogs/2012/07/28/algorithm-ad-feature-online-feature-definition/&quot;&gt;广告特征工程+人工智能：在线程序化特征定义（一）&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;/blogs/2012/07/30/algorithm-ad-feature-bigdata-reference-inputs/&quot;&gt;广告特征工程+人工智能：大数据结果引入并特征相关化（二）&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;/blogs/2012/08/01/algorithm-ad-feature-history-teach/&quot;&gt;广告特征工程+人工智能：特征历史数据指导特征计算（三）&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;#在线程序化特征定义&lt;/p&gt;

&lt;p&gt;例子，请参考&lt;a href=&quot;http://wenku.baidu.com/link?url=G3GSS98khJorXesmyl1uWMq-EHJgFyngkn-w6xxZEshkwJ6unOqs-5QZa5JGek37Ye8N3UD4zGA5G7IkjJ6DmLGfvYR3rwNN2d86kt9K_B3&quot;&gt;新华信2011年上半年的研究报告&lt;/a&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;TIME＝2011HY1
SOURCE＝XINHUAXIN

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Data]
&lt;span class=&quot;nv&quot;&gt;F1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;用户.年龄
&lt;span class=&quot;nv&quot;&gt;F17&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;用户.子女.count
&lt;span class=&quot;nv&quot;&gt;F34&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;用户.月均税前收入
&lt;span class=&quot;nv&quot;&gt;F35&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;用户.月均税前收入+用户.配偶.月均税前收入
&lt;span class=&quot;nv&quot;&gt;F45&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;轿车.调研.平均油耗不开空调
&lt;span class=&quot;nv&quot;&gt;F46&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;轿车.调研.平均油耗开空调
&lt;span class=&quot;nv&quot;&gt;F54&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;用户.轿车.满意度


&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Feature]
&lt;span class=&quot;nv&quot;&gt;F2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;用户.轿车.Exists&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;轿车.cat&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;微型&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;F3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;用户.轿车.Exists&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;轿车.cat&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;小型&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;F4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;用户.轿车.Exists&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;轿车.cat&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;紧凑型&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;F5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;用户.轿车.Exists&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;轿车.cat&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;中型&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;F6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;用户.轿车.Exists&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;轿车.cat&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;中大型&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;F7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;用户.轿车.count&amp;gt;0
&lt;span class=&quot;nv&quot;&gt;F8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;用户.轿车.Exists&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;轿车.type&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;SUV&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;F9&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;用户.轿车.Exists&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;轿车.type&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;MPV&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;F10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;用户.性别＝＝男性
&lt;span class=&quot;nv&quot;&gt;F11&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;用户.性别＝＝女性
&lt;span class=&quot;nv&quot;&gt;F12&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;用户.已婚
&lt;span class=&quot;nv&quot;&gt;F13&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;用户.未婚
&lt;span class=&quot;nv&quot;&gt;F14&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;用户.离异
&lt;span class=&quot;nv&quot;&gt;F15&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;用户.子女.count&amp;gt;0
&lt;span class=&quot;nv&quot;&gt;F16&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;用户.子女.count&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0
&lt;span class=&quot;nv&quot;&gt;F18&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;用户.学历&amp;lt;＝高中及以下
&lt;span class=&quot;nv&quot;&gt;F19&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;用户.学历＝＝大专
&lt;span class=&quot;nv&quot;&gt;F20&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;用户.学历＝＝本科
&lt;span class=&quot;nv&quot;&gt;F21&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;用户.学历&amp;gt;＝硕士
&lt;span class=&quot;nv&quot;&gt;F22&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;用户.行业.Exists&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;行业.cat&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;零售批发&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;F23&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;用户.行业.Exists&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;行业.cat&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;贸易进出口&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;F24&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;用户.职业.当前.职级＝＝一般
&lt;span class=&quot;nv&quot;&gt;F25&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;用户.职业.当前.职级＝＝中级管理
&lt;span class=&quot;nv&quot;&gt;F26&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;用户.职业.当前.职级＝＝高级管理
&lt;span class=&quot;nv&quot;&gt;F27&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;用户.职业.当前.职级＝＝所有者
&lt;span class=&quot;nv&quot;&gt;F28&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;用户.职业.当前.单位.性质＝＝私营企业
&lt;span class=&quot;nv&quot;&gt;F29&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;用户.职业.当前.单位.性质＝＝外资企业
&lt;span class=&quot;nv&quot;&gt;F30&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;用户.职业.当前.单位.性质＝＝国营集体企业
&lt;span class=&quot;nv&quot;&gt;F31&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;用户.职业.当前.单位.性质＝＝政府机关事业单位
&lt;span class=&quot;nv&quot;&gt;F32&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;用户.职业.当前.单位.人数&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;20
&lt;span class=&quot;nv&quot;&gt;F33&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;用户.职业.当前.单位.人数&amp;lt;20
&lt;span class=&quot;nv&quot;&gt;F36&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;调研.用户.购车动机.Contains&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;上下班方便&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;F37&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;调研.用户.购车动机.Contains&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;与客户打交道时获得信任&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;F38&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;调研.用户.购车动机.count&amp;gt;0
&lt;span class=&quot;nv&quot;&gt;F39&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;调研.用户.购车考虑因素.Contains&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;外观&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;F40&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;调研.用户.购车考虑因素.Contains&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;安全性&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;F41&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;调研.用户.车辆使用用途.Contains&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;上下班代步&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;F42&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;调研.用户.车辆使用用途.Contains&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;购物外出就餐&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;F43&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;调研.用户.车辆行驶路面.Contains&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;市内道路&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;F44&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;调研.用户.车辆行驶路面.Contains&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;高速公路&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;F47&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;轿车.cat&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;微型
&lt;span class=&quot;nv&quot;&gt;F48&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;轿车.cat&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;＝小型
&lt;span class=&quot;nv&quot;&gt;F49&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;轿车.cat&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;＝紧凑型
&lt;span class=&quot;nv&quot;&gt;F50&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;轿车.cat&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;＝中型
&lt;span class=&quot;nv&quot;&gt;F51&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;轿车.cat&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;＝中大型
&lt;span class=&quot;nv&quot;&gt;F52&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;轿车.type＝&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;SUV
&lt;span class=&quot;nv&quot;&gt;F53&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;轿车.type＝&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;MPV

&lt;span class=&quot;nv&quot;&gt;F39&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;上下文.ua.Contains&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;...&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
    </item>
    
    <item>
      <title>Linux琐碎记录之统计源码的行数</title>
      <link>http://lilifeng.net/blogs/2015/07/27/linux-sourcecode-line-counting/</link>
      <pubDate>Mon, 27 Jul 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>Linux</category>
      
      
      <category>Desktop</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/07/27/linux-sourcecode-line-counting/</guid>
      <description>&lt;p&gt;Linux下wc命令是统计代码行数的，其用法如下：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;用法：wc &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;选项]... &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;文件]...
　或：wc &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;选项]... --files0-from&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;F
输出每个指定文件的行数、单词计数和字节数，如果指定了
多于一个文件，继续给出所有相关数据的总计。如果没有指定
文件，或者文件为&lt;span class=&quot;s2&quot;&gt;&quot;-&quot;&lt;/span&gt;，则从标准输入读取数据。
  -c, --bytes        输出字节数统计
  -m, --chars        输出字符数统计
  -l, --lines        输出行数统计
      --files0-from&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;文件    从指定文件读取以NUL 终止的名称，如果该文件被
                    指定为&lt;span class=&quot;s2&quot;&gt;&quot;-&quot;&lt;/span&gt;则从标准输入读文件名
  -L, --max-line-length    显示最长行的长度
  -w, --words            显示单词计数
      --help        显示此帮助信息并退出
      --version        显示版本信息并退出&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;wc -l *.c *.h 就可以知道当前目录下的所有c 和 h 文件的行数的详细信息。很不错&lt;/p&gt;

&lt;p&gt;如果要递归，可以配合其他命令一起使用&lt;/p&gt;

&lt;p&gt;当前目录及子目录：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;	find . -name &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.c |xargs wc -l
	find . -name &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.cpp | xargs wc -l
	find . -name &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.h |xargs wc -l&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;想一下子 ，或许简单的可以 使用重定向技术 使用&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;	find -name &lt;span class=&quot;s2&quot;&gt;&quot;*.c&quot;&lt;/span&gt;&amp;gt;/tmp/file.list ;find -name &lt;span class=&quot;s2&quot;&gt;&quot;*.h&quot;&lt;/span&gt; &amp;gt;&amp;gt;/tmp/file.list;cat /tmp/file.list |xargs wc -l;rm /tmp/file.list&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;或者这个比较方便：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;	wc -l &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;find ./ -name &lt;span class=&quot;s2&quot;&gt;&quot;*.c&quot;&lt;/span&gt;;find -name &lt;span class=&quot;s2&quot;&gt;&quot;*.h&quot;&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;|tail -n1 &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;2.统计文件数量&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;	find . -name &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.c |wc -l&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;3.统计代码行数（过滤空行）&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;	find . -name &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.c|xargs cat|grep -v ^&lt;span class=&quot;nv&quot;&gt;$|&lt;/span&gt;wc -l&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;find --help
用法: find &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-H] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-L] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-P] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-Olevel] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-D &lt;span class=&quot;nb&quot;&gt;help&lt;/span&gt;|tree|search|stat|rates|opt|exec] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;path...] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;expression]

默认路径为当前目录；默认表达式为 -print
表达式可能由下列成份组成：操作符、选项、测试表达式以及动作：

操作符 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;优先级递减；未做任何指定时默认使用 -and&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:
      &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; EXPR &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;   ! EXPR   -not EXPR   EXPR1 -a EXPR2   EXPR1 -and EXPR2
      EXPR1 -o EXPR2   EXPR1 -or EXPR2   EXPR1 , EXPR2

位置选项 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;总是真&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: -daystart -follow -regextype

普通选项 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;总是真，在其它表达式前指定&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:
      -depth --help -maxdepth LEVELS -mindepth LEVELS -mount -noleaf
      --version -xdev -ignore_readdir_race -noignore_readdir_race

测试&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;N可以是 +N 或-N 或 N&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:-amin N -anewer FILE -atime N -cmin  
      -cnewer 文件 -ctime N -empty -false -fstype 类型 -gid N -group 名称
      -ilname 匹配模式 -iname 匹配模式 -inum N -ipath 匹配模式 -iregex 匹配模式
      -links N -lname 匹配模式 -mmin N -mtime N -name 匹配模式 -newer 文件
      -nouser -nogroup -path 匹配模式 -perm &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+-]访问模式 -regex 匹配模式
      -readable -writable -executable
      -wholename PATTERN -size N[bcwkMG] -true -type &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;bcdpflsD] -uid N
      -used N -user NAME -xtype &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;bcdpfls]

动作: -delete -print0 -printf FORMAT -fprintf FILE FORMAT -print 
      -fprint0 FILE -fprint FILE -ls -fls FILE -prune -quit
      -exec COMMAND ; -exec COMMAND &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; + -ok COMMAND ;
      -execdir COMMAND ; -execdir COMMAND &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; + -okdir COMMAND ;

通过 findutils 错误报告页 http://savannah.gnu.org/ 报告错误及跟踪修定过程。如果您无法浏览网页，请发电子邮件至 &amp;lt;bug-findutils@gnu.org&amp;gt;。&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
    </item>
    
    <item>
      <title>特征提取算法：TF-IDF算法</title>
      <link>http://lilifeng.net/blogs/2015/06/17/feature-algorithm-tf-idf/</link>
      <pubDate>Wed, 17 Jun 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>DSP</category>
      
      <category>算法</category>
      
      
      <category>广告平台</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/06/17/feature-algorithm-tf-idf/</guid>
      <description>&lt;p&gt;有一篇很长的文章，我要用计算机提取它的关键词（Automatic Keyphrase extraction），完全不加以人工干预，请问怎样才能正确做到？&lt;/p&gt;

&lt;p&gt;这个问题涉及到数据挖掘、文本处理、信息检索等很多计算机前沿领域，但是出乎意料的是，有一个非常简单的经典算法，可以给出令人相当满意的结果。它简单到都不需要高等数学，普通人只用10分钟就可以理解，这就是我今天想要介绍的TF-IDF算法。&lt;/p&gt;

&lt;p&gt;让我们从一个实例开始讲起。假定现在有一篇长文《中国的蜜蜂养殖》，我们准备用计算机提取它的关键词。&lt;/p&gt;

&lt;p&gt;一个容易想到的思路，就是找到出现次数最多的词。如果某个词很重要，它应该在这篇文章中多次出现。于是，我们进行”词频”（Term Frequency，缩写为TF）统计。&lt;/p&gt;

&lt;p&gt;结果你肯定猜到了，出现次数最多的词是—-“的”、”是”、”在”—-这一类最常用的词。它们叫做”停用词”（stop words），表示对找到结果毫无帮助、必须过滤掉的词。&lt;/p&gt;

&lt;p&gt;假设我们把它们都过滤掉了，只考虑剩下的有实际意义的词。这样又会遇到了另一个问题，我们可能发现”中国”、”蜜蜂”、”养殖”这三个词的出现次数一样多。这是不是意味着，作为关键词，它们的重要性是一样的？&lt;/p&gt;

&lt;p&gt;显然不是这样。因为”中国”是很常见的词，相对而言，”蜜蜂”和”养殖”不那么常见。如果这三个词在一篇文章的出现次数一样多，有理由认为，”蜜蜂”和”养殖”的重要程度要大于”中国”，也就是说，在关键词排序上面，”蜜蜂”和”养殖”应该排在”中国”的前面。&lt;/p&gt;

&lt;p&gt;所以，我们需要一个重要性调整系数，衡量一个词是不是常见词。如果某个词比较少见，但是它在这篇文章中多次出现，那么它很可能就反映了这篇文章的特性，正是我们所需要的关键词。&lt;/p&gt;

&lt;p&gt;用统计学语言表达，就是在词频的基础上，要对每个词分配一个”重要性”权重。最常见的词（”的”、”是”、”在”）给予最小的权重，较常见的词（”中国”）给予较小的权重，较少见的词（”蜜蜂”、”养殖”）给予较大的权重。这个权重叫做”逆文档频率”（Inverse Document Frequency，缩写为IDF），它的大小与一个词的常见程度成反比。&lt;/p&gt;

&lt;p&gt;知道了”词频”（TF）和”逆文档频率”（IDF）以后，将这两个值相乘，就得到了一个词的TF-IDF值。某个词对文章的重要性越高，它的TF-IDF值就越大。所以，排在最前面的几个词，就是这篇文章的关键词。&lt;/p&gt;

&lt;p&gt;下面就是这个算法的细节。&lt;/p&gt;

&lt;p&gt;第一步，计算词频。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/150617_1.png&quot; alt=&quot;TF词频&quot; /&gt;&lt;/p&gt;

&lt;p&gt;其中TF(i)是第i个词的词频（Term Frequency），WC(i)是第i个词在当前文档中出现的次数（Word Count），WC是当前文档的总词数。&lt;/p&gt;

&lt;p&gt;第二步，计算逆文档频率。&lt;/p&gt;

&lt;p&gt;这时，需要一个语料库（corpus），用来模拟语言的使用环境。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/150617_2.png&quot; alt=&quot;IDF逆文档词频&quot; /&gt;&lt;/p&gt;

&lt;p&gt;其中IDF(i)是第i个词的逆文档词频，DC是语料库的文档总数（Document Count），DC(i)是在语料库中包含第i个词的文档总数。&lt;/p&gt;

&lt;p&gt;如果一个词越常见，那么分母就越大，逆文档频率就越小越接近0。分母之所以要加1，是为了避免分母为0（即所有文档都不包含该词）。log表示对得到的值取对数。&lt;/p&gt;

&lt;p&gt;第三步，计算TF-IDF。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/150617_3.png&quot; alt=&quot;TF-IDF公式&quot; /&gt;&lt;/p&gt;

&lt;p&gt;可以看到，TF-IDF与一个词在文档中的出现次数成正比，与该词在整个语言中的出现次数成反比。所以，自动提取关键词的算法就很清楚了，就是计算出文档的每个词的TF-IDF值，然后按降序排列，取排在最前面的几个词。&lt;/p&gt;

&lt;p&gt;还是以《中国的蜜蜂养殖》为例，假定该文长度为1000个词，”中国”、”蜜蜂”、”养殖”各出现20次，则这三个词的”词频”（TF）都为0.02。然后，搜索Google发现，包含”的”字的网页共有250亿张，假定这就是中文网页总数。包含”中国”的网页共有62.3亿张，包含”蜜蜂”的网页为0.484亿张，包含”养殖”的网页为0.973亿张。则它们的逆文档频率（IDF）和TF-IDF如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/150617_4.png&quot; alt=&quot;中国的蜜蜂养殖的TF-IDF公式&quot; /&gt;&lt;/p&gt;

&lt;p&gt;从上表可见，”蜜蜂”的TF-IDF值最高，”养殖”其次，”中国”最低。（如果还计算”的”字的TF-IDF，那将是一个极其接近0的值。）所以，如果只选择一个词，”蜜蜂”就是这篇文章的关键词。&lt;/p&gt;

&lt;p&gt;除了自动提取关键词，TF-IDF算法还可以用于许多别的地方。比如，信息检索时，对于每个文档，都可以分别计算一组搜索词（”中国”、”蜜蜂”、”养殖”）的TF-IDF，将它们相加，就可以得到整个文档的TF-IDF。这个值最高的文档就是与搜索词最相关的文档。&lt;/p&gt;

&lt;p&gt;TF-IDF算法的优点是简单快速，结果比较符合实际情况。缺点是，单纯以”词频”衡量一个词的重要性，不够全面，有时重要的词可能出现次数并不多。而且，这种算法无法体现词的位置信息，出现位置靠前的词与出现位置靠后的词，都被视为重要性相同，这是不正确的。（一种解决方法是，对全文的第一段和每一段的第一句话，给予较大的权重。）&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>半小时读懂PMP私有广告交易市场</title>
      <link>http://lilifeng.net/blogs/2015/06/10/what-is-pmp/</link>
      <pubDate>Wed, 10 Jun 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>DSP</category>
      
      <category>PMP</category>
      
      
      <category>广告平台</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/06/10/what-is-pmp/</guid>
      <description>&lt;p&gt;在程序化广告购买领域，现在没有什么比PMP更热门的了。我之前所写的这篇文章——《PMP私有交易市场——程序化广告的新高度》引起了很多反响，很多朋友问，到底什么是PMP，在它之上广告是怎么交易的，有哪些好处，又有什么样的局限？&lt;/p&gt;

&lt;p&gt;所以，我写这篇文章，想让你半个小时就弄明白PMP私有交易市场是什么，广告怎么在这个市场中间交易。然后，在后续的几个“半小时”文章中，我将继续介绍PMP的其他内容。&lt;/p&gt;

&lt;p&gt;##PMP为什么出现？&lt;/p&gt;

&lt;p&gt;想要了解PMP，最好先弄明白互联网广告的新生态，尤其是程序化广告产业链。PMP也好，RTB也好，都是互联网广告的革新——程序化的广告。这也是为什么我先写了一篇半小时读懂互联网广告新生态，在这篇文章中，认真了解Ad Exchange和RTB是很有意义的。如果你看了这篇文章，你就知道RTB的广告生态必须依赖于Ad Exchange的存在。Ad Exchange如同一个大的自由市场，各路媒体把自己空闲的广告位在Ad Exchange中登记售卖，而广告主则委托DSP在Ad Exchange中为在这些位置上展现自己的广告而不断竞价。在这个市场中，一切都是平等的，供和需对每一个人都敞开，规则对每个人都一样，若我希望在某个广告位上出现我的广告，我需要记住唯一的规则——价高者得，然后确保我的出价高于别人。&lt;/p&gt;

&lt;p&gt;但问题是，RTB是背对背的拍卖，而且在电光火石的100毫秒左右的时间内，你只有一次出价机会。这意味着原本你看好的一个人出现在了某个广告位上，你信心满满的出了高价准备让自己的广告展示在他/她的面前，但却因为另一个更加疯狂的出价者抢走了这次广告展示机会。因此，RTB显然具有不确定性，这种不确定性与SEM（PPC）的排名竞价是非常类似的，你并不是不能控制，但是你无法实现精确控制，或者只能实现部分控制。你并不能事先确保这个广告位在某事某刻一定能被你占据，你也不能事先确保一个固定的价格。竞价——瞬息万变、捉摸不定、无法精确预知，支配这个世界的规则是概率和基于实时统计的干预，但无论如何我不能让它如钟表般精确。&lt;/p&gt;

&lt;p&gt;这绝对是对互联网广告工作方式的一个剧烈颠覆，过去我们购买的是广告位，但在RTB环境下我们购买的是给人（受众）展示广告的机会，广告位反而不是那么重要了。同样，过去的互联网广告是平面广告的售卖方法——事先选择广告位置，确定投放的期间，然后谈好价钱，再然后到时看广告便行了。一切都很精确，我们事先已经知道广告会出现在哪里，也知道我们要花多少钱。不过，一旦我们花了钱，确定了广告位置和时间（位置和时间，就是我们所说的排期计划），广告的效果就是“谋事在人成事在天”了，我们虽然仍然能够实时统计查看广告的产出，但却无法实时干预。&lt;/p&gt;

&lt;p&gt;所以，RTB广告的特点是“两个不确定和一个可干预”——不确定广告位、不确定广告价格，但是广告效果可以实时干预；传统互联网广告则是“两个确定和一个不可干预”——广告位和价格确定，但效果不可干预。这也算是各有利弊吧。所以这也是为什么很多广告主仍然不能把所有的广告投放都交给RTB的原因，毕竟商业生活中，不确定性是每天都要面对的“讨厌鬼”，能回避它且回避它。&lt;/p&gt;

&lt;p&gt;从媒体的角度看，上面的不确定性也造成RTB广告也不是他们进行广告资源售卖的第一选择。那些众人追捧的优质资源，比如“爸爸去哪儿”视频的前贴片广告，总有广告主愿意出天价购买它，既如此，又何必把这些明星资源放到公共的自由市场（Ad Exchange）去竞卖呢？这个道理实际在任何的市场中都是存在的。比如北京的潘家园旧货市场，这是全球六大古董和工艺品公开交易市场之一，每天有大量的商品在这里被交易，但是真正被交易的精品却少之又少。那些真正的好东西在被放到潘家园的摊位上之前就已经被消息灵通的私人直接买走了。媒体的优质资源同样如此，这些资源如果放到公开市场中，受RTB广告的两个不确定性（不确定广告位且不确定价格）影响，很有可能不能被完全交易出去，或是即使全部交易出去也有可能无法达到媒体预期的价格。当然，各种可能性都是存在的，说不定这些资源在公开市场上反而全部卖出了高价——但一切在交易尘埃落定前全部都只是可能性。可能性的同义词是不确定性，我说过，人们讨厌不确定性。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/150610_2.jpg&quot; alt=&quot;RTB广告特点&quot; /&gt;&lt;/p&gt;

&lt;p&gt;（上面这张图很好地说明了RTB广告的特点。RTB不按照广告位进行售卖，而是根据受众（人）来售卖广告，并且你的广告是否能显示给这个人，取决于你愿意出的价格。因此RTB广告的广告位是无法预先确定的，广告价格也不可能在竞价之前就精确知道。）&lt;/p&gt;

&lt;p&gt;既然这个世界上有不需要公开自由市场就能够完成双方都满意的交易的可能性，那干嘛还非要到公开市场上去呢？因此，这种情况下的买卖双方不再去公开市场，也就是说他们不会去Ad Exchange中“搞拍卖”，而是寻求一个私下交易的场所，在“一个月黑风高”的地方“偷偷”完成买卖，这个场所就是PMP，即Private Marketplace（私有交易市场）的缩写。因此你也就可以发现，PMP实际上是和Ad Exchange相对应的概念，前者是私下里的交易场所，后者是公开交易场所。
PMP是什么
看了前面的文字，大家可能会困惑了，传统的广告交易不就是“私有的”吗？如果我不做RTB的广告购买，而是跟新浪或者优酷的广告销售部门直接联系购买广告位，这不就是“私下交易”了吗？或者说，几乎所有我们过去传统的广告都是私有购买方式，那么PMP，这个听起来玄而又玄的东西，究竟是什么？&lt;/p&gt;

&lt;p&gt;这个问题真是好问题，因为它直击关键。没错，传统广告交易几乎都是私有的，但它不是程序化的广告。PMP的交易也是私有的，同时，它还是程序化的广告。这是跟传统广告最本质的区别。或者换句话说，PMP的交易方式与传统广告类似（但实际上因为程序化的影响，二者并不完全一样），但工作方式（即程序化广告）却和传统广告完全不同。&lt;/p&gt;

&lt;p&gt;因此我们可以给PMP下一个定义，即它是将传统广告的私有的交易方式与程序化广告的工作方式相结合的新互联网广告形式。传统广告的私有交易有一个非常强大的好处，那就是广告位置都是在广告上线之前就必须确定好的。比如，大家在电视上看到的广告，肯定是早在好几周甚至好几个月前就被广告主预定下来的，不可能在广告要播出的那一刻，才由电视台到处询问谁要这个时间的广告。&lt;/p&gt;

&lt;p&gt;互联网上（尤其是PC上）的大多数广告也是同样如此。这种方式保证了广告在投放前已经完全确定了时间、位置和价格，不存在任何不确定性。人们当然喜欢这种方式，因为这种方式帮助广告主提前锁定了他们想要的资源。PMP的特征之一，就是要尽可能地保留这种方式，尽可能地消除人们讨厌的“不确定性”。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/150610_1.jpg&quot; alt=&quot;PMP整合RTB与传统广告资源&quot; /&gt;&lt;/p&gt;

&lt;p&gt;另一方面，PMP也希望能够把程序化广告（例如RTB）的好处引入进来。如果你读过我前面提到的两篇文章，你就知道程序化好处有很多神奇的地方，最鲜明的，就是利用计算机智能，根据受众的情况或是其他规则来动态管理和操纵广告的投放工作，从而在几乎实时的情况下随时调控广告，实现广告效果的提升。&lt;/p&gt;

&lt;p&gt;所以，你可以认为，PMP ≈ 消除不确定性 + 程序化广告。不过这个等号不是等于，是约等于，后面你会知道为什么这里不能放上等于号。&lt;/p&gt;

&lt;p&gt;我这么说你可能还是“不明觉厉”，没事，接着看。&lt;/p&gt;

&lt;p&gt;##PMP的交易方式&lt;/p&gt;

&lt;p&gt;上一节讲了，PMP的特征之一是私下的交易，理论上能够提前锁定资源，但与传统的私下交易方式并不完全等同。或者说，它是传统私下交易方式在程序化时代的推陈出新。PMP的交易方式跟传统广告交易方式有什么差异呢？回答这个问题，我们需要具体了解PMP的几种交易方式。&lt;/p&gt;

&lt;p&gt;第一种，也是最基础的一种交易方式被称为PDB，即Private Direct Buy（私有直接购买），这种方式简单讲，是一对一（1v1）的购买方式。这种购买方式，与我们传统的广告采买方式基本上没有区别，即广告主找媒体确定好广告位置和价格，然后按照排期规定的时间进行广告投放。在传统方式中，广告排期（spot plan）是这个交易过程的关键，而在PDB中，也完全如此。&lt;/p&gt;

&lt;p&gt;PDB这种方式，是广告主最容易接受的方式。首先，与传统采买方式一致意味着广告位资源是预先保证的，一旦排期确定，PO（purchase order）下达，广告位资源就肯定不可能易主。再者，不改变传统的广告采买过程意味着内部的组织和工作流程都不需要发生什么变化，因此也就没有“政治”问题（你懂的）。更何况，在此之上还能实现程序化的好处，有百利而无一害，何乐不为。&lt;/p&gt;

&lt;p&gt;PDB方式支持传统的CPD（Cost Per Day）的广告采买方式，也支持CPM（Cost Per Milli，即广告被千次曝光所需的成本）和CPC（Cost Per Click）的方式。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/150610_2.jpg&quot; alt=&quot;PDB广告模式&quot; /&gt;&lt;/p&gt;

&lt;p&gt;第二种，被称为Preferred Deals（优先交易），与第一种方式相比，情况略有不同。第一种方式下，广告位资源是广告投放前就锁定的，但在这种方式下，广告资源具有一定的不确定性。这个不确定性并不是指广告位不能被锁定，也不是指广告的价格不能预先谈好，而是指这个广告位的展示量，不能预先保证。什么意思呢，比如你看中了网站分析在中国(www.chinawebanalytics.cn)的这个博客上的某个广告位，这个广告位碰巧是按照CPM方式出售的。由于我的网站的流量每天都不一样，有时候多，有时候少，因此这个广告位上广告的展示次数不能预先确定，这就意味着尽管广告位可以卖给你，但是展示量却保证不了，这样你在我这个广告位上做广告的预算就不能精确预知了。&lt;/p&gt;

&lt;p&gt;更何况，我的这个广告位因为是按照CPM来出售的，也就不一定只是卖给你，我可能同时还卖给了另外一个广告主，并且我还保证了给他每天确保1000次展示，而卖给你就只能是在卖个另一个广告主之后，是他买走的1000次之外的剩下的展现量。即先紧着别人用，剩下的才能给你，这种情况下，量就更不容易保证了。这个例子是现实世界中常常发生的情况，对于另外那个广告主而言，他跟我的购买方式实际上是第一种，即PDB的购买方式，而跟你，则是Preferred Deals的购买方式。从这里可以看出来，媒体在释放广告资源的时候，PDB方式的优先级，要高于Preferred Deals方式，而Preferred Deals的优先级，又高于需要完全竞价的RTB。&lt;/p&gt;

&lt;p&gt;当然了，Preferred Deals也是双向选择的，媒体不能保证你的广告资源的展示量，你当然也可以把自己不需要的量进行退回，这样你就有了一点点“选人”，即按照受众情况来进行投放的权利。这里我不引申太多，在后面的文章中我会涉及。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/150610_2.jpg&quot; alt=&quot;Preferred Deals广告方式&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Preferred Deals方式只支持CPM和CPC的采买方式，传统的CPD方式不可以。为什么？这个问题留给大家想一想，相信答案不难找。&lt;/p&gt;

&lt;p&gt;第三种，被称为Private Auction（私有竞价，或者私下竞价），这种方式比前两种方式都要复杂一点点，但其实并不难理解。如果说第一种PDB的方式是纯净无广告主为广告位资源竞争的世界，那么Preferred Deals就开始有了跟其他广告主竞争广告位的可能性，只是因为优先级不够高，所以也就没有直接冲突。不过，如果你有钱，任性，你觉得凭什么我的优先级就要比别人低一些，我不服，这个时候怎么办？&lt;/p&gt;

&lt;p&gt;互联网广告市场，尤其是品牌广告市场，有钱任性的大买家实在太多了，好资源又只有那么多（而且特别是中国，是一个媒体资源特别集中的地方），所以几个广告主都看中了同一个广告位置的情况，实在是屡见不鲜。程序化广告诞生前的传统售卖方式下，决定你能否拿到这个广告位置的不仅仅是钱的问题，还要看时机（先提出合理价格购买的，可能就先搞定了），以及一些你知道的其他的因素（你懂的……）。不过，这绝对不是最佳的资源配置方式，如果这个广告位被售出之后，又有愿意出更大价钱的广告主出现，对媒体来说就是绝对的损失。Private Auction的出现就是希望解决这个问题。&lt;/p&gt;

&lt;p&gt;在PMP的Private Auction方式下，媒体把那些众多土豪广告主们都喜欢的广告位置专门拿出来，放到一个半公开的市场中进行售卖。说它半公开，是因为这个市场有点类似于白金俱乐部或是VIP交易室之类的东西，广告主要到达一定的牛逼程度才能够进去。当这个市场中某些个广告资源开始售卖，便通知这些土豪广告主们，请你们进入我们的VIP交易室来采购吧！不过呢，不是直接买，而是广告主们大家一起竞价，价高者得。你看看，这个过程非常类似于我在前面的几篇文章中讲过的RTB的方法，不过RTB所依托的市场，也就是Ad Exchange大市场，是一个菜市场，谁都可以来买，没有准入门槛。但是这个Private Auction的交易场所，就不是菜市场了，而是VIP市场，只有土豪们玩，屌丝们就别掺合了。&lt;/p&gt;

&lt;p&gt;同第二种Preferred Deals方式一样，Private Auction方式也必须按照CPM进行交易。由于Private Auction的资源一般都是比较好的优质资源（媒体内部被称为高优先级资源）因此，尽管它也是竞价方式，也不能100%保证你能得到这些资源，但它的广告位资源的可保证度还是比RTB要可靠太多太多了。因此，在下图中，你可以看到橙色的Private Auction介于广告位预留和广告位不预留中线上，只是稍微偏向广告位不预留一些。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/150610_2.jpg&quot; alt=&quot;Private Aution广告模式&quot; /&gt;&lt;/p&gt;

&lt;p&gt;前面我们提到了PMP ≈ 消除不确定性 + 程序化广告，公式的等号用了约等号，现在你应该知道原因。PMP的后两种交易方式（Preferred Deals）和（Private Auction）都没有完全消除不确定性。不过，相对于RTB而言，不确定程度肯定是大大降低了。&lt;/p&gt;

&lt;p&gt;在Private Auction的交易方式下，PMP，即私有交易市场这种说法才最能体现其本质，而PDB或者Preferred Deals更像是私下里的直接交易，谈不上真正意义上的市场，不过，约定俗成，这三种方式我们都把它归入到PMP的大范畴中去。&lt;/p&gt;

&lt;p&gt;目前，在国内，三种方式中最为常见的是第二种，开始变得常见的是第一种，而第三种还几乎没有看到案例。第三种不够普及的原因显然不是技术上的，更像是文化上的。中国人不喜欢竞争，或者，不喜欢公开竞争，我们更信奉在明面上战斗之前，就暗地里先搞定敌人。所以，那些需要共同竞价的方式，无论是公共的，还是有准入门槛的，大家都不喜欢。不过，在美国，第三种方式反而是最为常见的。这是后话了，按下不表。&lt;/p&gt;

&lt;p&gt;在国际广告局（IAB）的介绍程序化广告的标准文档中，我们会看到上面所说的四种方式，如下表所示。我就不翻译了，大家自己看。IAB用的名字跟中国人喜欢用的名字（虽然都是英语）有所不同，不过我相信这对你不是问题，你肯定能够很轻松地对号入座。读懂了我上面的文字，下表也就不是问题了。甚至，当我们国家的互联网公司再推出让你莫名其妙的广告产品的时候，你也会立即恍然大悟，原来是这个意思！&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/150610_3.png&quot; alt=&quot;IAB程序化广告&quot; /&gt;&lt;/p&gt;

&lt;p&gt;再看看新浪的程序化广告产品的宣传册，是不是一眼就看明白了（甚至看到了它措辞上的矛盾之处——既然是Preferred Deals，就很难100%的保量啦。:P）。如下图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/150610_4.jpg&quot; alt=&quot;新浪程序化购买&quot; /&gt;&lt;/p&gt;

&lt;p&gt;好了，这一个半小时就说到这里。在其他的几个“半小时”文章中，我将接着介绍：PMP的价值、PMP的局限性、PMP的效果以及我们如何实现实现PMP。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>蓝色光标斥资3.6亿美元收购Domob和MadHouse</title>
      <link>http://lilifeng.net/blogs/2015/06/09/news-bluecursor-domob-madhouse/</link>
      <pubDate>Tue, 09 Jun 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>DSP</category>
      
      <category>ADX</category>
      
      <category>News</category>
      
      
      <category>广告平台</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/06/09/news-bluecursor-domob-madhouse/</guid>
      <description>&lt;p&gt;蓝色光标(300058)今日发布公告，宣布同时收购中国两大移动广告公司，其中，以2.89亿美元收购Domob Limited100%的股权和多盟智胜网络技术(北京)有限公司95%的股权(以下简称“Domob”或“多盟”)；以6120万美元收购Madhouse Inc.(以下简称“Madhouse”或“亿动”)51%的股权，同时以1000万美元对亿动进行增资，上述投资完成后，蓝色光标将持有亿动54.77%的股权。&lt;/p&gt;

&lt;p&gt;多盟和亿动是中国移动广告行业两家最大的公司，预计公司2015年营收合计将至20亿左右，同时蓝标集团旗下SNK及移动互联相关公司将有超过10亿移动广告营收。预计2015年，蓝色光标在移动广告业务备考总收入将超过30亿。&lt;/p&gt;

&lt;p&gt;蓝色光标传播集团董事长兼首席执行官赵文权表示：“在不到一年的时间内，我们已经在规模上成为移动广告市场的绝对领导者，明年蓝色光标的移动广告收入至少超过50亿！蓝色光标的目标是成为一家世界级的传播集团，而移动营销无疑是增长最快，代表未来方向的一个市场。”&lt;/p&gt;

&lt;p&gt;多盟是中国第一智能手机广告平台，总部在北京，拥有300余名员工，出色的技术基因为其持续创新提供了保障。多盟在中国率先推出插屏、开屏、信息流、游戏内视频等广告形式，旗下拥有自主研发的Ad network和移动DSP平台“多盟必得”，为近5500个客户提供服务。多盟与16万媒体合作，独家代理PM2.5等优质APP的广告业务，率先与腾讯广点通和百度贴吧完成了对接，并正在与Facebook、谷歌AdWords等国际流量平台展开深入合作。此次收购完成后，腾讯将继续为多盟提供合作机会和相关支持。2014年度，多盟实现营业收入人民币55407万元，净亏损992万元。&lt;/p&gt;

&lt;p&gt;亿动总部位于上海，拥有240余名员工，立足中国和印度两大新兴市场，基于智能移动广告平台和技术帮助国际及本土品牌与消费者进行沟通和传播，并为众多的中国开发者提供移动广告的投放和优化服务。旗下拥有程序化购买平台“优道”、App推广平台“亿道”，In-App广告网络“智道”和即时高效的受众扩充平台“竞道”。亿动与近三万媒体合作，包括墨迹天气、美图秀秀等Hero APP.2014年度，亿动营业收入为人民币3.84亿元，净利润为人民币-2903万元。&lt;/p&gt;

&lt;p&gt;关于此次收购，蓝色光标移动互联公司CEO潘飞表示：“多盟和亿动是目前市场上最优秀的两家移动广告品牌，他们在技术、资源、平台产品和服务方面有着非常好的积累与经验。同时，两家公司在区域优势、行业优势和技术优势方面高度互补。并购之后，我们将促成两家公司与蓝标移动互联在资源体系、服务体系、客户体系及技术平台上实现战略共享，实现1 1大于2的整合效应。多盟和亿动的加入，已经让蓝色光标在规模上成为了中国移动广告行业的绝对领军者。但是我们的目标不止于规模，而是要全面打造移动互联时代的第一广告品牌，引领整个行业的发展。为此，我们将还会有一系列更大的动作与举措。”&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>广告主如何选择合适自己的DSP？</title>
      <link>http://lilifeng.net/blogs/2015/06/08/how-to-choose-dsp/</link>
      <pubDate>Mon, 08 Jun 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>DSP</category>
      
      
      <category>广告平台</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/06/08/how-to-choose-dsp/</guid>
      <description>&lt;p&gt;#DSP筛选标准&lt;/p&gt;

&lt;p&gt;目前国内市场上有几十家DSP供应商，各DSP产品因供应商本身的资源积累、客户群体、技术实力等因素而各有侧重。&lt;/p&gt;

&lt;p&gt;广告主调研显示，在选择DSP时，广告主最在意的是DSP的媒体资源整合能力，其次是数据整合应用、竞价优化和投放控制能力。&lt;/p&gt;

&lt;p&gt;在广告主调研的基础上，综合行业内第三方观点，我们认为以下四个方面对DSP的品质有着举足轻重的影响，希望能够成为您选择DSP时的参考。&lt;/p&gt;

&lt;p&gt;##资源–对接资源的质与量&lt;/p&gt;

&lt;p&gt;我们的广告主调研显示，广告主考量DSP时最看重的指标就是DSP的媒体资源整合能力，即它能否对接多屏、多渠道的媒体资源，能否给广告主多远的资源选择。&lt;/p&gt;

&lt;p&gt;海量的媒体资源直接决定了广告主投放的覆盖范围，而媒体资源的质量关系广告主的品牌安全和形象。&lt;/p&gt;

&lt;p&gt;那么，哪些方面可以反映DSP的资源对接能力呢？&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;日均PV/UV?覆盖受众的比例？&lt;/li&gt;
  &lt;li&gt;对接的资源渠道有哪些？比如对接哪些广告交易平台、广告网络、SSP等？&lt;/li&gt;
  &lt;li&gt;是否支持多种媒体资源购买方式，而不是仅限于RTB?&lt;/li&gt;
  &lt;li&gt;对接的媒体资源质量？除了广告交易平台上常见的长尾媒体外，是否有优质、排名靠前的媒体资源？&lt;/li&gt;
  &lt;li&gt;能否对接并优化配置多屏资源多种类的媒体资源？包括视频资源、智能手机和IPAD上的APP和一定网站资源等。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;##技术–算法和技术实力&lt;/p&gt;

&lt;p&gt;DSP平台是否具有强大的技术支撑是DSP是否能够经受市场考验并取得可持续发展的决定因素，DSP的主要核心功能—定向、RTB、优化等都依赖算法技术的支持。具体算法技术实力的体现请参见。&lt;/p&gt;

&lt;p&gt;##数据–数据整合应用能力&lt;/p&gt;

&lt;p&gt;能否活用大数据是DSP功能深度的重要标尺，对于数据的挖掘深度决定了DSP能在多大程度上发挥它的功能。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;是否有自有人群和投放历史数据库？&lt;/li&gt;
  &lt;li&gt;能否对接DMP和其他数据来源（如广告主CRM、第三方数据供应商等）？&lt;/li&gt;
  &lt;li&gt;是否定期进行数据更新？
　　&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;##报告的维度和实时性&lt;/p&gt;

&lt;p&gt;实时、有深度的投放报告直接影响广告主、代理能否准确掌握投放表现。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;投放报告的指标有哪些？能否进行交叉维度查看？&lt;/li&gt;
  &lt;li&gt;投放报告的更新频率是（每小时？每天？实时？）&lt;/li&gt;
  &lt;li&gt;是否支持多屏的投放报告（如PC段、移动端、IPAD）？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;##经验–服务是否全方位&lt;/p&gt;

&lt;p&gt;成功的广告投放不仅取决于DSP这一平台支持，也取决于是否具有专业高效的配套服务作为支撑。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;是否有专业的执行和支持团队（如创意、客户服务等）？&lt;/li&gt;
  &lt;li&gt;是否对广告主品牌和营销目标有清晰认识并能提供专业投放建议？&lt;/li&gt;
  &lt;li&gt;是否对全产业链有清晰的认识，能够提供端到端（媒体端到广告端）的全面服务？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;##经验和市场影响力&lt;/p&gt;

&lt;p&gt;丰富的行业和项目经验是DSP优秀品质的积淀，市场影响力一定程度上反应了DSP供应商的市场地位和口碑&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;是否有DSP领域的先行经验？&lt;/li&gt;
  &lt;li&gt;是否有不同行业、多个项目的广告投放经验？&lt;/li&gt;
  &lt;li&gt;是否有良好的行业口碑和影响力？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;　　同时，广告主也表示对DSP未来发展趋势的期许，特别是对于DSP在受众数据的积累应用，受众细分、对接媒体品质和数据的发展颇为期许，我们相信这些方面也将是影响广告主关于dsp决策的重要方面。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>傅盛：一家公司CEO该如何做战略?</title>
      <link>http://lilifeng.net/blogs/2015/06/05/how-to-be-a-ceo/</link>
      <pubDate>Fri, 05 Jun 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>http</category>
      
      
      <category>Internet</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/06/05/how-to-be-a-ceo/</guid>
      <description>&lt;p&gt;最近，我开始重新思考一家公司的管理。&lt;/p&gt;

&lt;p&gt;去年，我写了一篇《一家公司的CEO该干什么？》，讲过目标、路径、资源的三段论。顺着这个思路，我在思考：目标从哪里来？如何寻找路径？资源怎么去投？&lt;/p&gt;

&lt;p&gt;回头看，猎豹上市以来，一直遭受质疑。即使收入增长率达到120%到130%，别人始终认为海量用户是假的，工具软件没有足够壁垒，中国公司海外商业化就没有成功过等等。&lt;/p&gt;

&lt;p&gt;总之，一句话，你为什么就可以做到？&lt;/p&gt;

&lt;p&gt;这种质疑给公司估值打了大大的折扣。当然，猎豹已经涨到40多亿美金，最高超过50亿美金，移动收入超过PC，七成来自海外。在PC为主业的中国公司中，猎豹算是转型最快的公司之一。&lt;/p&gt;

&lt;p&gt;反过来思考：我当时为什么会选择这条路？这条道路又是以怎样的方法映射下来？&lt;/p&gt;

&lt;p&gt;现象即规律。当某个现象发生时，一定有某种规律。CEO必须要透过现象看规律。千万不要认为这家伙就是运气好，富二代，会营销。&lt;/p&gt;

&lt;p&gt;如果简单这样看问题，很容易变成一个批判者，而不是创业者。别人强了，一定代表某种规律。有时候我们总结为运气，本质是因为抽象不出规律，只好说是运气。&lt;/p&gt;

&lt;p&gt;一家公司从一开始，就该知道想成为什么样的公司，并且知道该怎样做。对一个创业者来说，最开始并不一定知道，但可以通过提取规律，不断加强这种战略的思维。&lt;/p&gt;

&lt;p&gt;姑且称之为，一个CEO的战略修养。&lt;/p&gt;

&lt;p&gt;问题来了，什么是战略？&lt;/p&gt;

&lt;p&gt;前两天，我们请专家给猎豹做诊断，最后结论还是一家创业公司。当时填了一个公式：公司的好坏=战略*执行。&lt;/p&gt;

&lt;p&gt;没错，这个说法在工业时代比较重要。几万人的大公司，组织一旦脱节，战略就实施不了。但也有一个问题，它会把战略方向与执行力放在同一个维度思考。&lt;/p&gt;

&lt;p&gt;但战略和执行力同样重要吗？&lt;/p&gt;

&lt;p&gt;答案是不一样。一旦你认为同样重要，创业者就会愿意花时间在执行力。因为绝大多数创业者就是执行力超强，于是在执行力上，就会花越来越多的时间。但很快，他们又开始在方向的选择上犯迷糊了。最可怕的是，他可能在一个不正确的方向花了太多精力。&lt;/p&gt;

&lt;p&gt;苹果前CEO斯卡利提了一个词叫（zoom out）抽象和(zoom in )聚焦，前者指从战略高度看整个行业方向，后者指把每个细节做到极致。既能看大局，又能沉下去。世界少有把这二者完美统一的人。&lt;/p&gt;

&lt;p&gt;创业要解决的，就是开放性的环境下，找到方向。这方面，美国公司强很多。因为美国的教育背景鼓励个人开放性思考，而我们从小做的就是封闭型题目。题目答对，选择就行。&lt;/p&gt;

&lt;p&gt;开放性和封闭性对人的思维锻炼，不可同语。前者强于方向，后者强于执行。而今天的大环境，执行已经被认为很重要的前提下，方向反而成为我们最缺的一环。&lt;/p&gt;

&lt;p&gt;我并不是说，执行不重要。执行只是基本功。在执行非常重要的前提下，找到一个正确的方向，这是一件更重要的事情。&lt;/p&gt;

&lt;p&gt;美国公司真的是靠执行取胜的吗？&lt;/p&gt;

&lt;p&gt;未必。以中国公司视角看，很多美国公司的执行力很糟糕。比如英特尔发明了内存芯片，当日本公司进入这个领域时，他们发现做不过，只好放弃，重新寻找了一个CPU，在一个新的CPU方向上，变成了全球最伟大的公司之一。&lt;/p&gt;

&lt;p&gt;美国公司最牛在于：它建立了很好的视野，在这样的视野下，打下从0到1的基础，然后用更好的方向，弥补执行力的不足。当然，同一个方向，战略差不多的情况，只能靠执行取胜，比如制造业、家电汽车。&lt;/p&gt;

&lt;p&gt;战略制定的重要性远远远远大于执行。我们必须有这样的认知：思考整个方向和商业模式的重要度，远远大于执行的重要度。我自己早年创业时，对这个点的思考就太少。&lt;/p&gt;

&lt;p&gt;比如开个大会，做PPT，为新公司寻址，做起来又很容易，每天看似都很忙，时间瞬间就没了。为了公司，认真努力，不睡觉，出生入死，满心自豪感，连自己都感动了，但在战略思考上，乏善可陈。&lt;/p&gt;

&lt;p&gt;战略这东西确实太虚，不容易想清楚，脑海里沙盘推演自然就少。太少之后，整个公司容易被执行，带进一个自己都不清楚的方向。你原本以为自己在做什么，结果发现实际做的另一回事。&lt;/p&gt;

&lt;p&gt;前不久，我读完《三体》，这种感触更甚。《三体》几乎帮我建立了一个更高维度的世界观和科学观。因为你突然意识到，这个世界不是线性发展，而是一个接一个，一格一格，不停向上跳高。火发明的时候，世界跳了一格；原子能发明的时候，世界又跳了一格。&lt;/p&gt;

&lt;p&gt;在高纬度的三体人眼里，钻木取火和航天发动机没有本质区别，都在同一个维度。就像他们对人类说的那句：你们都是虫子。&lt;/p&gt;

&lt;p&gt;所以，这一年我深切的体会：要花时间，把一个事情想清楚，站在一个更高的纬度看问题。我总结为——升维思考，降维打击。比别人更高的维度想清楚方向，执行的时候比别人更凶狠。&lt;/p&gt;

&lt;p&gt;我一直认为，小米开打的时候，就是一场必赢的战争。市场容量，打法，切入点，雷总都想得很清楚。小米一上来就是做多大的问题。小米手机出来时，手机厂商都笑了。他们认为雷总没做过手机，没有经验。但实际上，雷总早已经在更高的维度想清楚了。一出手，几乎是居高临下的打击。&lt;/p&gt;

&lt;p&gt;回到起初的问题：到底什么是战略？&lt;/p&gt;

&lt;p&gt;我重新修改了那个公式，我认为，战略=（方向&lt;em&gt;10）&lt;/em&gt;执行力。一家公司的方向或选择，还要再乘以10倍，最后用强悍的执行力，在足够多的时间，变成想清楚的战略。&lt;/p&gt;

&lt;p&gt;需要特别强调的是：执行力也是战略的一部分，好的战略，不依赖于好的执行力。&lt;/p&gt;

&lt;p&gt;创业时常有一种错觉，靠执行力就能取胜。几个哥们很努力，大家很有经验，最牛叉的人，肯定没问题。这个话其实是错的。你绝对不是最好的人或最有经验的人。如果相同领域大公司跟你竞争，它有更强的资源招到比你更好的人。&lt;/p&gt;

&lt;p&gt;我们当时创业做安全，算是整个行业足够有经验了。那个时候，360蒸蒸日上，上市后迅速成长，行业里最好的人都能拿到。你发一个版本，它一两天内就出一个新版本。还找最好设计人员，用最多的宣传资源，再向所有的用户广播说，它是最先做的。它把全国人都叫醒了，而你只是在一个小山头，叫了一下而已。遇到这种黑白颠倒的事情，你基本无计可施。执行力好，也变得不堪一击。&lt;/p&gt;

&lt;p&gt;所以，一定要想清楚执行力到底是什么？&lt;/p&gt;

&lt;p&gt;有时候，我们大言不惭，说巨头不重视，想不到，不这么干。如果你把公司的创业，建立在人家想不到的基础上，那太难了。万一人家想到呢。你怎么证明他可能想不到。&lt;/p&gt;

&lt;p&gt;当时我们做毒霸，几乎集全公司的力量，但就是追不上去。执行力比不过，只能不停创新。你做一个，他抄一个，还比你更好。后来我想明白了：在PC，尤其对手视野范围之内的任何安全创新，你都是打不过的，反而变相成为别人的产品经理。&lt;/p&gt;

&lt;p&gt;一个公司在它核心领域的战略动员能力，远远超过你的想象。我们总是觉得自己在大公司面前崛起了。你要想大公司真的笨吗？还是他们没有用真正的执行力打你，或者那只是一个边缘的旁支业务？&lt;/p&gt;

&lt;p&gt;这些都要想清楚。战略思考，不能只是虚无的想。要结合执行力、团队能力、你的位置、确切打法等等。想清楚之后，开启一场战役，才能胜券在握。&lt;/p&gt;

&lt;p&gt;我一直认为，带领普通部队也能打胜仗的才是名将。优秀的战略是在开战之前，就有七分胜算。&lt;/p&gt;

&lt;p&gt;创业者通常喜欢讲一个大的未来。这个大未来往往脱离执行。不要以为小米就是找到一堆牛逼合伙人就成功了。小米做事前就想清楚了战略。《参与感》里讲过，小米的一张海报都要反复修改无数次。因为这张海报要发布给几千万用户，那这张海报就是战略的一部分。如果海报做得很差，所有东西都卡住了。&lt;/p&gt;

&lt;p&gt;那么，你有没有能力把这张海报做得更具穿透性？如果没有能力，这件事就不能做，就不是好战略。好战略，就是它能做下去。&lt;/p&gt;

&lt;p&gt;把执行力当作战略的一部分，把关键性的执行点，作为战略范畴考虑进去，也是CEO管理中的一个核心点。&lt;/p&gt;

&lt;p&gt;那么，如何才能制定一个好战略？&lt;/p&gt;

&lt;p&gt;我总结了一个战略三部曲：预测-破局点-All in。预测就是想方向，寻找破局点就是找关键，All in就是资源全投入。每一个环节都需要细细展开。&lt;/p&gt;

&lt;p&gt;先说战略第一步：预测&lt;/p&gt;

&lt;p&gt;预测就是找到大风口，做快乐的猪。如果你能够判断清楚这件事情的时候，你就成功了99%。坚信这些大道理是很难的。&lt;/p&gt;

&lt;p&gt;雷总做小米很成功。其中很重要一点，他一直总结，40岁之前相信人定胜天，总觉得自己最强；40岁之后领悟到，找到大风口最重要。&lt;/p&gt;

&lt;p&gt;预测变得更重要。它意味着对我们过去接受的整套教育和方法论的一种颠覆。它反过来说明了，努力未必成功。过去，我们只是苦哈哈干活，相信书山有路勤为径，一去美国才发现，美国人工作那么悠闲，世界很多发明却都是他们干的。&lt;/p&gt;

&lt;p&gt;其实，本质上是因为我们的思维体系没有预测这一点。&lt;/p&gt;

&lt;p&gt;我第一次见雷总，他就问我，怎样为三到五年做一个推断？当时我不清楚。后来，我就想怎么通过三到五年在行业上建立一个格局，然后再用这个思路反推今天该干什么。这方面我想的还是不够。&lt;/p&gt;

&lt;p&gt;阿里巴巴上市的时候，我感慨很多。我觉得，阿里巴巴上市最成功的不是马云，而是孙正义，一夜之间成为日本首富。这一切，无非就是在那个时间，他做了一个预测——电子商务有前景，马云很牛，中国很厉害。三个点合在一起形成了一个正确的决定。&lt;/p&gt;

&lt;p&gt;雅虎投资阿里巴巴也是一样。当年投了十亿美金，所有人都认为疯了一样的决定。说杨致远太傻，马云太能忽悠，几乎所有人都这么觉得。但杨致远就是做了这么一个决定。&lt;/p&gt;

&lt;p&gt;当然，预测也不一定都能成功。我们还是要多花时间想想，自己的预测到底有多重要。最核心的就是不断改变。&lt;/p&gt;

&lt;p&gt;具体到怎么做预测，我认为有三点：&lt;/p&gt;

&lt;p&gt;第一点是穿过未来看现在。找到一条正确的路，怎么走都是对的；而走在一条错误的路上，全力以赴都不行。&lt;/p&gt;

&lt;p&gt;很多时候，我们需要站到一个更大的高度回看现在，用预测在大方向上的清晰，去极大地缓解你在执行方面的依赖。&lt;/p&gt;

&lt;p&gt;第二点是不断仰视，空杯学习，相信现象即规律。不要看到别人强了，就觉得这个没什么了不起，那个也没什么了不起。要思考，滴滴为什么成长那么快，O2O意味着什么，为什么这么热，自己可以找到怎样的机会？&lt;/p&gt;

&lt;p&gt;我们当时做猎豹，在极困难的情况下找到了“国际化”这个点。就是因为我们发现，在Google工具排行榜上发现没有美国公司做的工具应用，而且工具应用的下载量是社交类的一半。两款排名靠前的工具应用，竟然都是来自中国的程序员。&lt;/p&gt;

&lt;p&gt;现象即规律。我就在想，我有2000人，他们只有一个人，如果全力以赴，还不能做到第一？接下来，我们就开始在这个机会点全力投入。&lt;/p&gt;

&lt;p&gt;第三点是侦察兵模式，不断试错，用资源换机会。早期创业者唯一核心的资源就是时间资源，就是不断试错。口袋购物的王珂，做微店，一个礼拜就上线，不停测试，小步快跑。&lt;/p&gt;

&lt;p&gt;小步快跑的核心是什么？就是不停打怪，不断获取经验值。创业就是不断打怪的过程。如果憋一年才发布，人家早起来了。当公司到一定规模，再派一些侦察兵，做一些方向性的小组化尝试。Clean Master这款产品就是一个四人小团队发现的。&lt;/p&gt;

&lt;p&gt;预测也不是天马行空。它还是有一些规律可循。一个预测出来后，用怎样的视角去判断它，修正它，完善它。我总结了三条预测的准则：&lt;/p&gt;

&lt;p&gt;第一个准则：创造新市场，不要在过去的市场纠缠。如果现在让我重新走一次，两年前就不做PC了，直接杀入移动。我相信两年后的猎豹，移动会更强。&lt;/p&gt;

&lt;p&gt;这样的例子很多。我去台湾拜访过趋势，他们有好多产品研发人员都往企业市场送。消费市场不知道怎么做，企业市场又是他们最好的收入来源，于是他们就不停地派精锐加强。&lt;/p&gt;

&lt;p&gt;从收入角度来说，他们每年财报增长10%-20%，看起来各方面都很好。但从一个大的方向来说，趋势在过去市场投入太多，最终变成了一家传统的公司。&lt;/p&gt;

&lt;p&gt;当你不断进入过去的市场，跟过去的市场巨头做斗争时，就会在原来的市场，投入更多时间和精力。这场战役，短则两三年，长则四五年。进也不是，退也不是，陷入泥潭，极其痛苦。&lt;/p&gt;

&lt;p&gt;所以，那年360宣布做PC搜索的时候，我们就很开心。因为360进入搜索，两三年内，这个市场，肯定拿不下。实际上，受PC搜索的掣肘，360也错失了移动的先机。结果UC做了神马搜索。搜狗借助微信打开移动搜索。一步慢，就步步慢。&lt;/p&gt;

&lt;p&gt;第二个准则：边缘切入，寻找垂直市场第一，甚至垄断。不要去找竞争对手最核心的点打，总坚信自己是战神，最后都会死得很惨。一定要追求一个垂直市场的第一。&lt;/p&gt;

&lt;p&gt;“第一”有多么重要呢？首先是心理上的重要。我们做海外，经常受到质疑，投资人见面都问，中国公司行得通吗？你怎么证明可以做好？事实上，我没法证明。但我清楚，只要海外做到“第一”，不管怎么样，一提这事，就很鲜明。&lt;/p&gt;

&lt;p&gt;因为只有“第一”才会被人记住。现在已经不是韦尔奇时代的“数一数二法则”。这个时代就是“数一法则”。变成“第一”后，就可以从“第一”的位置真正往下切。&lt;/p&gt;

&lt;p&gt;举个例子。大家都觉得Clean Master很小，去年1月份，我们用Clean Master推了一款安全APP，仅仅一年下载过亿。过去的18个月期间，月度活跃已涨到1亿，非常快。这说明了什么？就是因为你有了“第一”，才可以轻松创造“第二”。&lt;/p&gt;

&lt;p&gt;第三个准则：不仰攻，不依赖执行力。我做Clean Master国际化的时候，曾经反推过，如果360实力比我强很多倍，这场仗能赢吗？答案是肯定的。因为我几乎把所有高管、人力、资源全部倾斜。公司从上到下，在清理这个点，来回横切。这种态势，对手没法比。&lt;/p&gt;

&lt;p&gt;我也总结过，360安全卫士为什么能成功？其实作为产品经理，当时能做起来，有很大的偶然因素。虽然你的能力、执行力都很强，做这款产品也很有感觉，但最重要是的国内安全形势的变化，以及江民、瑞星等杀毒软件不思进取，没在这个领域投入精力。以上因素最后形成一个扭力，促成了360安全卫士的成功。&lt;/p&gt;

&lt;p&gt;后来，当我碰到美图秀秀之后，我就崩溃了。光有执行，也不够啊。一会儿眼睛大一下，皮肤白一下，我也不会啊。所以，等到做clean master的时候，做之前我就想得比较清楚了。这个事情在起步之前，我就想好要把猎豹做成国际版的360。&lt;/p&gt;

&lt;p&gt;但是，光有预测是不够的。找到这样的方向之后，怎么去切？切，不是排山倒海进入。这样是进不去的。或者没有那样的资源。要先找破局点。在大的方向上找到一个关键的点。&lt;/p&gt;

&lt;p&gt;战略第二步：破局点&lt;/p&gt;

&lt;p&gt;预测之后，就是找到破局点，找到那个一举撬动全局的关键点。&lt;/p&gt;

&lt;p&gt;今天，整个行业因为资本介入，出现了很多流行词，比如布局、闭环等等。很多创业者问我，是不是先布局？光做硬件不够，要做软件，还要做社区等等。当你这样思考的时候，首先就陷入了大公司模式。&lt;/p&gt;

&lt;p&gt;你要思考，与大公司区别何在，破局点在哪。如果没有突进的点，跟其他所有平庸的公司没区别。大家都很平庸，为什么你能赢？因为你想赢吗？因为我人挺好吗？这些都没有意义。&lt;/p&gt;

&lt;p&gt;所以，要找到那个尖锥一样的破局点。&lt;/p&gt;

&lt;p&gt;微信红包就是一个经典案例。腾讯3000多万的支付用户，持续投入多少年，与阿里巴巴一样的机会，多大的投入都打不动。后来出来一个微信红包，现在跟阿里的日均用户差不多了。春节当晚的峰值，几乎超过了阿里双11。当时马云写内部邮件说珍珠港偷袭，我认为不是珍珠港偷袭，而是八旗兵入关。即使坐拥百万雄兵，也抵不过一个聚焦的点，来回反复的冲击。&lt;/p&gt;

&lt;p&gt;我说过，每一个中国人的心里都有一个万里长城。万里长城听起来雄伟壮观，很有民族自豪感，但从来没有挡住北方异族的毁灭性打击。因为它太长了，摆太多了，挡不住尖锥来回的刺穿。&lt;/p&gt;

&lt;p&gt;这就是破局点的作用。&lt;/p&gt;

&lt;p&gt;这个破局点有多重要呢？从创业者的角度来说，这个点就是生死存亡之点。如果找不到这样的点，你就不可能切进去。&lt;/p&gt;

&lt;p&gt;此外，破局点一定要配合大方向，配合整个大预测。因为这是一个单品带体系的时代。&lt;/p&gt;

&lt;p&gt;苹果手机就是这样的破局点。通过手机这个点切下去，整个行业都被改造了。破局点的寻找，本质上是产品形态的需求。在产品形态和用户体验上，找到用户为王的那个点，可以把整个行业都掀掉。&lt;/p&gt;

&lt;p&gt;工业时代，没有生产线，生产不出产品。那叫生产稀缺。今天是生产过剩，消费者主导的时代。时代已经完全变了。&lt;/p&gt;

&lt;p&gt;当英语老师都可以做手机的时候，这代表我们已经站在全世界的生产能力都能被组织的点上。即便没有行业背景，你只要找到一个点，做好一件小事，就可能改变世界。&lt;/p&gt;

&lt;p&gt;再往下说，这样的破局点有什么特征？我认为是极简、差异化和自增长。&lt;/p&gt;

&lt;p&gt;首先要极其简单。简单到一句话。如果一句话都说不清楚，这个破局点在战略上就败了。不久前跟马化腾聊到微信红包，他就给了八个字：移动、社交、金融、游戏。&lt;/p&gt;

&lt;p&gt;这样简单的词，能被大众接受，非常重要。移动互联网时代，选择太多了，用户打开的窗口也太多。用户唯一需要的就是简单。&lt;/p&gt;

&lt;p&gt;比如Snapchat。第一次用的时候，我就惊呆了。打开后直接就是一个照相机，简单到直接拍照。我们做产品，都要去做个“+”，再加个“拍照”等等。就是这5秒的时间，用户的拍照意愿可能就没了。也是这样简单的点，使得Snapchat形成了强差异化，与Facebook完全区分开了。&lt;/p&gt;

&lt;p&gt;这个点有自增长，也很重要。我们做Clean Master的时候，那时团队只有几个人，从几千个下载涨到每天下载二三十万；而另一款产品电池医生已经有了上亿用户。后来，在庐山会议，我做了一个艰难的抉择：把所有资源全部投到Clean Master。很重要的原因就在于，Clean Master有自增长，而且从产品角度看，它还会持续增长。虽然两者存量差异很大，但我要看新增量，要看未来。&lt;/p&gt;

&lt;p&gt;当然，有人会说，产品不一样。比如020，为了满足司机需求，他们自己佯装乘客打车，让司机觉得有用户增长。尽管如此，它也必须有自增长，有自然传播，如果没有这个点，说明没有突破。&lt;/p&gt;

&lt;p&gt;最后，找到这个破局点以后，不要有任何犹豫，一定要All in。&lt;/p&gt;

&lt;p&gt;战略第三步：All in&lt;/p&gt;

&lt;p&gt;任何时候，资源永远稀缺，尤其是精力。一旦确认这个机会点，不要有任何犹豫。把所有资源投入到破局点上，尤其自己的资源。想尽所有办法，努力到无能为力。&lt;/p&gt;

&lt;p&gt;在前期预测的过程中，不管是小步快跑的侦察兵，还是小组化的侦察兵，或者快速迭代的侦察兵，最重要一点就是，要迅速把侦察兵模式切换为十面埋伏，一击即中。&lt;/p&gt;

&lt;p&gt;韩信打仗，没有那么多名将。他跟项羽相比，单军作战能力差很多，但最后他用所有的资源，布置了一个十面埋伏。即便三千名将，也逃脱不出。&lt;/p&gt;

&lt;p&gt;所有资源的环绕，既为打退竞争对手，也为更快获取经验值。&lt;/p&gt;

&lt;p&gt;当时我们做Clean Master，投入了上百个工程师。有投资者问：我们的壁垒在哪里？我就说，这个星球很难找到一个200人的工程师团队，只做一个清理的APP。所有高管团队全部聚焦在Clean Master这条线。在APP的每个点上的投入，都比竞争对手强5到10倍。&lt;/p&gt;

&lt;p&gt;除此之外，Clean Master在Google Play 上的用户评价，每一个我们都有专人回复。无论用户用阿拉伯、日语或英语，都有相应语言回复。回复以后就会变成意见，立刻改善产品。&lt;/p&gt;

&lt;p&gt;后来我们加速商业化。资源的投入几乎又上了一个新台阶。我们完全没有经验，每天都开例会，对各种产品细节，寻找破局点。三个月内，收购了一家移动广告公司。买下他们所有的广告平台，全力以赴投资源。&lt;/p&gt;

&lt;p&gt;这些都是在创业过程中完成的。一分钱当两分钱花。虽然创业早期，节约也很重要，但找到方向后，验证了自增长，投入就要坚决。&lt;/p&gt;

&lt;p&gt;有时候晚做，就丧失机会；早做，就把公司搞死了。微妙和伟大的平衡，就是创业的难度。有时候实在不行了，闭着眼睛做，真的赢了，这就是运气。或者刚好赶上某个机会点，规律使然。&lt;/p&gt;

&lt;p&gt;但千万不要空扫。做侦察的时候，大军按兵不动，做更多的推演。一旦想清楚，就要全力投入。我总结了一句话：战略方向要浪费，战术执行要节约。韩信点兵，多多益善。&lt;/p&gt;

&lt;p&gt;说了这么多，预测、破局点、All in的核心是什么呢？就是制造火车头。&lt;/p&gt;

&lt;p&gt;互联网时代的公司，要把它想象成一辆高速列车。你的本质是做一个最快的火车头。当火车跑得足够快时，就可以“一招居高临下”，不断地挂更多的车厢。当业务不断向上长时，又会出现各种纠结痛苦，但最好的事情就是把火车头做得足够多，不断淘汰坏的车厢。&lt;/p&gt;

&lt;p&gt;战略就是制造最好的火车头，淘汰坏车厢。&lt;/p&gt;

&lt;p&gt;CEO的使命就是不断的战略创新。尤其公司迅速壮大时，CEO需要迈好几个坎，从一个专业机能的坎，到带领小团队的坎，再到点面结合的坎。既要单点突出，又要擅用资源整合。&lt;/p&gt;

&lt;p&gt;最关键一点，不断突破自己的心理界限。如果总是活在自己的世界里，就会把事情想小。&lt;/p&gt;

&lt;p&gt;作为CEO，既要有大的格局，又要在很小的单点足够极致。既能Zoom in（聚焦），又能Zoom out（抽象）。两个极端，来回切换。矛盾统一，完美平衡。或许，这就是管理的艺术。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>HTTP KeepAlive模式如何判断数据完成</title>
      <link>http://lilifeng.net/blogs/2015/06/02/http-keepalive-how-end/</link>
      <pubDate>Tue, 02 Jun 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>http</category>
      
      
      <category>Internet</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/06/02/http-keepalive-how-end/</guid>
      <description>&lt;blockquote&gt;
  &lt;p&gt;当HTTP采用keepalive模式，当客户端向服务器发生请求之后，客户端如何判断服务器的数据已经发生完成？`&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;#1、什么是Keep-Alive模式？&lt;/p&gt;

&lt;p&gt;我们知道HTTP协议采用“请求-应答”模式，当使用普通模式，即非KeepAlive模式时，每个请求/应答客户和服务器都要新建一个连接，完成之后立即断开连接（HTTP协议为无连接的协议）；当使用Keep-Alive模式（又称持久连接、连接重用）时，Keep-Alive功能使客户端到服务器端的连接持续有效，当出现对服务器的后继请求时，Keep-Alive功能避免了建立或者重新建立连接。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/150602_1.png&quot; alt=&quot;HTTP KeepAlive&quot; /&gt;&lt;/p&gt;

&lt;p&gt;http 1.0中默认是关闭的，需要在http头加入”Connection: Keep-Alive”，才能启用Keep-Alive；http 1.1中默认启用Keep-Alive，如果加入”Connection: close “，才关闭。目前大部分浏览器都是用http1.1协议，也就是说默认都会发起Keep-Alive的连接请求了，所以是否能完成一个完整的Keep-Alive连接就看服务器设置情况。&lt;/p&gt;

&lt;p&gt;#2、启用Keep-Alive的优点&lt;/p&gt;

&lt;p&gt;从上面的分析来看，启用Keep-Alive模式肯定更高效，性能更高。因为避免了建立/释放连接的开销。下面是RFC 2616上的总结：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;By opening and closing fewer TCP connections, CPU time is saved in routers and hosts (clients, servers, proxies, gateways, tunnels, or caches), and memory used for TCP protocol control blocks can be saved in hosts.&lt;/p&gt;

  &lt;p&gt;HTTP requests and responses can be pipelined on a connection. Pipelining allows a client to make multiple requests without waiting for each response, allowing a single TCP connection to be used much more efficiently, with much lower elapsed time.&lt;/p&gt;

  &lt;p&gt;Network congestion is reduced by reducing the number of packets caused by TCP opens, and by allowing TCP sufficient time to determine the congestion state of the network.&lt;/p&gt;

  &lt;p&gt;Latency on subsequent requests is reduced since there is no time spent in TCP’s connection opening handshake.&lt;/p&gt;

  &lt;p&gt;HTTP can evolve more gracefully, since errors can be reported without the penalty of closing the TCP connection. Clients using future versions of HTTP might optimistically try a new feature, but if communicating with an older server, retry with old   semantics after an error is reported.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;RFC 2616（P47）还指出：单用户客户端与任何服务器或代理之间的连接数不应该超过2个。一个代理与其它服务器或代码之间应该使用超过2 * N的活跃并发连接。这是为了提高HTTP响应时间，避免拥塞（冗余的连接并不能代码执行性能的提升）。&lt;/p&gt;

&lt;p&gt;#3、回到我们的问题（即如何判断消息内容/长度的大小？）&lt;/p&gt;

&lt;p&gt;Keep-Alive模式，客户端如何判断请求所得到的响应数据已经接收完成（或者说如何知道服务器已经发生完了数据）？我们已经知道了，Keep-Alive模式发送玩数据HTTP服务器不会自动断开连接，所有不能再使用返回EOF（-1）来判断（当然你一定要这样使用也没有办法，可以想象那效率是何等的低）！下面我介绍两种来判断方法。&lt;/p&gt;

&lt;p&gt;##3.1、使用消息首部字段Conent-Length&lt;/p&gt;

&lt;p&gt;故名思意，Conent-Length表示实体内容长度，客户端（服务器）可以根据这个值来判断数据是否接收完成。但是如果消息中没有Conent-Length，那该如何来判断呢？又在什么情况下会没有Conent-Length呢？请继续往下看……&lt;/p&gt;

&lt;p&gt;##3.2、使用消息首部字段Transfer-Encoding&lt;/p&gt;

&lt;p&gt;当客户端向服务器请求一个静态页面或者一张图片时，服务器可以很清楚的知道内容大小，然后通过Content-length消息首部字段告诉客户端需要接收多少数据。但是如果是动态页面等时，服务器是不可能预先知道内容大小，这时就可以使用Transfer-Encoding：chunk模式来传输数据了。即如果要一边产生数据，一边发给客户端，服务器就需要使用”Transfer-Encoding: chunked”这样的方式来代替Content-Length。&lt;/p&gt;

&lt;p&gt;chunk编码将数据分成一块一块的发生。Chunked编码将使用若干个Chunk串连而成，由一个标明长度为0的chunk标示结束。每个Chunk分为头部和正文两部分，头部内容指定正文的字符总数（十六进制的数字）和数量单位（一般不写），正文部分就是指定长度的实际内容，两部分之间用回车换行(CRLF)隔开。在最后一个长度为0的Chunk中的内容是称为footer的内容，是一些附加的Header信息（通常可以直接忽略）。&lt;/p&gt;

&lt;p&gt;Chunk编码的格式如下：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-http&quot; data-lang=&quot;http&quot;&gt;&lt;span class=&quot;err&quot;&gt;Chunked-Body = *chunk 
                                    &quot;0&quot; CRLF 
                                    footer 
                                    CRLF  
chunk = chunk-size [ chunk-ext ] CRLF 
                  chunk-data CRLF

hex-no-zero = &amp;lt;HEX excluding &quot;0&quot;&amp;gt;

chunk-size = hex-no-zero *HEX 
chunk-ext = *( &quot;;&quot; chunk-ext-name [ &quot;=&quot; chunk-ext-value ] ) 
chunk-ext-name = token 
chunk-ext-val = token | quoted-string 
chunk-data = chunk-size(OCTET)

footer = *entity-header&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;即Chunk编码由四部分组成：1、0至多个chunk块，2、”0” CRLF，3、footer，4、CRLF.而每个chunk块由：chunk-size、chunk-ext（可选）、CRLF、chunk-data、CRLF组成。&lt;/p&gt;

&lt;p&gt;#4、消息长度的总结&lt;/p&gt;

&lt;p&gt;其实，上面2中方法都可以归纳为是如何判断http消息的大小、消息的数量。RFC 2616对消息的长度总结如下：一个消息的transfer-length（传输长度）是指消息中的message-body（消息体）的长度。当应用了transfer-coding（传输编码），每个消息中的message-body（消息体）的长度（transfer-length）由以下几种情况决定（优先级由高到低）：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;任何不含有消息体的消息（如1XXX、204、304等响应消息和任何头(HEAD，首部)请求的响应消息），总是由一个空行（CLRF）结束。&lt;/li&gt;
  &lt;li&gt;如果出现了Transfer-Encoding头字段 并且值为非“identity”，那么transfer-length由“chunked” 传输编码定义，除非消息由于关闭连接而终止。&lt;/li&gt;
  &lt;li&gt;如果出现了Content-Length头字段，它的值表示entity-length（实体长度）和transfer-length（传输长度）。如果这两个长度的大小不一样（i.e.设置了Transfer-Encoding头字段），那么将不能发送Content-Length头字段。并且如果同时收到了Transfer-Encoding字段和Content-Length头字段，那么必须忽略Content-Length字段。&lt;/li&gt;
  &lt;li&gt;如果消息使用媒体类型“multipart/byteranges”，并且transfer-length 没有另外指定，那么这种自定界（self-delimiting）媒体类型定义transfer-length 。除非发送者知道接收者能够解析该类型，否则不能使用该类型。&lt;/li&gt;
  &lt;li&gt;由服务器关闭连接确定消息长度。（注意：关闭连接不能用于确定请求消息的结束，因为服务器不能再发响应消息给客户端了。）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;为了兼容HTTP/1.0应用程序，HTTP/1.1的请求消息体中必须包含一个合法的Content-Length头字段，除非知道服务器兼容HTTP/1.1。一个请求包含消息体，并且Content-Length字段没有给定，如果不能判断消息的长度，服务器应该用用400 (bad request) 来响应；或者服务器坚持希望收到一个合法的Content-Length字段，用 411 (length required)来响应。&lt;/p&gt;

&lt;p&gt;所有HTTP/1.1的接收者应用程序必须接受“chunked” transfer-coding (传输编码)，因此当不能事先知道消息的长度，允许使用这种机制来传输消息。消息不应该够同时包含 Content-Length头字段和non-identity transfer-coding。如果一个消息同时包含non-identity transfer-coding和Content-Length ，必须忽略Content-Length 。&lt;/p&gt;

</description>
    </item>
    
    <item>
      <title>网络通信IO多路复用之总结【4】</title>
      <link>http://lilifeng.net/blogs/2015/05/21/net-select-poll-epoll/</link>
      <pubDate>Thu, 21 May 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>C++</category>
      
      
      <category>Internet</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/05/21/net-select-poll-epoll/</guid>
      <description>&lt;blockquote&gt;
  &lt;p&gt;系列列表：&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;/blogs/2012/05/18/net-select/&quot;&gt;网络通信IO多路复用之Select【1】&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;/blogs/2012/05/19/net-poll/&quot;&gt;网络通信IO多路复用之Poll【2】&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;/blogs/2012/05/20/net-epoll/&quot;&gt;网络通信IO多路复用之ePoll【3】&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;/blogs/2012/05/21/net-select-poll-epoll/&quot;&gt;网络通信IO多路复用之总结【4】&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;select，poll，epoll都是IO多路复用的机制。I/O多路复用就通过一种机制，可以监视多个描述符，一旦某个描述符就绪（一般是读就绪或者写就绪），能够通知程序进行相应的读写操作。但select，poll，epoll本质上都是同步I/O，因为他们都需要在读写事件就绪后自己负责进行读写，也就是说这个读写过程是阻塞的，而异步I/O则无需自己负责进行读写，异步I/O的实现会负责把数据从内核拷贝到用户空间。&lt;/p&gt;

&lt;p&gt;对这三种IO多路复用进行对比，参考网上和书上面的资料，整理如下：&lt;/p&gt;

&lt;p&gt;#1、select实现&lt;/p&gt;

&lt;p&gt;select的调用过程如下所示：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/150521_1.png&quot; alt=&quot;select&quot; /&gt;&lt;/p&gt;

&lt;p&gt;（1）使用copy_from_user从用户空间拷贝fd_set到内核空间&lt;/p&gt;

&lt;p&gt;（2）注册回调函数__pollwait&lt;/p&gt;

&lt;p&gt;（3）遍历所有fd，调用其对应的poll方法（对于socket，这个poll方法是sock_poll，sock_poll根据情况会调用到tcp_poll,udp_poll或者datagram_poll）&lt;/p&gt;

&lt;p&gt;（4）以tcp_poll为例，其核心实现就是__pollwait，也就是上面注册的回调函数。&lt;/p&gt;

&lt;p&gt;（5）__pollwait的主要工作就是把current（当前进程）挂到设备的等待队列中，不同的设备有不同的等待队列，对于tcp_poll来说，其等待队列是sk-&amp;gt;sk_sleep（注意把进程挂到等待队列中并不代表进程已经睡眠了）。在设备收到一条消息（网络设备）或填写完文件数据（磁盘设备）后，会唤醒设备等待队列上睡眠的进程，这时current便被唤醒了。&lt;/p&gt;

&lt;p&gt;（6）poll方法返回时会返回一个描述读写操作是否就绪的mask掩码，根据这个mask掩码给fd_set赋值。&lt;/p&gt;

&lt;p&gt;（7）如果遍历完所有的fd，还没有返回一个可读写的mask掩码，则会调用schedule_timeout是调用select的进程（也就是current）进入睡眠。当设备驱动发生自身资源可读写后，会唤醒其等待队列上睡眠的进程。如果超过一定的超时时间（schedule_timeout指定），还是没人唤醒，则调用select的进程会重新被唤醒获得CPU，进而重新遍历fd，判断有没有就绪的fd。&lt;/p&gt;

&lt;p&gt;（8）把fd_set从内核空间拷贝到用户空间。&lt;/p&gt;

&lt;p&gt;##总结：&lt;/p&gt;

&lt;p&gt;###select的几大缺点：&lt;/p&gt;

&lt;p&gt;（1）每次调用select，都需要把fd集合从用户态拷贝到内核态，这个开销在fd很多时会很大&lt;/p&gt;

&lt;p&gt;（2）同时每次调用select都需要在内核遍历传递进来的所有fd，这个开销在fd很多时也很大&lt;/p&gt;

&lt;p&gt;（3）select支持的文件描述符数量太小了，默认是1024&lt;/p&gt;

&lt;p&gt;#2 poll实现&lt;/p&gt;

&lt;p&gt;　　poll的实现和select非常相似，只是描述fd集合的方式不同，poll使用pollfd结构而不是select的fd_set结构，其他的都差不多。&lt;/p&gt;

&lt;p&gt;关于select和poll的实现分析，可以参考下面几篇博文：&lt;/p&gt;

&lt;p&gt;http://blog.csdn.net/lizhiguo0532/article/details/6568964#comments&lt;/p&gt;

&lt;p&gt;http://blog.csdn.net/lizhiguo0532/article/details/6568968&lt;/p&gt;

&lt;p&gt;http://blog.csdn.net/lizhiguo0532/article/details/6568969&lt;/p&gt;

&lt;p&gt;http://www.ibm.com/developerworks/cn/linux/l-cn-edntwk/index.html?ca=drs-&lt;/p&gt;

&lt;p&gt;http://linux.chinaunix.net/techdoc/net/2009/05/03/1109887.shtml&lt;/p&gt;

&lt;p&gt;#3、epoll&lt;/p&gt;

&lt;p&gt;　　epoll既然是对select和poll的改进，就应该能避免上述的三个缺点。那epoll都是怎么解决的呢？在此之前，我们先看一下epoll和select和poll的调用接口上的不同，select和poll都只提供了一个函数——select或者poll函数。而epoll提供了三个函数，epoll_create,epoll_ctl和epoll_wait，epoll_create是创建一个epoll句柄；epoll_ctl是注册要监听的事件类型；epoll_wait则是等待事件的产生。&lt;/p&gt;

&lt;p&gt;　　对于第一个缺点，epoll的解决方案在epoll_ctl函数中。每次注册新的事件到epoll句柄中时（在epoll_ctl中指定EPOLL_CTL_ADD），会把所有的fd拷贝进内核，而不是在epoll_wait的时候重复拷贝。epoll保证了每个fd在整个过程中只会拷贝一次。&lt;/p&gt;

&lt;p&gt;　　对于第二个缺点，epoll的解决方案不像select或poll一样每次都把current轮流加入fd对应的设备等待队列中，而只在epoll_ctl时把current挂一遍（这一遍必不可少）并为每个fd指定一个回调函数，当设备就绪，唤醒等待队列上的等待者时，就会调用这个回调函数，而这个回调函数会把就绪的fd加入一个就绪链表）。epoll_wait的工作实际上就是在这个就绪链表中查看有没有就绪的fd（利用schedule_timeout()实现睡一会，判断一会的效果，和select实现中的第7步是类似的）。&lt;/p&gt;

&lt;p&gt;　　对于第三个缺点，epoll没有这个限制，它所支持的FD上限是最大可以打开文件的数目，这个数字一般远大于2048,举个例子,在1GB内存的机器上大约是10万左右，具体数目可以cat /proc/sys/fs/file-max察看,一般来说这个数目和系统内存关系很大。&lt;/p&gt;

&lt;p&gt;#总结：&lt;/p&gt;

&lt;p&gt;（1）select，poll实现需要自己不断轮询所有fd集合，直到设备就绪，期间可能要睡眠和唤醒多次交替。而epoll其实也需要调用epoll_wait不断轮询就绪链表，期间也可能多次睡眠和唤醒交替，但是它是设备就绪时，调用回调函数，把就绪fd放入就绪链表中，并唤醒在epoll_wait中进入睡眠的进程。虽然都要睡眠和交替，但是select和poll在“醒着”的时候要遍历整个fd集合，而epoll在“醒着”的时候只要判断一下就绪链表是否为空就行了，这节省了大量的CPU时间。这就是回调机制带来的性能提升。&lt;/p&gt;

&lt;p&gt;（2）select，poll每次调用都要把fd集合从用户态往内核态拷贝一次，并且要把current往设备等待队列中挂一次，而epoll只要一次拷贝，而且把current往等待队列上挂也只挂一次（在epoll_wait的开始，注意这里的等待队列并不是设备等待队列，只是一个epoll内部定义的等待队列）。这也能节省不少的开销。&lt;/p&gt;

&lt;p&gt;#参考资料：&lt;/p&gt;

&lt;p&gt;http://www.cnblogs.com/apprentice89/archive/2013/05/09/3070051.html&lt;/p&gt;

&lt;p&gt;http://www.linuxidc.com/Linux/2012-05/59873p3.htm&lt;/p&gt;

&lt;p&gt;http://xingyunbaijunwei.blog.163.com/blog/static/76538067201241685556302/&lt;/p&gt;

&lt;p&gt;http://blog.csdn.net/kkxgx/article/details/7717125&lt;/p&gt;

&lt;p&gt;https://banu.com/blog/2/how-to-use-epoll-a-complete-example-in-c/epoll-example.c&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>网络通信IO多路复用之ePoll【3】</title>
      <link>http://lilifeng.net/blogs/2015/05/20/net-epoll/</link>
      <pubDate>Wed, 20 May 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>C++</category>
      
      
      <category>Internet</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/05/20/net-epoll/</guid>
      <description>&lt;blockquote&gt;
  &lt;p&gt;系列列表：&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;/blogs/2012/05/18/net-select/&quot;&gt;网络通信IO多路复用之Select【1】&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;/blogs/2012/05/19/net-poll/&quot;&gt;网络通信IO多路复用之Poll【2】&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;/blogs/2012/05/20/net-epoll/&quot;&gt;网络通信IO多路复用之ePoll【3】&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;/blogs/2012/05/21/net-select-poll-epoll/&quot;&gt;网络通信IO多路复用之总结【4】&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;#1、基本知识&lt;/p&gt;

&lt;p&gt;　　epoll是在2.6内核中提出的，是之前的select和poll的增强版本。相对于select和poll来说，epoll更加灵活，没有描述符限制。epoll使用一个文件描述符管理多个描述符，将用户关系的文件描述符的事件存放到内核的一个事件表中，这样在用户空间和内核空间的copy只需一次。&lt;/p&gt;

&lt;p&gt;#2、epoll接口&lt;/p&gt;

&lt;p&gt;　　epoll操作过程需要三个接口，分别如下：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;sys/epoll.h&amp;gt;
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epoll_create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epoll_ctl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;op&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epoll_event&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epoll_wait&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epoll_event&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;events&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;maxevents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;##（1） int epoll_create(int size);&lt;/p&gt;

&lt;p&gt;　　创建一个epoll的句柄，size用来告诉内核这个监听的数目一共有多大。这个参数不同于select()中的第一个参数，给出最大监听的fd+1的值。需要注意的是，当创建好epoll句柄后，它就是会占用一个fd值，在linux下如果查看/proc/进程id/fd/，是能够看到这个fd的，所以在使用完epoll后，必须调用close()关闭，否则可能导致fd被耗尽。&lt;/p&gt;

&lt;p&gt;##（2）int epoll_ctl(int epfd, int op, int fd, struct epoll_event *event);&lt;/p&gt;

&lt;p&gt;　　epoll的事件注册函数，它不同与select()是在监听事件时告诉内核要监听什么类型的事件epoll的事件注册函数，它不同与select()是在监听事件时告诉内核要监听什么类型的事件，而是在这里先注册要监听的事件类型。第一个参数是epoll_create()的返回值，第二个参数表示动作，用三个宏来表示：&lt;/p&gt;

&lt;p&gt;EPOLL_CTL_ADD：注册新的fd到epfd中；&lt;/p&gt;

&lt;p&gt;EPOLL_CTL_MOD：修改已经注册的fd的监听事件；&lt;/p&gt;

&lt;p&gt;EPOLL_CTL_DEL：从epfd中删除一个fd；&lt;/p&gt;

&lt;p&gt;第三个参数是需要监听的fd，第四个参数是告诉内核需要监听什么事，struct epoll_event结构如下：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epoll_event&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;__uint32_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;events&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;cm&quot;&gt;/* Epoll events */&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;epoll_data_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;cm&quot;&gt;/* User data variable */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;events可以是以下几个宏的集合：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;EPOLLIN ：表示对应的文件描述符可以读（包括对端SOCKET正常关闭）；&lt;/li&gt;
  &lt;li&gt;EPOLLOUT：表示对应的文件描述符可以写；&lt;/li&gt;
  &lt;li&gt;EPOLLPRI：表示对应的文件描述符有紧急的数据可读（这里应该表示有带外数据到来）；&lt;/li&gt;
  &lt;li&gt;EPOLLERR：表示对应的文件描述符发生错误；&lt;/li&gt;
  &lt;li&gt;EPOLLHUP：表示对应的文件描述符被挂断；&lt;/li&gt;
  &lt;li&gt;EPOLLET： 将EPOLL设为边缘触发(Edge Triggered)模式，这是相对于水平触发(Level Triggered)来说的。&lt;/li&gt;
  &lt;li&gt;EPOLLONESHOT：只监听一次事件，当监听完这次事件之后，如果还需要继续监听这个socket的话，需要再次把这个socket加入到EPOLL队列里&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;##（3） int epoll_wait(int epfd, struct epoll_event * events, int maxevents, int timeout);&lt;/p&gt;

&lt;p&gt;等待事件的产生，类似于select()调用。参数events用来从内核得到事件的集合，maxevents告之内核这个events有多大，这个maxevents的值不能大于创建epoll_create()时的size，参数timeout是超时时间（毫秒，0会立即返回，-1将不确定，也有说法说是永久阻塞）。该函数返回需要处理的事件数目，如返回0表示已超时。&lt;/p&gt;

&lt;p&gt;#3、工作模式&lt;/p&gt;

&lt;p&gt;　　epoll对文件描述符的操作有两种模式：LT（level trigger）和ET（edge trigger）。LT模式是默认模式，LT模式与ET模式的区别如下：&lt;/p&gt;

&lt;p&gt;　　LT模式：当epoll_wait检测到描述符事件发生并将此事件通知应用程序，应用程序可以不立即处理该事件。下次调用epoll_wait时，会再次响应应用程序并通知此事件。&lt;/p&gt;

&lt;p&gt;　　ET模式：当epoll_wait检测到描述符事件发生并将此事件通知应用程序，应用程序必须立即处理该事件。如果不处理，下次调用epoll_wait时，不会再次响应应用程序并通知此事件。&lt;/p&gt;

&lt;p&gt;　　ET模式在很大程度上减少了epoll事件被重复触发的次数，因此效率要比LT模式高。epoll工作在ET模式的时候，必须使用非阻塞套接口，以避免由于一个文件句柄的阻塞读/阻塞写操作把处理多个文件描述符的任务饿死。&lt;/p&gt;

&lt;p&gt;#4、测试程序&lt;/p&gt;

&lt;p&gt;　　编写一个服务器回射程序echo，练习epoll过程。&lt;/p&gt;

&lt;p&gt;服务器代码如下所示：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;
#include &amp;lt;string.h&amp;gt;
#include &amp;lt;errno.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;netinet/in.h&amp;gt;
#include &amp;lt;sys/socket.h&amp;gt;
#include &amp;lt;arpa/inet.h&amp;gt;
#include &amp;lt;sys/epoll.h&amp;gt;
#include &amp;lt;unistd.h&amp;gt;
#include &amp;lt;sys/types.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#define IPADDRESS   &quot;127.0.0.1&quot;
#define PORT        8787
#define MAXSIZE     1024
#define LISTENQ     5
#define FDSIZE      1000
#define EPOLLEVENTS 100
&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//函数声明
//创建套接字并进行绑定
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;socket_bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//IO多路复用epoll
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;do_epoll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;listenfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//事件处理函数
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;handle_events&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epoll_event&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;events&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;listenfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//处理接收到的连接
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;handle_accpet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;listenfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//读处理
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;do_read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//写处理
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;do_write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//添加事件
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;add_event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//修改事件
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modify_event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//删除事件
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;delete_event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[])&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;listenfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;listenfd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;socket_bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IPADDRESS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PORT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;listen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;listenfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LISTENQ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;do_epoll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;listenfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;socket_bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;listenfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sockaddr_in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;listenfd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AF_INET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SOCK_STREAM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;listenfd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;perror&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;socket error:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;bzero&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sin_family&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AF_INET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;inet_pton&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AF_INET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sin_addr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sin_port&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;htons&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;listenfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sockaddr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;perror&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;bind error: &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;listenfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;do_epoll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;listenfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epoll_event&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;events&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EPOLLEVENTS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ret&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MAXSIZE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;memset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MAXSIZE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//创建一个描述符
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epoll_create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FDSIZE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//添加监听描述符事件
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;add_event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;listenfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EPOLLIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//获取已经准备好的描述符事件
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;ret&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epoll_wait&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;events&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EPOLLEVENTS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;handle_events&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;events&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ret&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;listenfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;handle_events&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epoll_event&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;events&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;listenfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//进行选好遍历
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;events&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//根据描述符的类型和事件类型进行处理
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;listenfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;events&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;events&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EPOLLIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;handle_accpet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;listenfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;events&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;events&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EPOLLIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;do_read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;events&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;events&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EPOLLOUT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;do_write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;handle_accpet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;listenfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clifd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sockaddr_in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cliaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;socklen_t&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;cliaddrlen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;clifd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;accept&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;listenfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sockaddr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cliaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cliaddrlen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clifd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;perror&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;accpet error:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;accept a new client: %s:%d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inet_ntoa&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cliaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sin_addr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cliaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sin_port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//添加一个客户描述符和事件
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;add_event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clifd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EPOLLIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;do_read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;nread&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MAXSIZE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nread&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;perror&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;read error:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;delete_event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EPOLLIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nread&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;fprintf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stderr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;client close.&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;delete_event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EPOLLIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;read message is : %s&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//修改描述符对应的事件，由读改为写
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;modify_event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EPOLLOUT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;do_write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nwrite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;nwrite&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strlen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nwrite&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;perror&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;write error:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;delete_event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EPOLLOUT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;modify_event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EPOLLIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;memset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MAXSIZE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;add_event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epoll_event&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;events&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;epoll_ctl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EPOLL_CTL_ADD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;delete_event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epoll_event&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;events&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;epoll_ctl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EPOLL_CTL_DEL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;modify_event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epoll_event&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;events&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;epoll_ctl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EPOLL_CTL_MOD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;客户端也用epoll实现，控制STDIN_FILENO、STDOUT_FILENO、和sockfd三个描述符，程序如下所示：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;netinet/in.h&amp;gt;
#include &amp;lt;sys/socket.h&amp;gt;
#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;string.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;
#include &amp;lt;sys/epoll.h&amp;gt;
#include &amp;lt;time.h&amp;gt;
#include &amp;lt;unistd.h&amp;gt;
#include &amp;lt;sys/types.h&amp;gt;
#include &amp;lt;arpa/inet.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#define MAXSIZE     1024
#define IPADDRESS   &quot;127.0.0.1&quot;
#define SERV_PORT   8787
#define FDSIZE        1024
#define EPOLLEVENTS 20
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;handle_connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sockfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;handle_events&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epoll_event&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;events&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sockfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;do_read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sockfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;do_read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sockfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;do_write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sockfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;add_event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;delete_event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modify_event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[])&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;                 &lt;span class=&quot;n&quot;&gt;sockfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sockaddr_in&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sockfd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AF_INET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SOCK_STREAM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;bzero&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sin_family&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AF_INET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sin_port&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;htons&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SERV_PORT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;inet_pton&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AF_INET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IPADDRESS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sin_addr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sockfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sockaddr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//处理连接
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;handle_connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sockfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sockfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;handle_connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sockfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epoll_event&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;events&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EPOLLEVENTS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MAXSIZE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ret&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epoll_create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FDSIZE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;add_event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;STDIN_FILENO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EPOLLIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;ret&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epoll_wait&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;events&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EPOLLEVENTS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;handle_events&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;events&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ret&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sockfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;handle_events&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epoll_event&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;events&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sockfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;events&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;events&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;events&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EPOLLIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;do_read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sockfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;events&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;events&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EPOLLOUT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;do_write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sockfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;do_read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sockfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;nread&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MAXSIZE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nread&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;perror&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;read error:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nread&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;fprintf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stderr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;server close.&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STDIN_FILENO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;add_event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sockfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EPOLLOUT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;delete_event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sockfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EPOLLIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;add_event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;STDOUT_FILENO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EPOLLOUT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;do_write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sockfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nwrite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;nwrite&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strlen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nwrite&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;perror&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;write error:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STDOUT_FILENO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;delete_event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EPOLLOUT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;modify_event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EPOLLIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;memset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MAXSIZE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;add_event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epoll_event&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;events&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;epoll_ctl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EPOLL_CTL_ADD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;delete_event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epoll_event&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;events&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;epoll_ctl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EPOLL_CTL_DEL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;modify_event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epoll_event&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;events&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;epoll_ctl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;epollfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EPOLL_CTL_MOD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;5、测试结果&lt;/p&gt;

&lt;p&gt;参考资料：&lt;/p&gt;

&lt;p&gt;http://www.cnblogs.com/OnlyXP/archive/2007/08/10/851222.html&lt;/p&gt;

&lt;p&gt;http://www.cnblogs.com/lexus/archive/2011/11/19/2254798.html&lt;/p&gt;

&lt;p&gt;https://banu.com/blog/2/how-to-use-epoll-a-complete-example-in-c/&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>网络通信IO多路复用之Poll</title>
      <link>http://lilifeng.net/blogs/2015/05/19/net-poll/</link>
      <pubDate>Tue, 19 May 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>C++</category>
      
      
      <category>Internet</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/05/19/net-poll/</guid>
      <description>&lt;blockquote&gt;
  &lt;p&gt;系列列表：&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;/blogs/2012/05/18/net-select/&quot;&gt;网络通信IO多路复用之Select【1】&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;/blogs/2012/05/19/net-poll/&quot;&gt;网络通信IO多路复用之Poll【2】&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;/blogs/2012/05/20/net-epoll/&quot;&gt;网络通信IO多路复用之ePoll【3】&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;/blogs/2012/05/21/net-select-poll-epoll/&quot;&gt;网络通信IO多路复用之总结【4】&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;#1、基本知识&lt;/p&gt;

&lt;p&gt;　　poll的机制与select类似，与select在本质上没有多大差别，管理多个描述符也是进行轮询，根据描述符的状态进行处理，但是poll没有最大文件描述符数量的限制。poll和select同样存在一个缺点就是，包含大量文件描述符的数组被整体复制于用户态和内核的地址空间之间，而不论这些文件描述符是否就绪，它的开销随着文件描述符数量的增加而线性增大。&lt;/p&gt;

&lt;p&gt;#2、poll函数&lt;/p&gt;

&lt;p&gt;　　函数格式如下所示：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;cp&quot;&gt;# include &amp;lt;poll.h&amp;gt;
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;poll&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pollfd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nfds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;pollfd结构体定义如下：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pollfd&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;         &lt;span class=&quot;cm&quot;&gt;/* 文件描述符 */&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;short&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;events&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;         &lt;span class=&quot;cm&quot;&gt;/* 等待的事件 */&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;short&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;revents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;       &lt;span class=&quot;cm&quot;&gt;/* 实际发生了的事件 */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;　　每一个pollfd结构体指定了一个被监视的文件描述符，可以传递多个结构体，指示poll()监视多个文件描述符。每个结构体的events域是监视该文件描述符的事件掩码，由用户来设置这个域。revents域是文件描述符的操作结果事件掩码，内核在调用返回时设置这个域。events域中请求的任何事件都可能在revents域中返回。合法的事件如下：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;POLLIN 　　　　　　　　有数据可读。&lt;/li&gt;
  &lt;li&gt;POLLRDNORM 　　　　  有普通数据可读。&lt;/li&gt;
  &lt;li&gt;POLLRDBAND　　　　　 有优先数据可读。&lt;/li&gt;
  &lt;li&gt;POLLPRI　　　　　　　　 有紧迫数据可读。&lt;/li&gt;
  &lt;li&gt;POLLOUT　　　　　　      写数据不会导致阻塞。&lt;/li&gt;
  &lt;li&gt;POLLWRNORM　　　　　  写普通数据不会导致阻塞。&lt;/li&gt;
  &lt;li&gt;POLLWRBAND　　　　　   写优先数据不会导致阻塞。&lt;/li&gt;
  &lt;li&gt;POLLMSGSIGPOLL 　　　　消息可用。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;此外，revents域中还可能返回下列事件：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;POLLER　　   指定的文件描述符发生错误。&lt;/li&gt;
  &lt;li&gt;POLLHUP　　 指定的文件描述符挂起事件。&lt;/li&gt;
  &lt;li&gt;POLLNVAL　　指定的文件描述符非法。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这些事件在events域中无意义，因为它们在合适的时候总是会从revents中返回。&lt;/p&gt;

&lt;p&gt;　　使用poll()和select()不一样，你不需要显式地请求异常情况报告。&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;　　POLLIN&lt;/td&gt;
      &lt;td&gt;POLLPRI等价于select()的读事件，POLLOUT&lt;/td&gt;
      &lt;td&gt;POLLWRBAND等价于select()的写事件。POLLIN等价于POLLRDNORM&lt;/td&gt;
      &lt;td&gt;POLLRDBAND，而POLLOUT则等价于POLLWRNORM。例如，要同时监视一个文件描述符是否可读和可写，我们可以设置 events为POLLIN&lt;/td&gt;
      &lt;td&gt;POLLOUT。在poll返回时，我们可以检查revents中的标志，对应于文件描述符请求的events结构体。如果POLLIN事件被设置，则文件描述符可以被读取而不阻塞。如果POLLOUT被设置，则文件描述符可以写入而不导致阻塞。这些标志并不是互斥的：它们可能被同时设置，表示这个文件描述符的读取和写入操作都会正常返回而不阻塞。&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;　　timeout参数指定等待的毫秒数，无论I/O是否准备好，poll都会返回。timeout指定为负数值表示无限超时，使poll()一直挂起直到一个指定事件发生；timeout为0指示poll调用立即返回并列出准备好I/O的文件描述符，但并不等待其它的事件。这种情况下，poll()就像它的名字那样，一旦选举出来，立即返回。&lt;/p&gt;

&lt;p&gt;　　##返回值和错误代码&lt;/p&gt;

&lt;p&gt;　　成功时，poll()返回结构体中revents域不为0的文件描述符个数；如果在超时前没有任何事件发生，poll()返回0；失败时，poll()返回-1，并设置errno为下列值之一：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;EBADF　　       一个或多个结构体中指定的文件描述符无效。&lt;/li&gt;
  &lt;li&gt;EFAULTfds　　 指针指向的地址超出进程的地址空间。&lt;/li&gt;
  &lt;li&gt;EINTR　　　　  请求的事件之前产生一个信号，调用可以重新发起。&lt;/li&gt;
  &lt;li&gt;EINVALnfds　　参数超出PLIMIT_NOFILE值。&lt;/li&gt;
  &lt;li&gt;ENOMEM　　     可用内存不足，无法完成请求。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;#3、测试程序&lt;/p&gt;

&lt;p&gt;　　编写一个echo server程序，功能是客户端向服务器发送信息，服务器接收输出并原样发送回给客户端，客户端接收到输出到终端。&lt;/p&gt;

&lt;p&gt;　　服务器端程序如下：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;
#include &amp;lt;string.h&amp;gt;
#include &amp;lt;errno.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;netinet/in.h&amp;gt;
#include &amp;lt;sys/socket.h&amp;gt;
#include &amp;lt;poll.h&amp;gt;
#include &amp;lt;unistd.h&amp;gt;
#include &amp;lt;sys/types.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#define IPADDRESS   &quot;127.0.0.1&quot;
#define PORT        8787
#define MAXLINE     1024
#define LISTENQ     5
#define OPEN_MAX    1000
#define INFTIM      -1
&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//函数声明
//创建套接字并进行绑定
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;socket_bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//IO多路复用poll
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;do_poll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;listenfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//处理多个连接
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;handle_connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pollfd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connfds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[])&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;listenfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sockfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sockaddr_in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cliaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;socklen_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cliaddrlen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;listenfd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;socket_bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IPADDRESS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PORT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;listen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;listenfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LISTENQ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;do_poll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;listenfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;socket_bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;listenfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sockaddr_in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;listenfd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AF_INET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SOCK_STREAM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;listenfd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;perror&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;socket error:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;bzero&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sin_family&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AF_INET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;inet_pton&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AF_INET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sin_addr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sin_port&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;htons&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;listenfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sockaddr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;perror&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;bind error: &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;listenfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;do_poll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;listenfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;connfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sockfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sockaddr_in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cliaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;socklen_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cliaddrlen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pollfd&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clientfds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OPEN_MAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;maxi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nready&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//添加监听描述符
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;clientfds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;listenfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;clientfds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;events&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;POLLIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//初始化客户连接描述符
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OPEN_MAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;clientfds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;maxi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//循环处理
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//获取可用描述符的个数
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;nready&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;poll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clientfds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;maxi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;INFTIM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nready&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;perror&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;poll error:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//测试监听描述符是否准备好
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clientfds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;revents&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;POLLIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;cliaddrlen&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cliaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;//接受新的连接
&lt;/span&gt;            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connfd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;accept&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;listenfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sockaddr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cliaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cliaddrlen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;errno&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EINTR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                   &lt;span class=&quot;n&quot;&gt;perror&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;accept error:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                   &lt;span class=&quot;n&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;fprintf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;accept a new client: %s:%d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inet_ntoa&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cliaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sin_addr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cliaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sin_port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;//将新的连接描述符添加到数组中
&lt;/span&gt;            &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OPEN_MAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clientfds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;clientfds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;connfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OPEN_MAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;fprintf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stderr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;too many clients.&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;//将新的描述符添加到读描述符集合中
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;clientfds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;events&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;POLLIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;//记录客户连接套接字的个数
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;maxi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;maxi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;maxi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nready&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//处理客户连接
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;handle_connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clientfds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;maxi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;handle_connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pollfd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connfds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MAXLINE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;memset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MAXLINE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connfds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//测试客户描述符是否准备好
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connfds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;revents&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;POLLIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;//接收客户端发送的信息
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connfds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MAXLINE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connfds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;connfds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
           &lt;span class=&quot;c1&quot;&gt;// printf(&quot;read msg is: &quot;);
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;STDOUT_FILENO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;//向客户端发送buf
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connfds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;客户端代码如下所示：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;netinet/in.h&amp;gt;
#include &amp;lt;sys/socket.h&amp;gt;
#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;string.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;
#include &amp;lt;poll.h&amp;gt;
#include &amp;lt;time.h&amp;gt;
#include &amp;lt;unistd.h&amp;gt;
#include &amp;lt;sys/types.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#define MAXLINE     1024
#define IPADDRESS   &quot;127.0.0.1&quot;
#define SERV_PORT   8787
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#define max(a,b) (a &amp;gt; b) ? a : b
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;handle_connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sockfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[])&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;                 &lt;span class=&quot;n&quot;&gt;sockfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sockaddr_in&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sockfd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AF_INET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SOCK_STREAM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;bzero&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sin_family&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AF_INET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sin_port&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;htons&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SERV_PORT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;inet_pton&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AF_INET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IPADDRESS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sin_addr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sockfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sockaddr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//处理连接描述符
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;handle_connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sockfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;handle_connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sockfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;sendline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MAXLINE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;recvline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MAXLINE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;maxfdp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdineof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pollfd&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pfds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//添加连接描述符
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;pfds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sockfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pfds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;events&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;POLLIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//添加标准输入描述符
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;pfds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STDIN_FILENO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pfds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;events&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;POLLIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;poll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pfds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pfds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;revents&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;POLLIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sockfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;recvline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MAXLINE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;fprintf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stderr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;client: server is closed.&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sockfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;STDOUT_FILENO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;recvline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//测试标准输入是否准备好
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pfds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;revents&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;POLLIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;STDIN_FILENO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sendline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MAXLINE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;shutdown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sockfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SHUT_WR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sockfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sendline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;4、程序测试结果&lt;/p&gt;

&lt;p&gt;5、参考资料&lt;/p&gt;

&lt;p&gt;http://blog.endlesscode.com/2010/03/27/select-poll-epoll-intro/&lt;/p&gt;

&lt;p&gt;http://hi.baidu.com/xzf20082004/item/622fb01a1018c7f5746a846f&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>网络通信IO多路复用之Select</title>
      <link>http://lilifeng.net/blogs/2015/05/18/net-select/</link>
      <pubDate>Mon, 18 May 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>C++</category>
      
      
      <category>Internet</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/05/18/net-select/</guid>
      <description>&lt;blockquote&gt;
  &lt;p&gt;系列列表：&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;/blogs/2012/05/18/net-select/&quot;&gt;网络通信IO多路复用之Select【1】&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;/blogs/2012/05/19/net-poll/&quot;&gt;网络通信IO多路复用之Poll【2】&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;/blogs/2012/05/20/net-epoll/&quot;&gt;网络通信IO多路复用之ePoll【3】&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;/blogs/2012/05/21/net-select-poll-epoll/&quot;&gt;网络通信IO多路复用之总结【4】&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;#1、基本概念&lt;/p&gt;

&lt;p&gt;　　IO多路复用是指内核一旦发现进程指定的一个或者多个IO条件准备读取，它就通知该进程。IO多路复用适用如下场合：&lt;/p&gt;

&lt;p&gt;　　（1）当客户处理多个描述字时（一般是交互式输入和网络套接口），必须使用I/O复用。&lt;/p&gt;

&lt;p&gt;　　（2）当一个客户同时处理多个套接口时，而这种情况是可能的，但很少出现。&lt;/p&gt;

&lt;p&gt;　　（3）如果一个TCP服务器既要处理监听套接口，又要处理已连接套接口，一般也要用到I/O复用。&lt;/p&gt;

&lt;p&gt;　　（4）如果一个服务器即要处理TCP，又要处理UDP，一般要使用I/O复用。&lt;/p&gt;

&lt;p&gt;　　（5）如果一个服务器要处理多个服务或多个协议，一般要使用I/O复用。&lt;/p&gt;

&lt;p&gt;　　与多进程和多线程技术相比，I/O多路复用技术的最大优势是系统开销小，系统不必创建进程/线程，也不必维护这些进程/线程，从而大大减小了系统的开销。&lt;/p&gt;

&lt;p&gt;#2、select函数&lt;/p&gt;

&lt;p&gt;　　该函数准许进程指示内核等待多个事件中的任何一个发送，并只在有一个或多个事件发生或经历一段指定的时间后才唤醒。函数原型如下：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;sys/select.h&amp;gt;
#include &amp;lt;sys/time.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;maxfdp1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd_set&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;readset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd_set&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;writeset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd_set&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exceptset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timeval&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;返回值：就绪描述符的数目，超时返回&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;，出错返回&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;函数参数介绍如下：&lt;/p&gt;

&lt;p&gt;（1）第一个参数maxfdp1指定待测试的描述字个数，它的值是待测试的最大描述字加1（因此把该参数命名为maxfdp1），描述字0、1、2…maxfdp1-1均将被测试。&lt;/p&gt;

&lt;p&gt;（2）中间的三个参数readset、writeset和exceptset指定我们要让内核测试读、写和异常条件的描述字。如果对某一个的条件不感兴趣，就可以把它设为空指针。struct fd_set可以理解为一个集合，这个集合中存放的是文件描述符，可通过以下四个宏进行设置：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FD_ZERO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd_set&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fdset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;           &lt;span class=&quot;c1&quot;&gt;//清空集合
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FD_SET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fd_set&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fdset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;//将一个给定的文件描述符加入集合之中
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FD_CLR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fd_set&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fdset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;//将一个给定的文件描述符从集合中删除
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FD_ISSET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fd_set&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fdset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;检查集合中指定的文件描述符是否可以读写&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;（3）timeout告知内核等待所指定描述字中的任何一个就绪可花多少时间。其timeval结构用于指定这段时间的秒数和微秒数。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timeval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tv_sec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;//seconds
&lt;/span&gt;	&lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tv_usec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//microseconds
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;这个参数有三种可能：&lt;/p&gt;

&lt;p&gt;（1）永远等待下去：仅在有一个描述字准备好I/O时才返回。为此，把该参数设置为空指针NULL。&lt;/p&gt;

&lt;p&gt;（2）等待一段固定时间：在有一个描述字准备好I/O时返回，但是不超过由该参数所指向的timeval结构中指定的秒数和微秒数。&lt;/p&gt;

&lt;p&gt;（3）根本不等待：检查描述字后立即返回，这称为轮询。为此，该参数必须指向一个timeval结构，而且其中的定时器值必须为0。&lt;/p&gt;

&lt;p&gt;#3、测试程序&lt;/p&gt;

&lt;p&gt;　　写一个TCP回射程序，程序的功能是：客户端向服务器发送信息，服务器接收并原样发送给客户端，客户端显示出接收到的信息。&lt;/p&gt;

&lt;p&gt;服务端程序如下所示：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;
#include &amp;lt;string.h&amp;gt;
#include &amp;lt;errno.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;netinet/in.h&amp;gt;
#include &amp;lt;sys/socket.h&amp;gt;
#include &amp;lt;sys/select.h&amp;gt;
#include &amp;lt;unistd.h&amp;gt;
#include &amp;lt;sys/types.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#define IPADDRESS   &quot;127.0.0.1&quot;
#define PORT        8787
#define MAXLINE     1024
#define LISTENQ     5
&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//函数声明
//创建套接字并进行绑定
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;socket_bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//IO多路复用select
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;do_select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;listenfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//处理多个连接
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;handle_connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connfds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd_set&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd_set&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pallset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[])&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;listenfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sockfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sockaddr_in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cliaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;socklen_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cliaddrlen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;listenfd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;socket_bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IPADDRESS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PORT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;listen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;listenfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LISTENQ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;do_select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;listenfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;socket_bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;listenfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sockaddr_in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;listenfd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AF_INET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SOCK_STREAM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;listenfd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;perror&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;socket error:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;bzero&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sin_family&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AF_INET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;inet_pton&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AF_INET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sin_addr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sin_port&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;htons&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;listenfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sockaddr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;perror&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;bind error: &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;listenfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;do_select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;listenfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;connfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sockfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sockaddr_in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cliaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;socklen_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cliaddrlen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;fd_set&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;rset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;allset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;maxfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;maxi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clientfds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FD_SETSIZE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//保存客户连接描述符
&lt;/span&gt;    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nready&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//初始化客户连接描述符
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FD_SETSIZE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;clientfds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;maxi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;FD_ZERO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;allset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//添加监听描述符
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;FD_SET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;listenfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;allset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;maxfd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;listenfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//循环处理
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;rset&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;allset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//获取可用描述符的个数
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;nready&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;maxfd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nready&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;perror&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;select error:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//测试监听描述符是否准备好
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FD_ISSET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;listenfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;cliaddrlen&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cliaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;//接受新的连接
&lt;/span&gt;            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connfd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;accept&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;listenfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sockaddr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cliaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cliaddrlen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;errno&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EINTR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                   &lt;span class=&quot;n&quot;&gt;perror&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;accept error:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                   &lt;span class=&quot;n&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;fprintf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;accept a new client: %s:%d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inet_ntoa&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cliaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sin_addr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cliaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sin_port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;//将新的连接描述符添加到数组中
&lt;/span&gt;            &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FD_SETSIZE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clientfds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;clientfds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;connfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FD_SETSIZE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;fprintf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stderr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;too many clients.&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;//将新的描述符添加到读描述符集合中
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;FD_SET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;allset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;//描述符个数
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;maxfd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connfd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;maxfd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;connfd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;maxfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;//记录客户连接套接字的个数
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;maxi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;maxi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;maxi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nready&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//处理客户连接
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;handle_connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clientfds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;maxi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;allset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;handle_connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connfds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd_set&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd_set&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pallset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MAXLINE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;memset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MAXLINE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connfds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//测试客户描述符是否准备好
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FD_ISSET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connfds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;//接收客户端发送的信息
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connfds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MAXLINE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connfds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;FD_CLR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connfds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pallset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;connfds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;read msg is: &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;STDOUT_FILENO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;//向客户端发送buf
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connfds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;客户端程序如下：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;netinet/in.h&amp;gt;
#include &amp;lt;sys/socket.h&amp;gt;
#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;string.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;
#include &amp;lt;sys/select.h&amp;gt;
#include &amp;lt;time.h&amp;gt;
#include &amp;lt;unistd.h&amp;gt;
#include &amp;lt;sys/types.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#define MAXLINE     1024
#define IPADDRESS   &quot;127.0.0.1&quot;
#define SERV_PORT   8787
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#define max(a,b) (a &amp;gt; b) ? a : b
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;handle_connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sockfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[])&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;                 &lt;span class=&quot;n&quot;&gt;sockfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sockaddr_in&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sockfd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AF_INET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SOCK_STREAM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;bzero&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sin_family&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AF_INET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sin_port&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;htons&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SERV_PORT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;inet_pton&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AF_INET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IPADDRESS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sin_addr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sockfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sockaddr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//处理连接描述符
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;handle_connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sockfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;handle_connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sockfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;sendline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MAXLINE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;recvline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MAXLINE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;maxfdp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdineof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;fd_set&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;rset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;FD_ZERO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//添加标准输入描述符
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;FD_SET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;STDIN_FILENO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//添加连接描述符
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;FD_SET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sockfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;maxfdp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;STDIN_FILENO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sockfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//进行轮询
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;maxfdp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//测试连接套接字是否准备好
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FD_ISSET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sockfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sockfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;recvline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MAXLINE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;fprintf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stderr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;client: server is closed.&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sockfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;FD_CLR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sockfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;STDOUT_FILENO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;recvline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//测试标准输入是否准备好
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FD_ISSET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;STDIN_FILENO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;STDIN_FILENO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sendline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MAXLINE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;FD_CLR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;STDIN_FILENO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sockfd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sendline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;#4、程序结果&lt;/p&gt;

&lt;p&gt;　　启动服务程序，执行两个客户程序进行测试，结果如下图所示：&lt;/p&gt;

&lt;p&gt;#参考：&lt;/p&gt;

&lt;p&gt;http://konglingchun.is-programmer.com/posts/12146.html&lt;/p&gt;

&lt;p&gt;http://blog.163.com/smileface100@126/blog/static/27720874200951024532966/&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Redis放在本机好还是在网络环境好？- redis读写性能测试</title>
      <link>http://lilifeng.net/blogs/2015/05/16/redis-local-network/</link>
      <pubDate>Sat, 16 May 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>Redis</category>
      
      
      <category>Internet</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/05/16/redis-local-network/</guid>
      <description>&lt;p&gt;#一、基础测试：&lt;/p&gt;

&lt;p&gt;redis读写性能测试redis官网测试读写能到10万左右，非常吸引人，我在研发环境对redis进行测试，发现redis的速度的确很快，此测试是为日后应用优化提供研发参考。由于受到网络环境的限制，本机是100M的网卡，最高10M/s的传输速度，所以当测试到每秒读取45000条时，测试机和测试服务器上传或者下载速度已经达到10M/s，基本到了网络瓶颈，无法再提高，这个应该是网络吞吐量的原因，不过CPU的利用率直到20%左右。如果网络传输速度更快的话，应该还可以提高，另外，在不进行批量获取数据的时候，也就是每次发送一个key获取一个值的方式处理，基本处理能力只在1100条左右，估计是受制于网络速度的原因。&lt;/p&gt;

&lt;p&gt;#二、 加项测试：&lt;/p&gt;

&lt;p&gt;##（1）单条处理：&lt;/p&gt;

&lt;p&gt;通过同一网段的两台Xeon(R) E5520 服务器之间进行测试，网络速度也是10M/s的速度，通过发送一个key获取一个value的方式测试，速度明细要高于开发电脑的速度，也就是linux环境快于window环境，每秒能处理4000条左右的数据，比之前1000条提高4倍，而在服务器本机进行测试，性能突然开始变态了，存储数据达到1.5万左右，获取速度达到2万左右，比网络环境提供5倍，比windows环境提高20倍；&lt;/p&gt;

&lt;p&gt;##（2） 批量处理：
批量存储、批量获取，linux服务器直接处理速度在4万以上，与windows环境下速度相当；不过在本机环境下，性能又开始变态了，批量存储速度能达到15万到20万以上，批量获取更是达到40万以上，整体性能比Linux服务器直接提高10倍到20倍。&lt;/p&gt;

&lt;p&gt;#三、个人经验：&lt;/p&gt;

&lt;p&gt;##（1）批量处理：&lt;/p&gt;

&lt;p&gt;redis在处理数据时，最好是要进行批量处理，将一次处理1条数据改为多条，性能可以成倍提高。测试的目的就是要弄清楚批量和非批量处理之间的差别，从测试结果来看，性能差异非常大，所以在开发过程中尽量使用批量处理，即每次发送多条数据，以抵消网络速度影响。&lt;/p&gt;

&lt;p&gt;##（2）网络：&lt;/p&gt;

&lt;p&gt;redis在处理时受网络影响非常大，所以，部署最好能在本机部署，如果本机部署redis，能获取10到20倍的性能。集群情况下，网络硬件、网速要求一定要高。&lt;/p&gt;

&lt;p&gt;##（3）内存：&lt;/p&gt;

&lt;p&gt;由于我在测试环境遇到过redis读取超时，排查原因定位在Linux交互分区上。如果没有足够内存，linux可能将reids一部分数据放到交换分区，导致读取速度非常慢导致超时。所以一定要预留足够多的内存供redis使用。&lt;/p&gt;

&lt;p&gt;#具体测试&lt;/p&gt;

&lt;p&gt;##测试环境：&lt;/p&gt;

&lt;p&gt;###redis主机:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Red Hat Enterprise Linux Server release 5.4 (Tikanga)
Intel(R) Xeon(R) CPU           E5520  @ 2.27GHz
内存 8G
硬盘 300G&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;###测试主机：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;window7 
eclipse  Juno Service Release 2
cpu i3 -2100
内存 4G
硬盘500G
java连接redis客户端jedis-2.1.0.jar&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;###测试数据：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;512个字符字符串&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;###测试结果：&lt;/p&gt;

&lt;p&gt;####批量获取&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/150516_1.png&quot; alt=&quot;批量获取&quot; /&gt;&lt;/p&gt;

&lt;p&gt;非批量提交处理数量&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/150516_2.png&quot; alt=&quot;非批量提交处理数量&quot; /&gt;&lt;/p&gt;

&lt;p&gt;批量设置&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/150516_3.png&quot; alt=&quot;批量设置&quot; /&gt;&lt;/p&gt;

&lt;p&gt;非批量设置&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/150516_4.png&quot; alt=&quot;非批量设置&quot; /&gt;&lt;/p&gt;

&lt;p&gt;内网服务器直接数据处理&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/150516_5.png&quot; alt=&quot;内网服务器直接数据处理&quot; /&gt;&lt;/p&gt;

&lt;p&gt;服务器本机上测试&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/150516_6.png&quot; alt=&quot;服务器本机上测试&quot; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>OpenRTB有关的国际标准文档</title>
      <link>http://lilifeng.net/blogs/2015/05/07/openrtb-2-3/</link>
      <pubDate>Thu, 07 May 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>RTB</category>
      
      <category>DSP</category>
      
      <category>OpenRTB</category>
      
      
      <category>广告平台</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/05/07/openrtb-2-3/</guid>
      <description>&lt;p&gt;OpenRTB API v2.3 已发布，可以从下面的链接查看&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/file/OpenRTB-API-Specification-Version-2-3.pdf&quot;&gt;OpenRTB-API-Specification-Version-2-3&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;OpenRTB Native Ads SPEC v1.0也已经发布，请点这里：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/file/OpenRTB-Native-Ads-Specification-1_0-Final.pdf&quot;&gt;OpenRTB-Native-Ads-Specification-1_0-Final&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>markdown语法支持的syntax高亮</title>
      <link>http://lilifeng.net/blogs/2015/05/06/markdown-syntax/</link>
      <pubDate>Wed, 06 May 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>Jekyll</category>
      
      <category>Liquid</category>
      
      
      <category>Internet</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/05/06/markdown-syntax/</guid>
      <description>&lt;blockquote&gt;
  &lt;p&gt;http://pygments.org/docs/lexers/&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;ActionScript and MXML

class pygments.lexers.actionscript.ActionScript3Lexer
Short names:	as3, actionscript3
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.as
MIME types:	application/x-actionscript3, text/x-actionscript3, text/actionscript3
For ActionScript 3 &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.11.

class pygments.lexers.actionscript.ActionScriptLexer
Short names:	as, actionscript
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.as
MIME types:	application/x-actionscript, text/x-actionscript, text/actionscript
For ActionScript &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.9.

class pygments.lexers.actionscript.MxmlLexer
Short names:	mxml
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.mxml
MIME types:	None
For MXML markup. Nested AS3 &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &amp;lt;script&amp;gt; tags is highlighted by the appropriate lexer.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.1.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;computer algebra systems

class pygments.lexers.algebra.GAPLexer
Short names:	gap
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.g, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.gd, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.gi, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.gap
MIME types:	None
For GAP &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

class pygments.lexers.algebra.MathematicaLexer
Short names:	mathematica, mma, nb
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.nb, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.cdf, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.nbp, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.ma
MIME types:	application/mathematica, application/vnd.wolfram.mathematica, application/vnd.wolfram.mathematica.package, application/vnd.wolfram.cdf
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Mathematica &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

class pygments.lexers.algebra.MuPADLexer
Short names:	mupad
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.mu
MIME types:	None
A MuPAD lexer. Contributed by Christopher Creutzig &amp;lt;christopher@creutzig.de&amp;gt;.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.8.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;AmbientTalk language

class pygments.lexers.ambient.AmbientTalkLexer
Short names:	at, ambienttalk, ambienttalk/2
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.at
MIME types:	text/x-ambienttalk
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;AmbientTalk &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;APL

class pygments.lexers.apl.APLLexer
Short names:	apl
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.apl
MIME types:	None
A simple APL lexer.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;assembly languages

class pygments.lexers.asm.CObjdumpLexer
Short names:	c-objdump
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.c-objdump
MIME types:	text/x-c-objdump
For the output of ‘objdump -Sr on compiled C files’

class pygments.lexers.asm.Ca65Lexer
Short names:	ca65
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.s
MIME types:	None
For ca65 assembler sources.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.6.

class pygments.lexers.asm.CppObjdumpLexer
Short names:	cpp-objdump, c++-objdumb, cxx-objdump
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.cpp-objdump, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.c++-objdump, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.cxx-objdump
MIME types:	text/x-cpp-objdump
For the output of ‘objdump -Sr on compiled C++ files’

class pygments.lexers.asm.DObjdumpLexer
Short names:	d-objdump
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.d-objdump
MIME types:	text/x-d-objdump
For the output of ‘objdump -Sr on compiled D files’

class pygments.lexers.asm.GasLexer
Short names:	gas, asm
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.s, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.S
MIME types:	text/x-gas
For Gas &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;AT&amp;amp;T&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; assembly code.

class pygments.lexers.asm.LlvmLexer
Short names:	llvm
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.ll
MIME types:	text/x-llvm
For LLVM assembly code.

class pygments.lexers.asm.NasmLexer
Short names:	nasm
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.asm, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.ASM
MIME types:	text/x-nasm
For Nasm &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Intel&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; assembly code.

class pygments.lexers.asm.NasmObjdumpLexer
Short names:	objdump-nasm
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.objdump-intel
MIME types:	text/x-nasm-objdump
For the output of ‘objdump -d -M intel’.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

class pygments.lexers.asm.ObjdumpLexer
Short names:	objdump
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.objdump
MIME types:	text/x-objdump
For the output of ‘objdump -dr’

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;automation scripting languages

class pygments.lexers.automation.AutoItLexer
Short names:	autoit
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.au3
MIME types:	text/x-autoit
For AutoIt files.

AutoIt is a freeware BASIC-like scripting language designed &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;automating the Windows GUI and general scripting

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.6.

class pygments.lexers.automation.AutohotkeyLexer
Short names:	ahk, autohotkey
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.ahk, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.ahkl
MIME types:	text/x-autohotkey
For autohotkey &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.4.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;BASIC like languages &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;other than VB.net&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

class pygments.lexers.basic.BlitzBasicLexer
Short names:	blitzbasic, b3d, bplus
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.bb, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.decls
MIME types:	text/x-bb
For BlitzBasic &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

class pygments.lexers.basic.BlitzMaxLexer
Short names:	blitzmax, bmax
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.bmx
MIME types:	text/x-bmx
For BlitzMax &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.4.

class pygments.lexers.basic.CbmBasicV2Lexer
Short names:	cbmbas
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.bas
MIME types:	None
For CBM BASIC V2 sources.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.6.

class pygments.lexers.basic.MonkeyLexer
Short names:	monkey
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.monkey
MIME types:	text/x-monkey
For Monkey &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.6.

class pygments.lexers.basic.QBasicLexer
Short names:	qbasic, basic
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.BAS, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.bas
MIME types:	text/basic
For QBasic &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

Lexers &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; “business-oriented” languages

class pygments.lexers.business.ABAPLexer
Short names:	abap
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.abap
MIME types:	text/x-abap
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;ABAP, SAP’s integrated language.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.1.

class pygments.lexers.business.CobolFreeformatLexer
Short names:	cobolfree
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.cbl, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.CBL
MIME types:	None
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Free format OpenCOBOL code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.6.

class pygments.lexers.business.CobolLexer
Short names:	cobol
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.cob, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.COB, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.cpy, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.CPY
MIME types:	text/x-cobol
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;OpenCOBOL code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.6.

class pygments.lexers.business.GoodDataCLLexer
Short names:	gooddata-cl
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.gdc
MIME types:	text/x-gooddata-cl
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;GoodData-CL script files.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.4.

class pygments.lexers.business.MaqlLexer
Short names:	maql
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.maql
MIME types:	text/x-gooddata-maql, application/x-gooddata-maql
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;GoodData MAQL scripts.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.4.

class pygments.lexers.business.OpenEdgeLexer
Short names:	openedge, abl, progress
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.p, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.cls
MIME types:	text/x-openedge, application/x-openedge
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;OpenEdge ABL &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;formerly Progress&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.5.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;C/C++ languages

class pygments.lexers.c_cpp.CLexer
Short names:	c
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.c, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.h, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.idc
MIME types:	text/x-chdr, text/x-csrc
For C &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code with preprocessor directives.

class pygments.lexers.c_cpp.CppLexer
Short names:	cpp, c++
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.cpp, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.hpp, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.c++, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.h++, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.cc, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.hh, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.cxx, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.hxx, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.C, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.H, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.cp, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.CPP
MIME types:	text/x-c++hdr, text/x-c++src
For C++ &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code with preprocessor directives.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;other C-like languages

class pygments.lexers.c_like.ClayLexer
Short names:	clay
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.clay
MIME types:	text/x-clay
For Clay source.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

class pygments.lexers.c_like.CudaLexer
Short names:	cuda, cu
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.cu, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.cuh
MIME types:	text/x-cuda
For NVIDIA CUDA™ source.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.6.

class pygments.lexers.c_like.ECLexer
Short names:	ec
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.ec, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.eh
MIME types:	text/x-echdr, text/x-ecsrc
For eC &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code with preprocessor directives.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.5.

class pygments.lexers.c_like.MqlLexer
Short names:	mql, mq4, mq5, mql4, mql5
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.mq4, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.mq5, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.mqh
MIME types:	text/x-mql
For MQL4 and MQL5 &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

class pygments.lexers.c_like.NesCLexer
Short names:	nesc
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.nc
MIME types:	text/x-nescsrc
For nesC &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code with preprocessor directives.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

class pygments.lexers.c_like.PikeLexer
Short names:	pike
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.pike, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.pmod
MIME types:	text/x-pike
For Pike &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

class pygments.lexers.c_like.SwigLexer
Short names:	swig
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.swg, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.i
MIME types:	text/swig
For SWIG &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

class pygments.lexers.c_like.ValaLexer
Short names:	vala, vapi
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.vala, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.vapi
MIME types:	text/x-vala
For Vala &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code with preprocessor directives.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.1.

Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the Chapel language

class pygments.lexers.chapel.ChapelLexer
Short names:	chapel, chpl
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.chpl
MIME types:	None
For Chapel source.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;configuration file formats

class pygments.lexers.configs.ApacheConfLexer
Short names:	apacheconf, aconf, apache
Filenames:	.htaccess, apache.conf, apache2.conf
MIME types:	text/x-apacheconf
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;configuration files following the Apache config file format.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.6.

class pygments.lexers.configs.Cfengine3Lexer
Short names:	cfengine3, cf3
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.cf
MIME types:	None
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;CFEngine3 policy files.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.5.

class pygments.lexers.configs.DockerLexer
Short names:	docker, dockerfile
Filenames:	Dockerfile, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.docker
MIME types:	text/x-dockerfile-config
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Docker configuration files.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

class pygments.lexers.configs.IniLexer
Short names:	ini, cfg, dosini
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.ini, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.cfg
MIME types:	text/x-ini
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;configuration files &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;INI style.

class pygments.lexers.configs.KconfigLexer
Short names:	kconfig, menuconfig, linux-config, kernel-config
Filenames:	Kconfig, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;Config.in&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;, external.in&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;, standard-modules.in
MIME types:	text/x-kconfig
For Linux-style Kconfig files.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.6.

class pygments.lexers.configs.LighttpdConfLexer
Short names:	lighty, lighttpd
Filenames:	None
MIME types:	text/x-lighttpd-conf
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Lighttpd configuration files.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.11.

class pygments.lexers.configs.NginxConfLexer
Short names:	nginx
Filenames:	None
MIME types:	text/x-nginx-conf
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Nginx configuration files.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.11.

class pygments.lexers.configs.PropertiesLexer
Short names:	properties, jproperties
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.properties
MIME types:	text/x-java-properties
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;configuration files &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;Java’s properties format.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.4.

class pygments.lexers.configs.RegeditLexer
Short names:	registry
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.reg
MIME types:	text/x-windows-registry
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Windows Registry files produced by regedit.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.6.

class pygments.lexers.configs.SquidConfLexer
Short names:	squidconf, squid.conf, squid
Filenames:	squid.conf
MIME types:	text/x-squidconf
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;squid configuration files.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.9.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;misc console output

class pygments.lexers.console.PyPyLogLexer
Short names:	pypylog, pypy
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.pypylog
MIME types:	application/x-pypylog
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;PyPy log files.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.5.

class pygments.lexers.console.VCTreeStatusLexer
Short names:	vctreestatus
Filenames:	None
MIME types:	None
For colorizing output of version control status commands, like “hg status” or “svn status”.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;CSS and related stylesheet formats

class pygments.lexers.css.CssLexer
Short names:	css
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.css
MIME types:	text/css
For CSS &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Cascading Style Sheets&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.

class pygments.lexers.css.SassLexer
Short names:	sass
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.sass
MIME types:	text/x-sass
For Sass stylesheets.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.3.

class pygments.lexers.css.ScssLexer
Short names:	scss
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.scss
MIME types:	text/x-scss
For SCSS stylesheets.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;D languages

class pygments.lexers.d.CrocLexer
Short names:	croc
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.croc
MIME types:	text/x-crocsrc
For Croc source.

class pygments.lexers.d.DLexer
Short names:	d
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.d, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.di
MIME types:	text/x-dsrc
For D source.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.2.

class pygments.lexers.d.MiniDLexer
Short names:	minid
Filenames:	None
MIME types:	text/x-minidsrc
For MiniD source. MiniD is now known as Croc.

Pygments lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Dalvik VM-related languages

class pygments.lexers.dalvik.SmaliLexer
Short names:	smali
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.smali
MIME types:	text/smali
For Smali &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Android/Dalvik&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; assembly code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.6.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;data file format

class pygments.lexers.data.JsonLdLexer
Short names:	jsonld, json-ld
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.jsonld
MIME types:	application/ld+json
For JSON-LD linked data.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

class pygments.lexers.data.JsonLexer
Short names:	json
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.json
MIME types:	application/json
For JSON data structures.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.5.

class pygments.lexers.data.YamlLexer
Short names:	yaml
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.yaml, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.yml
MIME types:	text/x-yaml
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;YAML, a human-friendly data serialization language.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.11.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;diff/patch formats

class pygments.lexers.diff.DarcsPatchLexer
Short names:	dpatch
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.dpatch, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.darcspatch
MIME types:	None
DarcsPatchLexer is a lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the various versions of the darcs patch format. Examples of this format are derived by commands such as darcs annotate --patch and darcs send.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.10.

class pygments.lexers.diff.DiffLexer
Short names:	diff, udiff
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.diff, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.patch
MIME types:	text/x-diff, text/x-patch
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;unified or context-style diffs or patches.

Lexers &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; .net languages

class pygments.lexers.dotnet.BooLexer
Short names:	boo
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.boo
MIME types:	text/x-boo
For Boo &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

class pygments.lexers.dotnet.CSharpAspxLexer
Short names:	aspx-cs
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.aspx, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.asax, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.ascx, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.ashx, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.asmx, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.axd
MIME types:	None
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;highlighting C# within ASP.NET pages.

class pygments.lexers.dotnet.CSharpLexer
Short names:	csharp, c#
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.cs
MIME types:	text/x-csharp
For C# &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

Additional options accepted:

unicodelevel
Determines which Unicode characters this lexer allows &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;identifiers. The possible values are:

none – only the ASCII letters and numbers are allowed. This is the fastest selection.
basic – all Unicode characters from the specification except category Lo are allowed.
full – all Unicode characters as specified &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;the C# specs are allowed. Note that this means a considerable slowdown since the Lo category has more than 40,000 characters &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;it!
The default value is basic.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.8.

class pygments.lexers.dotnet.FSharpLexer
Short names:	fsharp
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.fs, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.fsi
MIME types:	text/x-fsharp
For the F# language &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;version 3.0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.

AAAAACK Strings http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/spec.html#_Toc335818775

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.5.

class pygments.lexers.dotnet.NemerleLexer
Short names:	nemerle
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.n
MIME types:	text/x-nemerle
For Nemerle &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

Additional options accepted:

unicodelevel
Determines which Unicode characters this lexer allows &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;identifiers. The possible values are:

none – only the ASCII letters and numbers are allowed. This is the fastest selection.
basic – all Unicode characters from the specification except category Lo are allowed.
full – all Unicode characters as specified &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;the C# specs are allowed. Note that this means a considerable slowdown since the Lo category has more than 40,000 characters &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;it!
The default value is basic.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.5.

class pygments.lexers.dotnet.VbNetAspxLexer
Short names:	aspx-vb
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.aspx, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.asax, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.ascx, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.ashx, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.asmx, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.axd
MIME types:	None
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;highlighting Visual Basic.net within ASP.NET pages.

class pygments.lexers.dotnet.VbNetLexer
Short names:	vb.net, vbnet
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.vb, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.bas
MIME types:	text/x-vbnet, text/x-vba
For Visual Basic.NET &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;various domain-specific languages

class pygments.lexers.dsls.AlloyLexer
Short names:	alloy
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.als
MIME types:	text/x-alloy
For Alloy &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

class pygments.lexers.dsls.BroLexer
Short names:	bro
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.bro
MIME types:	None
For Bro scripts.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.5.

class pygments.lexers.dsls.MscgenLexer
Short names:	mscgen, msc
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.msc
MIME types:	None
For Mscgen files.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.6.

class pygments.lexers.dsls.PanLexer
Short names:	pan
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.pan
MIME types:	None
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;pan &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;files.

Based on tcsh lexer.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

class pygments.lexers.dsls.ProtoBufLexer
Short names:	protobuf, proto
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.proto
MIME types:	None
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Protocol Buffer definition files.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.4.

class pygments.lexers.dsls.PuppetLexer
Short names:	puppet
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.pp
MIME types:	None
For Puppet configuration DSL.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.6.

class pygments.lexers.dsls.RslLexer
Short names:	rsl
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.rsl
MIME types:	text/rsl
RSL is the formal specification language used &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;RAISE &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Rigorous Approach to Industrial Software Engineering&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; method.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

class pygments.lexers.dsls.VGLLexer
Short names:	vgl
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.rpf
MIME types:	None
For SampleManager VGL &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.6.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the Dylan language

class pygments.lexers.dylan.DylanConsoleLexer
Short names:	dylan-console, dylan-repl
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.dylan-console
MIME types:	text/x-dylan-console
For Dylan interactive console output like:

? &lt;span class=&quot;nb&quot;&gt;let &lt;/span&gt;a &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 1;
&lt;span class=&quot;gp&quot;&gt;=&amp;gt; &lt;/span&gt;1
? a
&lt;span class=&quot;gp&quot;&gt;=&amp;gt; &lt;/span&gt;1
This is based on a copy of the RubyConsoleLexer.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.6.

class pygments.lexers.dylan.DylanLexer
Short names:	dylan
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.dylan, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.dyl, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.intr
MIME types:	text/x-dylan
For the Dylan language.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.7.

class pygments.lexers.dylan.DylanLidLexer
Short names:	dylan-lid, lid
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.lid, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.hdp
MIME types:	text/x-dylan-lid
For Dylan LID &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Library Interchange Definition&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; files.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.6.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the ECL language

class pygments.lexers.ecl.ECLLexer
Short names:	ecl
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.ecl
MIME types:	application/x-ecl
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the declarative big-data ECL language.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.5.

Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the Eiffel language

class pygments.lexers.eiffel.EiffelLexer
Short names:	eiffel
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.e
MIME types:	text/x-eiffel
For Eiffel &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Erlang

class pygments.lexers.erlang.ElixirConsoleLexer
Short names:	iex
Filenames:	None
MIME types:	text/x-elixir-shellsession
For Elixir interactive console &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;iex&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; output like:

&lt;span class=&quot;gp&quot;&gt;iex&amp;gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;head | tail] &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1,2,3]
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1,2,3]
&lt;span class=&quot;gp&quot;&gt;iex&amp;gt; &lt;/span&gt;head
1
&lt;span class=&quot;gp&quot;&gt;iex&amp;gt; &lt;/span&gt;tail
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2,3]
&lt;span class=&quot;gp&quot;&gt;iex&amp;gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;head | tail]
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1,2,3]
&lt;span class=&quot;gp&quot;&gt;iex&amp;gt; &lt;/span&gt;length &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;head | tail]
3
New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.5.

class pygments.lexers.erlang.ElixirLexer
Short names:	elixir, ex, exs
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.ex, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.exs
MIME types:	text/x-elixir
For the Elixir language.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.5.

class pygments.lexers.erlang.ErlangLexer
Short names:	erlang
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.erl, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.hrl, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.es, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.escript
MIME types:	text/x-erlang
For the Erlang functional programming language.

Blame Jeremy Thurgood &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;http://jerith.za.net/&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.9.

class pygments.lexers.erlang.ErlangShellLexer
Short names:	erl
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.erl-sh
MIME types:	text/x-erl-shellsession
Shell sessions &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;erl &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Erlang code&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.1.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;esoteric languages

class pygments.lexers.esoteric.BefungeLexer
Short names:	befunge
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.befunge
MIME types:	application/x-befunge
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the esoteric Befunge language.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.7.

class pygments.lexers.esoteric.BrainfuckLexer
Short names:	brainfuck, bf
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.bf, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.b
MIME types:	application/x-brainfuck
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the esoteric BrainFuck language.

class pygments.lexers.esoteric.RedcodeLexer
Short names:	redcode
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.cw
MIME types:	None
A simple Redcode lexer based on ICWS‘94. Contributed by Adam Blinkinsop &amp;lt;blinks@acm.org&amp;gt;.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.8.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the Factor language

class pygments.lexers.factor.FactorLexer
Short names:	factor
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.factor
MIME types:	text/x-factor
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the Factor language.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.4.

Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the Fantom language

class pygments.lexers.fantom.FantomLexer
Short names:	fan
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.fan
MIME types:	application/x-fantom
For Fantom &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.5.

Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the Felix language

class pygments.lexers.felix.FelixLexer
Short names:	felix, flx
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.flx, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.flxh
MIME types:	text/x-felix
For Felix &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.2.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Fortran languages

class pygments.lexers.fortran.FortranLexer
Short names:	fortran
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.f, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.f90, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.F, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.F90
MIME types:	text/x-fortran
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;FORTRAN 90 code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.10.

Simple lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Microsoft Visual FoxPro &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code

class pygments.lexers.foxpro.FoxProLexer
Short names:	foxpro, vfp, clipper, xbase
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.PRG, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.prg
MIME types:	None
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Microsoft Visual FoxPro language.

FoxPro syntax allows to shorten all keywords and &lt;span class=&quot;k&quot;&gt;function &lt;/span&gt;names to 4 characters. Shortened forms are not recognized by this lexer.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.6.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the Google Go language

class pygments.lexers.go.GoLexer
Short names:	go
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.go
MIME types:	text/x-gosrc
For Go source.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.2.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;graph query languages

class pygments.lexers.graph.CypherLexer
Short names:	cypher
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.cyp, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.cypher
MIME types:	None
For Cypher Query Language

For the Cypher version &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;Neo4J 2.0

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;computer graphics and plotting related languages

class pygments.lexers.graphics.AsymptoteLexer
Short names:	asy, asymptote
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.asy
MIME types:	text/x-asymptote
For Asymptote &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.2.

class pygments.lexers.graphics.GLShaderLexer
Short names:	glsl
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.vert, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.frag, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.geo
MIME types:	text/x-glslsrc
GLSL &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;OpenGL Shader&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; lexer.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.1.

class pygments.lexers.graphics.GnuplotLexer
Short names:	gnuplot
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.plot, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.plt
MIME types:	text/x-gnuplot
For Gnuplot plotting scripts.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.11.

class pygments.lexers.graphics.PostScriptLexer
Short names:	postscript, postscr
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.ps, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.eps
MIME types:	application/postscript
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;PostScript files.

The PostScript Language Reference published by Adobe at &amp;lt;http://partners.adobe.com/public/developer/en/ps/PLRM.pdf&amp;gt; is the authority &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;this.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.4.

class pygments.lexers.graphics.PovrayLexer
Short names:	pov
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.pov, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.inc
MIME types:	text/x-povray
For Persistence of Vision Raytracer files.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.11.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Haskell and related languages

class pygments.lexers.haskell.AgdaLexer
Short names:	agda
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.agda
MIME types:	text/x-agda
For the Agda dependently typed functional programming language and proof assistant.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

class pygments.lexers.haskell.CryptolLexer
Short names:	cryptol, cry
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.cry
MIME types:	text/x-cryptol
FIXME: A Cryptol2 lexer based on the lexemes defined &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;the Haskell 98 Report.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

class pygments.lexers.haskell.HaskellLexer
Short names:	haskell, hs
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.hs
MIME types:	text/x-haskell
A Haskell lexer based on the lexemes defined &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;the Haskell 98 Report.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.8.

class pygments.lexers.haskell.IdrisLexer
Short names:	idris, idr
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.idr
MIME types:	text/x-idris
A lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the dependently typed programming language Idris.

Based on the Haskell and Agda Lexer.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

class pygments.lexers.haskell.KokaLexer
Short names:	koka
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.kk, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.kki
MIME types:	text/x-koka
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the Koka language.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.6.

class pygments.lexers.haskell.LiterateAgdaLexer
Short names:	lagda, literate-agda
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.lagda
MIME types:	text/x-literate-agda
For Literate Agda source.

Additional options accepted:

litstyle
If given, must be &lt;span class=&quot;s2&quot;&gt;&quot;bird&quot;&lt;/span&gt; or &lt;span class=&quot;s2&quot;&gt;&quot;latex&quot;&lt;/span&gt;. If not given, the style is autodetected: &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;the first non-whitespace character &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;the &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;is a backslash or percent character, LaTeX is assumed, &lt;span class=&quot;k&quot;&gt;else &lt;/span&gt;Bird.
New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

class pygments.lexers.haskell.LiterateCryptolLexer
Short names:	lcry, literate-cryptol, lcryptol
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.lcry
MIME types:	text/x-literate-cryptol
For Literate Cryptol &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Bird-style or LaTeX&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; source.

Additional options accepted:

litstyle
If given, must be &lt;span class=&quot;s2&quot;&gt;&quot;bird&quot;&lt;/span&gt; or &lt;span class=&quot;s2&quot;&gt;&quot;latex&quot;&lt;/span&gt;. If not given, the style is autodetected: &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;the first non-whitespace character &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;the &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;is a backslash or percent character, LaTeX is assumed, &lt;span class=&quot;k&quot;&gt;else &lt;/span&gt;Bird.
New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

class pygments.lexers.haskell.LiterateHaskellLexer
Short names:	lhs, literate-haskell, lhaskell
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.lhs
MIME types:	text/x-literate-haskell
For Literate Haskell &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Bird-style or LaTeX&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; source.

Additional options accepted:

litstyle
If given, must be &lt;span class=&quot;s2&quot;&gt;&quot;bird&quot;&lt;/span&gt; or &lt;span class=&quot;s2&quot;&gt;&quot;latex&quot;&lt;/span&gt;. If not given, the style is autodetected: &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;the first non-whitespace character &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;the &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;is a backslash or percent character, LaTeX is assumed, &lt;span class=&quot;k&quot;&gt;else &lt;/span&gt;Bird.
New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.9.

class pygments.lexers.haskell.LiterateIdrisLexer
Short names:	lidr, literate-idris, lidris
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.lidr
MIME types:	text/x-literate-idris
For Literate Idris &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Bird-style or LaTeX&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; source.

Additional options accepted:

litstyle
If given, must be &lt;span class=&quot;s2&quot;&gt;&quot;bird&quot;&lt;/span&gt; or &lt;span class=&quot;s2&quot;&gt;&quot;latex&quot;&lt;/span&gt;. If not given, the style is autodetected: &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;the first non-whitespace character &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;the &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;is a backslash or percent character, LaTeX is assumed, &lt;span class=&quot;k&quot;&gt;else &lt;/span&gt;Bird.
New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Haxe and related stuff

class pygments.lexers.haxe.HaxeLexer
Short names:	hx, haxe, hxsl
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.hx, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.hxsl
MIME types:	text/haxe, text/x-haxe, text/x-hx
For Haxe &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;http://haxe.org/&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.3.

class pygments.lexers.haxe.HxmlLexer
Short names:	haxeml, hxml
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.hxml
MIME types:	None
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;haXe build files.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.6.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;hardware descriptor languages

class pygments.lexers.hdl.SystemVerilogLexer
Short names:	systemverilog, sv
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.sv, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.svh
MIME types:	text/x-systemverilog
Extends verilog lexer to recognise all SystemVerilog keywords from IEEE 1800-2009 standard.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.5.

class pygments.lexers.hdl.VerilogLexer
Short names:	verilog, v
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.v
MIME types:	text/x-verilog
For verilog &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code with preprocessor directives.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.4.

class pygments.lexers.hdl.VhdlLexer
Short names:	vhdl
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.vhdl, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.vhd
MIME types:	text/x-vhdl
For VHDL &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.5.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;HTML, XML and related markup

class pygments.lexers.html.DtdLexer
Short names:	dtd
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.dtd
MIME types:	application/xml-dtd
A lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;DTDs &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Document Type Definitions&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.5.

class pygments.lexers.html.HamlLexer
Short names:	haml
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.haml
MIME types:	text/x-haml
For Haml markup.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.3.

class pygments.lexers.html.HtmlLexer
Short names:	html
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.html, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.htm, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.xhtml, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.xslt
MIME types:	text/html, application/xhtml+xml
For HTML 4 and XHTML 1 markup. Nested JavaScript and CSS is highlighted by the appropriate lexer.

class pygments.lexers.html.JadeLexer
Short names:	jade
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.jade
MIME types:	text/x-jade
For Jade markup. Jade is a variant of Scaml, see: http://scalate.fusesource.org/documentation/scaml-reference.html

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.4.

class pygments.lexers.html.ScamlLexer
Short names:	scaml
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.scaml
MIME types:	text/x-scaml
For Scaml markup. Scaml is Haml &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Scala.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.4.

class pygments.lexers.html.XmlLexer
Short names:	xml
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.xml, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.xsl, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.rss, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.xslt, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.xsd, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.wsdl, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.wsf
MIME types:	text/xml, application/xml, image/svg+xml, application/rss+xml, application/atom+xml
Generic lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;XML &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;eXtensible Markup Language&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.

class pygments.lexers.html.XsltLexer
Short names:	xslt
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.xsl, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.xslt, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.xpl
MIME types:	application/xsl+xml, application/xslt+xml
A lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;XSLT.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.10.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;IDL

class pygments.lexers.idl.IDLLexer
Short names:	idl
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.pro
MIME types:	text/idl
Pygments Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;IDL &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Interactive Data Language&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.6.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Igor Pro

class pygments.lexers.igor.IgorLexer
Short names:	igor, igorpro
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.ipf
MIME types:	text/ipf
Pygments Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Igor Pro procedure files &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;.ipf&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;. See http://www.wavemetrics.com/ and http://www.igorexchange.com/.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Inferno os and all the related stuff

class pygments.lexers.inferno.LimboLexer
Short names:	limbo
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.b
MIME types:	text/limbo
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Limbo programming language

TODO:
maybe implement better var declaration highlighting
some simple syntax error highlighting
New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;installer/packager DSLs and formats

class pygments.lexers.installers.DebianControlLexer
Short names:	control, debcontrol
Filenames:	control
MIME types:	None
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Debian control files and apt-cache show &amp;lt;pkg&amp;gt; outputs.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.9.

class pygments.lexers.installers.NSISLexer
Short names:	nsis, nsi, nsh
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.nsi, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.nsh
MIME types:	text/x-nsis
For NSIS scripts.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.6.

class pygments.lexers.installers.RPMSpecLexer
Short names:	spec
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.spec
MIME types:	text/x-rpm-spec
For RPM .spec files.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.6.

class pygments.lexers.installers.SourcesListLexer
Short names:	sourceslist, sources.list, debsources
Filenames:	sources.list
MIME types:	None
Lexer that highlights debian sources.list files.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.7.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;interactive fiction languages

class pygments.lexers.int_fiction.Inform6Lexer
Short names:	inform6, i6
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.inf
MIME types:	None
For Inform 6 &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

class pygments.lexers.int_fiction.Inform6TemplateLexer
Short names:	i6t
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.i6t
MIME types:	None
For Inform 6 template code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

class pygments.lexers.int_fiction.Inform7Lexer
Short names:	inform7, i7
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.ni, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.i7x
MIME types:	None
For Inform 7 &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

class pygments.lexers.int_fiction.Tads3Lexer
Short names:	tads3
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.t
MIME types:	None
For TADS 3 &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the Io language

class pygments.lexers.iolang.IoLexer
Short names:	io
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.io
MIME types:	text/x-iosrc
For Io &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;a small, prototype-based programming language&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; source.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.10.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;JavaScript and related languages

class pygments.lexers.javascript.CoffeeScriptLexer
Short names:	coffee-script, coffeescript, coffee
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.coffee
MIME types:	text/coffeescript
For CoffeeScript &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.3.

class pygments.lexers.javascript.DartLexer
Short names:	dart
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.dart
MIME types:	text/x-dart
For Dart &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.5.

class pygments.lexers.javascript.JavascriptLexer
Short names:	js, javascript
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.js
MIME types:	application/javascript, application/x-javascript, text/x-javascript, text/javascript
For JavaScript &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

class pygments.lexers.javascript.KalLexer
Short names:	kal
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.kal
MIME types:	text/kal, application/kal
For Kal &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

class pygments.lexers.javascript.LassoLexer
Short names:	lasso, lassoscript
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.lasso, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.lasso[89]
MIME types:	text/x-lasso
For Lasso &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code, covering both Lasso 9 syntax and LassoScript &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Lasso 8.6 and earlier. For Lasso embedded &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;HTML, use the LassoHtmlLexer.

Additional options accepted:

builtinshighlighting
If given and True, highlight &lt;span class=&quot;nb&quot;&gt;builtin &lt;/span&gt;types, traits, methods, and members &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;default: True&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.
requiredelimiters
If given and True, only highlight code between delimiters as Lasso &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;default: False&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.
New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.6.

class pygments.lexers.javascript.LiveScriptLexer
Short names:	live-script, livescript
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.ls
MIME types:	text/livescript
For LiveScript &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.6.

class pygments.lexers.javascript.MaskLexer
Short names:	mask
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.mask
MIME types:	text/x-mask
For Mask markup.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

class pygments.lexers.javascript.ObjectiveJLexer
Short names:	objective-j, objectivej, obj-j, objj
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.j
MIME types:	text/x-objective-j
For Objective-J &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code with preprocessor directives.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.3.

class pygments.lexers.javascript.TypeScriptLexer
Short names:	ts
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.ts
MIME types:	text/x-typescript
For TypeScript &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.6.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the Julia language

class pygments.lexers.julia.JuliaConsoleLexer
Short names:	jlcon
Filenames:	None
MIME types:	None
For Julia console sessions. Modeled after MatlabSessionLexer.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.6.

class pygments.lexers.julia.JuliaLexer
Short names:	julia, jl
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.jl
MIME types:	text/x-julia, application/x-julia
For Julia &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.6.

Pygments lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;JVM languages

class pygments.lexers.jvm.AspectJLexer
Short names:	aspectj
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.aj
MIME types:	text/x-aspectj
For AspectJ &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.6.

class pygments.lexers.jvm.CeylonLexer
Short names:	ceylon
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.ceylon
MIME types:	text/x-ceylon
For Ceylon &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.6.

class pygments.lexers.jvm.ClojureLexer
Short names:	clojure, clj
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.clj
MIME types:	text/x-clojure, application/x-clojure
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Clojure &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.11.

class pygments.lexers.jvm.ClojureScriptLexer
Short names:	clojurescript, cljs
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.cljs
MIME types:	text/x-clojurescript, application/x-clojurescript
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;ClojureScript &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

class pygments.lexers.jvm.GoloLexer
Short names:	golo
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.golo
MIME types:	None
For Golo &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

class pygments.lexers.jvm.GosuLexer
Short names:	gosu
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.gs, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.gsx, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.gsp, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.vark
MIME types:	text/x-gosu
For Gosu &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.5.

class pygments.lexers.jvm.GosuTemplateLexer
Short names:	gst
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.gst
MIME types:	text/x-gosu-template
For Gosu templates.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.5.

class pygments.lexers.jvm.GroovyLexer
Short names:	groovy
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.groovy
MIME types:	text/x-groovy
For Groovy &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.5.

class pygments.lexers.jvm.IokeLexer
Short names:	ioke, ik
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.ik
MIME types:	text/x-iokesrc
For Ioke &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;a strongly typed, dynamic, prototype based programming language&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; source.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.4.

class pygments.lexers.jvm.JasminLexer
Short names:	jasmin, jasminxt
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.j
MIME types:	None
For Jasmin assembly code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

class pygments.lexers.jvm.JavaLexer
Short names:	java
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.java
MIME types:	text/x-java
For Java &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

class pygments.lexers.jvm.KotlinLexer
Short names:	kotlin
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.kt
MIME types:	text/x-kotlin
For Kotlin &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.5.

class pygments.lexers.jvm.PigLexer
Short names:	pig
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.pig
MIME types:	text/x-pig
For Pig Latin &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

class pygments.lexers.jvm.ScalaLexer
Short names:	scala
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.scala
MIME types:	text/x-scala
For Scala &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

class pygments.lexers.jvm.XtendLexer
Short names:	xtend
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.xtend
MIME types:	text/x-xtend
For Xtend &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.6.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Lispy languages

class pygments.lexers.lisp.CommonLispLexer
Short names:	common-lisp, cl, lisp, elisp, emacs, emacs-lisp
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.cl, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.lisp, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.el
MIME types:	text/x-common-lisp
A Common Lisp lexer.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.9.

class pygments.lexers.lisp.HyLexer
Short names:	hylang
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.hy
MIME types:	text/x-hy, application/x-hy
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Hy &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

class pygments.lexers.lisp.NewLispLexer
Short names:	newlisp
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.lsp, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.nl
MIME types:	text/x-newlisp, application/x-newlisp
For newLISP. &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;version 10.3.0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.5.

class pygments.lexers.lisp.RacketLexer
Short names:	racket, rkt
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.rkt, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.rktd, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.rktl
MIME types:	text/x-racket, application/x-racket
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Racket &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;formerly known as PLT Scheme&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.6.

class pygments.lexers.lisp.SchemeLexer
Short names:	scheme, scm
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.scm, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.ss
MIME types:	text/x-scheme, application/x-scheme
A Scheme lexer, parsing a stream and outputting the tokens needed to highlight scheme code. This lexer could be most probably easily subclassed to parse other LISP-Dialects like Common Lisp, Emacs Lisp or AutoLisp.

This parser is checked with pastes from the LISP pastebin at http://paste.lisp.org/ to cover as much syntax as possible.

It supports the full Scheme syntax as defined &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;R5RS.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.6.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Makefiles and similar

class pygments.lexers.make.BaseMakefileLexer
Short names:	basemake
Filenames:	None
MIME types:	None
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;simple Makefiles &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;no preprocessing&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.10.

class pygments.lexers.make.CMakeLexer
Short names:	cmake
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.cmake, CMakeLists.txt
MIME types:	text/x-cmake
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;CMake files.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.2.

class pygments.lexers.make.MakefileLexer
Short names:	make, makefile, mf, bsdmake
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.mak, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.mk, Makefile, makefile, Makefile.&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;, GNUmakefile
MIME types:	text/x-makefile
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;BSD and GNU make extensions &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;lenient enough to handle both &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;the same file even&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.

Rewritten &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;Pygments 0.10.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;non-HTML markup languages

class pygments.lexers.markup.BBCodeLexer
Short names:	bbcode
Filenames:	None
MIME types:	text/x-bbcode
A lexer that highlights BBCode&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;-like&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; syntax.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.6.

class pygments.lexers.markup.GroffLexer
Short names:	groff, nroff, man
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.[1234567], &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.man
MIME types:	application/x-troff, text/troff
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;g&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;roff typesetting language, supporting groff extensions. Mainly useful &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;highlighting manpage sources.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.6.

class pygments.lexers.markup.MoinWikiLexer
Short names:	trac-wiki, moin
Filenames:	None
MIME types:	text/x-trac-wiki
For MoinMoin &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;and Trac&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Wiki markup.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.7.

class pygments.lexers.markup.MozPreprocCssLexer
Short names:	css+mozpreproc
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.css.in
MIME types:	None
Subclass of the MozPreprocHashLexer that highlights unlexed data with the CssLexer.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

class pygments.lexers.markup.MozPreprocHashLexer
Short names:	mozhashpreproc
Filenames:	None
MIME types:	None
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Mozilla Preprocessor files &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;with ‘#’ as the marker&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.

Other data is left untouched.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

class pygments.lexers.markup.MozPreprocJavascriptLexer
Short names:	javascript+mozpreproc
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.js.in
MIME types:	None
Subclass of the MozPreprocHashLexer that highlights unlexed data with the JavascriptLexer.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

class pygments.lexers.markup.MozPreprocPercentLexer
Short names:	mozpercentpreproc
Filenames:	None
MIME types:	None
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Mozilla Preprocessor files &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;with ‘%’ as the marker&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.

Other data is left untouched.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

class pygments.lexers.markup.MozPreprocXulLexer
Short names:	xul+mozpreproc
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.xul.in
MIME types:	None
Subclass of the MozPreprocHashLexer that highlights unlexed data with the XmlLexer.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

class pygments.lexers.markup.RstLexer
Short names:	rst, rest, restructuredtext
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.rst, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.rest
MIME types:	text/x-rst, text/prs.fallenstein.rst
For reStructuredText markup.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.7.

Additional options accepted:

handlecodeblocks
Highlight the contents of .. sourcecode:: language, .. code:: language and .. code-block:: language directives with a lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the given language &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;default: True&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.8.

class pygments.lexers.markup.TexLexer
Short names:	tex, latex
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.tex, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.aux, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.toc
MIME types:	text/x-tex, text/x-latex
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the TeX and LaTeX typesetting languages.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Matlab and related languages

class pygments.lexers.matlab.MatlabLexer
Short names:	matlab
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.m
MIME types:	text/matlab
For Matlab &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.10.

class pygments.lexers.matlab.MatlabSessionLexer
Short names:	matlabsession
Filenames:	None
MIME types:	None
For Matlab sessions. Modeled after PythonConsoleLexer. Contributed by Ken Schutte &amp;lt;kschutte@csail.mit.edu&amp;gt;.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.10.

class pygments.lexers.matlab.OctaveLexer
Short names:	octave
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.m
MIME types:	text/octave
For GNU Octave &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.5.

class pygments.lexers.matlab.ScilabLexer
Short names:	scilab
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.sci, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.sce, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.tst
MIME types:	text/scilab
For Scilab &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.5.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;ML family languages

class pygments.lexers.ml.OcamlLexer
Short names:	ocaml
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.ml, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.mli, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.mll, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.mly
MIME types:	text/x-ocaml
For the OCaml language.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.7.

class pygments.lexers.ml.OpaLexer
Short names:	opa
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.opa
MIME types:	text/x-opa
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the Opa language &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;http://opalang.org&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.5.

class pygments.lexers.ml.SMLLexer
Short names:	sml
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.sml, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.sig, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.fun
MIME types:	text/x-standardml, application/x-standardml
For the Standard ML language.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.5.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;modeling languages

class pygments.lexers.modeling.BugsLexer
Short names:	bugs, winbugs, openbugs
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.bug
MIME types:	None
Pygments Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;OpenBugs and WinBugs models.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.6.

class pygments.lexers.modeling.JagsLexer
Short names:	jags
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.jag, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.bug
MIME types:	None
Pygments Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;JAGS.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.6.

class pygments.lexers.modeling.ModelicaLexer
Short names:	modelica
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.mo
MIME types:	text/x-modelica
For Modelica &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.1.

class pygments.lexers.modeling.StanLexer
Short names:	stan
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.stan
MIME types:	None
Pygments Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Stan models.

The Stan modeling language is specified &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;the Stan Modeling Language User’s Guide and Reference Manual, v2.4.0, pdf.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.6.

Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the Nimrod language

class pygments.lexers.nimrod.NimrodLexer
Short names:	nimrod, nim
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.nim, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.nimrod
MIME types:	text/x-nimrod
For Nimrod &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.5.

Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the Nit language

class pygments.lexers.nit.NitLexer
Short names:	nit
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.nit
MIME types:	None
For nit source.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the NixOS Nix language

class pygments.lexers.nix.NixLexer
Short names:	nixos, nix
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.nix
MIME types:	text/x-nix
For the Nix language.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Objective-C family languages

class pygments.lexers.objective.LogosLexer
Short names:	logos
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.x, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.xi, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.xm, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.xmi
MIME types:	text/x-logos
For Logos + Objective-C &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code with preprocessor directives.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.6.

class pygments.lexers.objective.ObjectiveCLexer
Short names:	objective-c, objectivec, obj-c, objc
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.m, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.h
MIME types:	text/x-objective-c
For Objective-C &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code with preprocessor directives.

class pygments.lexers.objective.ObjectiveCppLexer
Short names:	objective-c++, objectivec++, obj-c++, objc++
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.mm, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.hh
MIME types:	text/x-objective-c++
For Objective-C++ &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code with preprocessor directives.

class pygments.lexers.objective.SwiftLexer
Short names:	swift
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.swift
MIME types:	text/x-swift
For Swift source.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the Ooc language

class pygments.lexers.ooc.OocLexer
Short names:	ooc
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.ooc
MIME types:	text/x-ooc
For Ooc &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.2.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;parser generators

class pygments.lexers.parsers.AntlrActionScriptLexer
Short names:	antlr-as, antlr-actionscript
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.G, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.g
MIME types:	None
ANTLR with ActionScript Target

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.1.

class pygments.lexers.parsers.AntlrCSharpLexer
Short names:	antlr-csharp, antlr-c#
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.G, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.g
MIME types:	None
ANTLR with C# Target

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.1.

class pygments.lexers.parsers.AntlrCppLexer
Short names:	antlr-cpp
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.G, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.g
MIME types:	None
ANTLR with CPP Target

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.1.

class pygments.lexers.parsers.AntlrJavaLexer
Short names:	antlr-java
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.G, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.g
MIME types:	None
ANTLR with Java Target

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1..

class pygments.lexers.parsers.AntlrLexer
Short names:	antlr
Filenames:	None
MIME types:	None
Generic ANTLR Lexer. Should not be called directly, instead use DelegatingLexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;your target language.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.1.

class pygments.lexers.parsers.AntlrObjectiveCLexer
Short names:	antlr-objc
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.G, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.g
MIME types:	None
ANTLR with Objective-C Target

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.1.

class pygments.lexers.parsers.AntlrPerlLexer
Short names:	antlr-perl
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.G, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.g
MIME types:	None
ANTLR with Perl Target

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.1.

class pygments.lexers.parsers.AntlrPythonLexer
Short names:	antlr-python
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.G, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.g
MIME types:	None
ANTLR with Python Target

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.1.

class pygments.lexers.parsers.AntlrRubyLexer
Short names:	antlr-ruby, antlr-rb
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.G, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.g
MIME types:	None
ANTLR with Ruby Target

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.1.

class pygments.lexers.parsers.EbnfLexer
Short names:	ebnf
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.ebnf
MIME types:	text/x-ebnf
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;ISO/IEC 14977 EBNF grammars.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

class pygments.lexers.parsers.RagelCLexer
Short names:	ragel-c
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.rl
MIME types:	None
A lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Ragel &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;a C host file.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.1.

class pygments.lexers.parsers.RagelCppLexer
Short names:	ragel-cpp
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.rl
MIME types:	None
A lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Ragel &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;a CPP host file.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.1.

class pygments.lexers.parsers.RagelDLexer
Short names:	ragel-d
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.rl
MIME types:	None
A lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Ragel &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;a D host file.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.1.

class pygments.lexers.parsers.RagelEmbeddedLexer
Short names:	ragel-em
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.rl
MIME types:	None
A lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Ragel embedded &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;a host language file.

This will only highlight Ragel statements. If you want host language highlighting &lt;span class=&quot;k&quot;&gt;then &lt;/span&gt;call the language-specific Ragel lexer.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.1.

class pygments.lexers.parsers.RagelJavaLexer
Short names:	ragel-java
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.rl
MIME types:	None
A lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Ragel &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;a Java host file.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.1.

class pygments.lexers.parsers.RagelLexer
Short names:	ragel
Filenames:	None
MIME types:	None
A pure Ragel lexer. Use this &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;fragments of Ragel. For .rl files, use RagelEmbeddedLexer instead &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;or one of the language-specific subclasses&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.1.

class pygments.lexers.parsers.RagelObjectiveCLexer
Short names:	ragel-objc
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.rl
MIME types:	None
A lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Ragel &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;an Objective C host file.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.1.

class pygments.lexers.parsers.RagelRubyLexer
Short names:	ragel-ruby, ragel-rb
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.rl
MIME types:	None
A lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Ragel &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;a Ruby host file.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.1.

class pygments.lexers.parsers.TreetopLexer
Short names:	treetop
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.treetop, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.tt
MIME types:	None
A lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Treetop grammars.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.6.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Pascal family languages

class pygments.lexers.pascal.AdaLexer
Short names:	ada, ada95, ada2005
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.adb, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.ads, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.ada
MIME types:	text/x-ada
For Ada &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.3.

class pygments.lexers.pascal.DelphiLexer
Short names:	delphi, pas, pascal, objectpascal
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.pas
MIME types:	text/x-pascal
For Delphi &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Borland Object Pascal&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, Turbo Pascal and Free Pascal &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

Additional options accepted:

turbopascal
Highlight Turbo Pascal specific keywords &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;default: True&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.
delphi
Highlight Borland Delphi specific keywords &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;default: True&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.
freepascal
Highlight Free Pascal specific keywords &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;default: True&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.
units
A list of units that should be considered &lt;span class=&quot;nb&quot;&gt;builtin&lt;/span&gt;, supported are System, SysUtils, Classes and Math. Default is to consider all of them builtin.
class pygments.lexers.pascal.Modula2Lexer
Short names:	modula2, m2
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.def, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.mod
MIME types:	text/x-modula2
For Modula-2 &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

Additional options that determine which keywords are highlighted:

pim
Select PIM Modula-2 dialect &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;default: True&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.
iso
Select ISO Modula-2 dialect &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;default: False&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.
objm2
Select Objective Modula-2 dialect &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;default: False&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.
gm2ext
Also highlight GNU extensions &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;default: False&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.
New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.3.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the Pawn languages

class pygments.lexers.pawn.PawnLexer
Short names:	pawn
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.p, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.pwn, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.inc
MIME types:	text/x-pawn
For Pawn &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

class pygments.lexers.pawn.SourcePawnLexer
Short names:	sp
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.sp
MIME types:	text/x-sourcepawn
For SourcePawn &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code with preprocessor directives.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.6.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Perl and related languages

class pygments.lexers.perl.Perl6Lexer
Short names:	perl6, pl6
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.pl, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.pm, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.nqp, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.p6, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.6pl, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.p6l, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.pl6, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.6pm, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.p6m, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.pm6, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.t
MIME types:	text/x-perl6, application/x-perl6
For Perl 6 &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

class pygments.lexers.perl.PerlLexer
Short names:	perl, pl
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.pl, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.pm, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.t
MIME types:	text/x-perl, application/x-perl
For Perl &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;PHP and related languages

class pygments.lexers.php.PhpLexer
Short names:	php, php3, php4, php5
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.php, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.php[345], &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.inc
MIME types:	text/x-php
For PHP &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code. For PHP embedded &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;HTML, use the HtmlPhpLexer.

Additional options accepted:

startinline
If given and True the lexer starts highlighting with php code &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;i.e.: no starting &amp;lt;?php required&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;. The default is False.
funcnamehighlighting
If given and True, highlight &lt;span class=&quot;nb&quot;&gt;builtin &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;function &lt;/span&gt;names &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;default: True&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.
disabledmodules
If given, must be a list of module names whose &lt;span class=&quot;k&quot;&gt;function &lt;/span&gt;names should not be highlighted. By default all modules are highlighted except the special &lt;span class=&quot;s1&quot;&gt;&#39;unknown&#39;&lt;/span&gt; module that includes functions that are known to php but are undocumented.

To get a list of allowed modules have a look into the _php_builtins module:

&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;from pygments.lexers._php_builtins import MODULES
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;MODULES.keys&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;PHP Options/Info&#39;&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;&#39;Zip&#39;&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;&#39;dba&#39;&lt;/span&gt;, ...]
In fact the names of those modules match the module names from the php documentation.

class pygments.lexers.php.ZephirLexer
Short names:	zephir
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.zep
MIME types:	None
For Zephir language &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

Zephir is a compiled high level language aimed to the creation of C-extensions &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;PHP.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Prolog and Prolog-like languages

class pygments.lexers.prolog.LogtalkLexer
Short names:	logtalk
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.lgt, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.logtalk
MIME types:	text/x-logtalk
For Logtalk &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.10.

class pygments.lexers.prolog.PrologLexer
Short names:	prolog
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.ecl, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.prolog, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.pro, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.pl
MIME types:	text/x-prolog
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Prolog files.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Python and related languages

class pygments.lexers.python.CythonLexer
Short names:	cython, pyx, pyrex
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.pyx, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.pxd, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.pxi
MIME types:	text/x-cython, application/x-cython
For Pyrex and Cython &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.1.

class pygments.lexers.python.DgLexer
Short names:	dg
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.dg
MIME types:	text/x-dg
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;dg, a functional and object-oriented programming language running on the CPython 3 VM.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.6.

class pygments.lexers.python.NumPyLexer
Short names:	numpy
Filenames:	None
MIME types:	None
A Python lexer recognizing Numerical Python builtins.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.10.

class pygments.lexers.python.Python3Lexer
Short names:	python3, py3
Filenames:	None
MIME types:	text/x-python3, application/x-python3
For Python &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;version 3.0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.10.

class pygments.lexers.python.Python3TracebackLexer
Short names:	py3tb
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.py3tb
MIME types:	text/x-python3-traceback
For Python 3.0 tracebacks, with support &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;chained exceptions.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.0.

class pygments.lexers.python.PythonConsoleLexer
Short names:	pycon
Filenames:	None
MIME types:	text/x-python-doctest
For Python console output or doctests, such as:

&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;a &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;foo&#39;&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;print a
foo
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;1 / 0
Traceback &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;most recent call last&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:
  File &lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;stdin&amp;gt;&quot;&lt;/span&gt;, line 1, &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &amp;lt;module&amp;gt;
ZeroDivisionError: integer division or modulo by zero
Additional options:

python3
Use Python 3 lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;code. Default is False.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.0.

class pygments.lexers.python.PythonLexer
Short names:	python, py, sage
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.py, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.pyw, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.sc, SConstruct, SConscript, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.tac, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.sage
MIME types:	text/x-python, application/x-python
For Python &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

class pygments.lexers.python.PythonTracebackLexer
Short names:	pytb
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.pytb
MIME types:	text/x-python-traceback
For Python tracebacks.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.7.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the R/S languages

class pygments.lexers.r.RConsoleLexer
Short names:	rconsole, rout
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.Rout
MIME types:	None
For R console transcripts or R CMD BATCH output files.

class pygments.lexers.r.RdLexer
Short names:	rd
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.Rd
MIME types:	text/x-r-doc
Pygments Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;R documentation &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Rd&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; files

This is a very minimal implementation, highlighting little more than the macros. A description of Rd syntax is found &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;Writing R Extensions and Parsing Rd files.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.6.

class pygments.lexers.r.SLexer
Short names:	splus, s, r
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.S, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.R, .Rhistory, .Rprofile, .Renviron
MIME types:	text/S-plus, text/S, text/x-r-source, text/x-r, text/x-R, text/x-r-history, text/x-r-profile
For S, S-plus, and R &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.10.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;semantic web and RDF query languages and markup

class pygments.lexers.rdf.SparqlLexer
Short names:	sparql
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.rq, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.sparql
MIME types:	application/sparql-query
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;SPARQL query language.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the REBOL and related languages

class pygments.lexers.rebol.RebolLexer
Short names:	rebol
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.r, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.r3, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.reb
MIME types:	text/x-rebol
A REBOL lexer.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.1.

class pygments.lexers.rebol.RedLexer
Short names:	red, red/system
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.red, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.reds
MIME types:	text/x-red, text/x-red-system
A Red-language lexer.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;resource definition files

class pygments.lexers.resource.ResourceLexer
Short names:	resource, resourcebundle
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.txt
MIME types:	None
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;ICU Resource bundles.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Robot Framework

class pygments.lexers.robotframework.RobotFrameworkLexer
Short names:	robotframework
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.txt, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.robot
MIME types:	text/x-robotframework
For Robot Framework &lt;span class=&quot;nb&quot;&gt;test &lt;/span&gt;data.

Supports both space and pipe separated plain text formats.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.6.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Ruby and related languages

class pygments.lexers.ruby.FancyLexer
Short names:	fancy, fy
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.fy, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.fancypack
MIME types:	text/x-fancysrc
Pygments Lexer For Fancy.

Fancy is a self-hosted, pure object-oriented, dynamic, class-based, concurrent general-purpose programming language running on Rubinius, the Ruby VM.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.5.

class pygments.lexers.ruby.RubyConsoleLexer
Short names:	rbcon, irb
Filenames:	None
MIME types:	text/x-ruby-shellsession
For Ruby interactive console &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;irb&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; output like:

&lt;span class=&quot;gp&quot;&gt;irb(main):001:0&amp;gt; &lt;/span&gt;a &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 1
&lt;span class=&quot;gp&quot;&gt;=&amp;gt; &lt;/span&gt;1
&lt;span class=&quot;gp&quot;&gt;irb(main):002:0&amp;gt; &lt;/span&gt;puts a
1
&lt;span class=&quot;gp&quot;&gt;=&amp;gt; &lt;/span&gt;nil
class pygments.lexers.ruby.RubyLexer
Short names:	rb, ruby, duby
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.rb, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.rbw, Rakefile, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.rake, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.gemspec, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.rbx, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.duby
MIME types:	text/x-ruby, application/x-ruby
For Ruby &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the Rust language

class pygments.lexers.rust.RustLexer
Short names:	rust
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.rs
MIME types:	text/x-rustsrc
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the Rust programming language &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;version 0.9&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.6.

Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;scripting and embedded languages

class pygments.lexers.scripting.AppleScriptLexer
Short names:	applescript
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.applescript
MIME types:	None
For AppleScript &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code, including AppleScript Studio. Contributed by Andreas Amann &amp;lt;aamann@mac.com&amp;gt;.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.0.

class pygments.lexers.scripting.ChaiscriptLexer
Short names:	chai, chaiscript
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.chai
MIME types:	text/x-chaiscript, application/x-chaiscript
For ChaiScript &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

class pygments.lexers.scripting.HybrisLexer
Short names:	hybris, hy
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.hy, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.hyb
MIME types:	text/x-hybris, application/x-hybris
For Hybris &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.4.

class pygments.lexers.scripting.LSLLexer
Short names:	lsl
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.lsl
MIME types:	text/x-lsl
For Second Life’s Linden Scripting Language &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

class pygments.lexers.scripting.LuaLexer
Short names:	lua
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.lua, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.wlua
MIME types:	text/x-lua, application/x-lua
For Lua &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

Additional options accepted:

func_name_highlighting
If given and True, highlight &lt;span class=&quot;nb&quot;&gt;builtin &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;function &lt;/span&gt;names &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;default: True&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.
disabled_modules
If given, must be a list of module names whose &lt;span class=&quot;k&quot;&gt;function &lt;/span&gt;names should not be highlighted. By default all modules are highlighted.

To get a list of allowed modules have a look into the _lua_builtins module:

&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;from pygments.lexers._lua_builtins import MODULES
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;MODULES.keys&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;string&#39;&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;&#39;coroutine&#39;&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;&#39;modules&#39;&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;&#39;io&#39;&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;&#39;basic&#39;&lt;/span&gt;, ...]
class pygments.lexers.scripting.MOOCodeLexer
Short names:	moocode, moo
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.moo
MIME types:	text/x-moocode
For MOOCode &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;the MOO scripting language&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.9.

class pygments.lexers.scripting.MoonScriptLexer
Short names:	moon, moonscript
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.moon
MIME types:	text/x-moonscript, application/x-moonscript
For MoonScript &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.5.

class pygments.lexers.scripting.RexxLexer
Short names:	rexx, arexx
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.rexx, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.rex, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.rx, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.arexx
MIME types:	text/x-rexx
Rexx is a scripting language available &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;a wide range of different platforms with its roots found on mainframe systems. It is popular &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;I/O- and data based tasks and can act as glue language to &lt;span class=&quot;nb&quot;&gt;bind &lt;/span&gt;different applications together.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;various shells

class pygments.lexers.shell.BashLexer
Short names:	bash, sh, ksh, shell
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.sh, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.ksh, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.bash, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.ebuild, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.eclass, .bashrc, bashrc, .bash&lt;span class=&quot;se&quot;&gt;\*&lt;/span&gt;, bash&lt;span class=&quot;se&quot;&gt;\*&lt;/span&gt;, PKGBUILD
MIME types:	application/x-sh, application/x-shellscript
Lexer &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ba|k|&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;sh shell scripts.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.6.

class pygments.lexers.shell.BashSessionLexer
Short names:	console
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.sh-session
MIME types:	application/x-shell-session
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;simplistic shell sessions.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.1.

class pygments.lexers.shell.BatchLexer
Short names:	bat, batch, dosbatch, winbatch
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.bat, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.cmd
MIME types:	application/x-dos-batch
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the DOS/Windows Batch file format.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.7.

class pygments.lexers.shell.PowerShellLexer
Short names:	powershell, posh, ps1, psm1
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.ps1, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.psm1
MIME types:	text/x-powershell
For Windows PowerShell code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.5.

class pygments.lexers.shell.ShellSessionLexer
Short names:	shell-session
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.shell-session
MIME types:	application/x-sh-session
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;shell sessions that works with different &lt;span class=&quot;nb&quot;&gt;command &lt;/span&gt;prompts

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.6.

class pygments.lexers.shell.TcshLexer
Short names:	tcsh, csh
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.tcsh, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.csh
MIME types:	application/x-csh
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;tcsh scripts.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.10.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Smalltalk and related languages

class pygments.lexers.smalltalk.NewspeakLexer
Short names:	newspeak
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.ns2
MIME types:	text/x-newspeak
For Newspeak &amp;lt;http://newspeaklanguage.org/&amp;gt; syntax.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.1.

class pygments.lexers.smalltalk.SmalltalkLexer
Short names:	smalltalk, squeak, st
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.st
MIME types:	text/x-smalltalk
For Smalltalk syntax. Contributed by Stefan Matthias Aust. Rewritten by Nils Winter.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.10.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the SNOBOL language

class pygments.lexers.snobol.SnobolLexer
Short names:	snobol
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.snobol
MIME types:	text/x-snobol
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the SNOBOL4 programming language.

Recognizes the common ASCII equivalents of the original SNOBOL4 operators. Does not require spaces around binary operators.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.5.

Special lexers

class pygments.lexers.special.RawTokenLexer
Short names:	raw
Filenames:	None
MIME types:	application/x-pygments-tokens
Recreate a token stream formatted with the RawTokenFormatter. This lexer raises exceptions during parsing &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;the token stream &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;the file is malformed.

Additional options accepted:

compress
If &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;to &lt;span class=&quot;s2&quot;&gt;&quot;gz&quot;&lt;/span&gt; or &lt;span class=&quot;s2&quot;&gt;&quot;bz2&quot;&lt;/span&gt;, decompress the token stream with the given compression algorithm before lexing &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;default: &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.
class pygments.lexers.special.TextLexer
Short names:	text
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.txt
MIME types:	text/plain
“Null” lexer, doesn’t highlight anything.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;various SQL dialects and related interactive sessions

class pygments.lexers.sql.MySqlLexer
Short names:	mysql
Filenames:	None
MIME types:	text/x-mysql
Special lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;MySQL.

class pygments.lexers.sql.PlPgsqlLexer
Short names:	plpgsql
Filenames:	None
MIME types:	text/x-plpgsql
Handle the extra syntax &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;Pl/pgSQL language.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.5.

class pygments.lexers.sql.PostgresConsoleLexer
Short names:	psql, postgresql-console, postgres-console
Filenames:	None
MIME types:	text/x-postgresql-psql
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;psql sessions.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.5.

class pygments.lexers.sql.PostgresLexer
Short names:	postgresql, postgres
Filenames:	None
MIME types:	text/x-postgresql
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the PostgreSQL dialect of SQL.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.5.

class pygments.lexers.sql.RqlLexer
Short names:	rql
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.rql
MIME types:	text/x-rql
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Relation Query Language.

RQL

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

class pygments.lexers.sql.SqlLexer
Short names:	sql
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.sql
MIME types:	text/x-sql
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Structured Query Language. Currently, this lexer does not recognize any special syntax except ANSI SQL.

class pygments.lexers.sql.SqliteConsoleLexer
Short names:	sqlite3
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.sqlite3-console
MIME types:	text/x-sqlite3-console
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;example sessions using sqlite3.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.11.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Tcl and related languages

class pygments.lexers.tcl.TclLexer
Short names:	tcl
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.tcl, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.rvt
MIME types:	text/x-tcl, text/x-script.tcl, application/x-tcl
For Tcl &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.10.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;various template engines’ markup

class pygments.lexers.templates.CheetahHtmlLexer
Short names:	html+cheetah, html+spitfire, htmlcheetah
Filenames:	None
MIME types:	text/html+cheetah, text/html+spitfire
Subclass of the CheetahLexer that highlights unlexed data with the HtmlLexer.

class pygments.lexers.templates.CheetahJavascriptLexer
Short names:	js+cheetah, javascript+cheetah, js+spitfire, javascript+spitfire
Filenames:	None
MIME types:	application/x-javascript+cheetah, text/x-javascript+cheetah, text/javascript+cheetah, application/x-javascript+spitfire, text/x-javascript+spitfire, text/javascript+spitfire
Subclass of the CheetahLexer that highlights unlexed data with the JavascriptLexer.

class pygments.lexers.templates.CheetahLexer
Short names:	cheetah, spitfire
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.tmpl, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.spt
MIME types:	application/x-cheetah, application/x-spitfire
Generic cheetah templates lexer. Code that isn’t Cheetah markup is yielded as Token.Other. This also works &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;spitfire templates which use the same syntax.

class pygments.lexers.templates.CheetahXmlLexer
Short names:	xml+cheetah, xml+spitfire
Filenames:	None
MIME types:	application/xml+cheetah, application/xml+spitfire
Subclass of the CheetahLexer that highlights unlexed data with the XmlLexer.

class pygments.lexers.templates.ColdfusionCFCLexer
Short names:	cfc
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.cfc
MIME types:	None
Coldfusion markup/script components

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

class pygments.lexers.templates.ColdfusionHtmlLexer
Short names:	cfm
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.cfm, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.cfml
MIME types:	application/x-coldfusion
Coldfusion markup &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;html

class pygments.lexers.templates.ColdfusionLexer
Short names:	cfs
Filenames:	None
MIME types:	None
Coldfusion statements

class pygments.lexers.templates.CssDjangoLexer
Short names:	css+django, css+jinja
Filenames:	None
MIME types:	text/css+django, text/css+jinja
Subclass of the DjangoLexer that highlights unlexed data with the CssLexer.

class pygments.lexers.templates.CssErbLexer
Short names:	css+erb, css+ruby
Filenames:	None
MIME types:	text/css+ruby
Subclass of ErbLexer which highlights unlexed data with the CssLexer.

class pygments.lexers.templates.CssGenshiLexer
Short names:	css+genshitext, css+genshi
Filenames:	None
MIME types:	text/css+genshi
A lexer that highlights CSS definitions &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;genshi text templates.

class pygments.lexers.templates.CssPhpLexer
Short names:	css+php
Filenames:	None
MIME types:	text/css+php
Subclass of PhpLexer which highlights unmatched data with the CssLexer.

class pygments.lexers.templates.CssSmartyLexer
Short names:	css+smarty
Filenames:	None
MIME types:	text/css+smarty
Subclass of the SmartyLexer that highlights unlexed data with the CssLexer.

class pygments.lexers.templates.DjangoLexer
Short names:	django, jinja
Filenames:	None
MIME types:	application/x-django-templating, application/x-jinja
Generic django and jinja template lexer.

It just highlights django/jinja code between the preprocessor directives, other data is left untouched by the lexer.

class pygments.lexers.templates.ErbLexer
Short names:	erb
Filenames:	None
MIME types:	application/x-ruby-templating
Generic ERB &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Ruby Templating&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; lexer.

Just highlights ruby code between the preprocessor directives, other data is left untouched by the lexer.

All options are also forwarded to the RubyLexer.

class pygments.lexers.templates.EvoqueHtmlLexer
Short names:	html+evoque
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.html
MIME types:	text/html+evoque
Subclass of the EvoqueLexer that highlights unlexed data with the HtmlLexer.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.1.

class pygments.lexers.templates.EvoqueLexer
Short names:	evoque
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.evoque
MIME types:	application/x-evoque
For files using the Evoque templating system.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.1.

class pygments.lexers.templates.EvoqueXmlLexer
Short names:	xml+evoque
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.xml
MIME types:	application/xml+evoque
Subclass of the EvoqueLexer that highlights unlexed data with the XmlLexer.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.1.

class pygments.lexers.templates.GenshiLexer
Short names:	genshi, kid, xml+genshi, xml+kid
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.kid
MIME types:	application/x-genshi, application/x-kid
A lexer that highlights genshi and kid kid XML templates.

class pygments.lexers.templates.GenshiTextLexer
Short names:	genshitext
Filenames:	None
MIME types:	application/x-genshi-text, text/x-genshi
A lexer that highlights genshi text templates.

class pygments.lexers.templates.HandlebarsHtmlLexer
Short names:	html+handlebars
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.handlebars, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.hbs
MIME types:	text/html+handlebars, text/x-handlebars-template
Subclass of the HandlebarsLexer that highlights unlexed data with the HtmlLexer.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

class pygments.lexers.templates.HandlebarsLexer
Short names:	handlebars
Filenames:	None
MIME types:	None
Generic handlebars &amp;lt;http://handlebarsjs.com/&amp;gt; template lexer.

Highlights only the Handlebars template tags &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;stuff between &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;. Everything &lt;span class=&quot;k&quot;&gt;else &lt;/span&gt;is left &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;a delegating lexer.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

class pygments.lexers.templates.HtmlDjangoLexer
Short names:	html+django, html+jinja, htmldjango
Filenames:	None
MIME types:	text/html+django, text/html+jinja
Subclass of the DjangoLexer that highlights unlexed data with the HtmlLexer.

Nested Javascript and CSS is highlighted too.

class pygments.lexers.templates.HtmlGenshiLexer
Short names:	html+genshi, html+kid
Filenames:	None
MIME types:	text/html+genshi
A lexer that highlights genshi and kid kid HTML templates.

class pygments.lexers.templates.HtmlPhpLexer
Short names:	html+php
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.phtml
MIME types:	application/x-php, application/x-httpd-php, application/x-httpd-php3, application/x-httpd-php4, application/x-httpd-php5
Subclass of PhpLexer that highlights unhandled data with the HtmlLexer.

Nested Javascript and CSS is highlighted too.

class pygments.lexers.templates.HtmlSmartyLexer
Short names:	html+smarty
Filenames:	None
MIME types:	text/html+smarty
Subclass of the SmartyLexer that highlights unlexed data with the HtmlLexer.

Nested Javascript and CSS is highlighted too.

class pygments.lexers.templates.JavascriptDjangoLexer
Short names:	js+django, javascript+django, js+jinja, javascript+jinja
Filenames:	None
MIME types:	application/x-javascript+django, application/x-javascript+jinja, text/x-javascript+django, text/x-javascript+jinja, text/javascript+django, text/javascript+jinja
Subclass of the DjangoLexer that highlights unlexed data with the JavascriptLexer.

class pygments.lexers.templates.JavascriptErbLexer
Short names:	js+erb, javascript+erb, js+ruby, javascript+ruby
Filenames:	None
MIME types:	application/x-javascript+ruby, text/x-javascript+ruby, text/javascript+ruby
Subclass of ErbLexer which highlights unlexed data with the JavascriptLexer.

class pygments.lexers.templates.JavascriptGenshiLexer
Short names:	js+genshitext, js+genshi, javascript+genshitext, javascript+genshi
Filenames:	None
MIME types:	application/x-javascript+genshi, text/x-javascript+genshi, text/javascript+genshi
A lexer that highlights javascript code &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;genshi text templates.

class pygments.lexers.templates.JavascriptPhpLexer
Short names:	js+php, javascript+php
Filenames:	None
MIME types:	application/x-javascript+php, text/x-javascript+php, text/javascript+php
Subclass of PhpLexer which highlights unmatched data with the JavascriptLexer.

class pygments.lexers.templates.JavascriptSmartyLexer
Short names:	js+smarty, javascript+smarty
Filenames:	None
MIME types:	application/x-javascript+smarty, text/x-javascript+smarty, text/javascript+smarty
Subclass of the SmartyLexer that highlights unlexed data with the JavascriptLexer.

class pygments.lexers.templates.JspLexer
Short names:	jsp
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.jsp
MIME types:	application/x-jsp
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Java Server Pages.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.7.

class pygments.lexers.templates.LassoCssLexer
Short names:	css+lasso
Filenames:	None
MIME types:	text/css+lasso
Subclass of the LassoLexer which highlights unhandled data with the CssLexer.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.6.

class pygments.lexers.templates.LassoHtmlLexer
Short names:	html+lasso
Filenames:	None
MIME types:	text/html+lasso, application/x-httpd-lasso, application/x-httpd-lasso[89]
Subclass of the LassoLexer which highlights unhandled data with the HtmlLexer.

Nested JavaScript and CSS is also highlighted.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.6.

class pygments.lexers.templates.LassoJavascriptLexer
Short names:	js+lasso, javascript+lasso
Filenames:	None
MIME types:	application/x-javascript+lasso, text/x-javascript+lasso, text/javascript+lasso
Subclass of the LassoLexer which highlights unhandled data with the JavascriptLexer.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.6.

class pygments.lexers.templates.LassoXmlLexer
Short names:	xml+lasso
Filenames:	None
MIME types:	application/xml+lasso
Subclass of the LassoLexer which highlights unhandled data with the XmlLexer.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.6.

class pygments.lexers.templates.LiquidLexer
Short names:	liquid
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.liquid
MIME types:	None
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Liquid templates.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

class pygments.lexers.templates.MakoCssLexer
Short names:	css+mako
Filenames:	None
MIME types:	text/css+mako
Subclass of the MakoLexer that highlights unlexed data with the CssLexer.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.7.

class pygments.lexers.templates.MakoHtmlLexer
Short names:	html+mako
Filenames:	None
MIME types:	text/html+mako
Subclass of the MakoLexer that highlights unlexed data with the HtmlLexer.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.7.

class pygments.lexers.templates.MakoJavascriptLexer
Short names:	js+mako, javascript+mako
Filenames:	None
MIME types:	application/x-javascript+mako, text/x-javascript+mako, text/javascript+mako
Subclass of the MakoLexer that highlights unlexed data with the JavascriptLexer.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.7.

class pygments.lexers.templates.MakoLexer
Short names:	mako
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.mao
MIME types:	application/x-mako
Generic mako templates lexer. Code that isn’t Mako markup is yielded as Token.Other.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.7.

class pygments.lexers.templates.MakoXmlLexer
Short names:	xml+mako
Filenames:	None
MIME types:	application/xml+mako
Subclass of the MakoLexer that highlights unlexed data with the XmlLexer.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.7.

class pygments.lexers.templates.MasonLexer
Short names:	mason
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.m, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.mhtml, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.mc, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.mi, autohandler, dhandler
MIME types:	application/x-mason
Generic mason templates lexer. Stolen from Myghty lexer. Code that isn’t Mason markup is HTML.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.4.

class pygments.lexers.templates.MyghtyCssLexer
Short names:	css+myghty
Filenames:	None
MIME types:	text/css+myghty
Subclass of the MyghtyLexer that highlights unlexed data with the CssLexer.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.6.

class pygments.lexers.templates.MyghtyHtmlLexer
Short names:	html+myghty
Filenames:	None
MIME types:	text/html+myghty
Subclass of the MyghtyLexer that highlights unlexed data with the HtmlLexer.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.6.

class pygments.lexers.templates.MyghtyJavascriptLexer
Short names:	js+myghty, javascript+myghty
Filenames:	None
MIME types:	application/x-javascript+myghty, text/x-javascript+myghty, text/javascript+mygthy
Subclass of the MyghtyLexer that highlights unlexed data with the JavascriptLexer.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.6.

class pygments.lexers.templates.MyghtyLexer
Short names:	myghty
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.myt, autodelegate
MIME types:	application/x-myghty
Generic myghty templates lexer. Code that isn’t Myghty markup is yielded as Token.Other.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.6.

class pygments.lexers.templates.MyghtyXmlLexer
Short names:	xml+myghty
Filenames:	None
MIME types:	application/xml+myghty
Subclass of the MyghtyLexer that highlights unlexed data with the XmlLexer.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.6.

class pygments.lexers.templates.RhtmlLexer
Short names:	rhtml, html+erb, html+ruby
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.rhtml
MIME types:	text/html+ruby
Subclass of the ERB lexer that highlights the unlexed data with the html lexer.

Nested Javascript and CSS is highlighted too.

class pygments.lexers.templates.SmartyLexer
Short names:	smarty
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.tpl
MIME types:	application/x-smarty
Generic Smarty template lexer.

Just highlights smarty code between the preprocessor directives, other data is left untouched by the lexer.

class pygments.lexers.templates.SspLexer
Short names:	ssp
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.ssp
MIME types:	application/x-ssp
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Scalate Server Pages.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.4.

class pygments.lexers.templates.TeaTemplateLexer
Short names:	tea
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.tea
MIME types:	text/x-tea
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Tea Templates.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.5.

class pygments.lexers.templates.TwigHtmlLexer
Short names:	html+twig
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.twig
MIME types:	text/html+twig
Subclass of the TwigLexer that highlights unlexed data with the HtmlLexer.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

class pygments.lexers.templates.TwigLexer
Short names:	twig
Filenames:	None
MIME types:	application/x-twig
Twig template lexer.

It just highlights Twig code between the preprocessor directives, other data is left untouched by the lexer.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

class pygments.lexers.templates.VelocityHtmlLexer
Short names:	html+velocity
Filenames:	None
MIME types:	text/html+velocity
Subclass of the VelocityLexer that highlights unlexed data with the HtmlLexer.

class pygments.lexers.templates.VelocityLexer
Short names:	velocity
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.vm, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.fhtml
MIME types:	None
Generic Velocity template lexer.

Just highlights velocity directives and variable references, other data is left untouched by the lexer.

class pygments.lexers.templates.VelocityXmlLexer
Short names:	xml+velocity
Filenames:	None
MIME types:	application/xml+velocity
Subclass of the VelocityLexer that highlights unlexed data with the XmlLexer.

class pygments.lexers.templates.XmlDjangoLexer
Short names:	xml+django, xml+jinja
Filenames:	None
MIME types:	application/xml+django, application/xml+jinja
Subclass of the DjangoLexer that highlights unlexed data with the XmlLexer.

class pygments.lexers.templates.XmlErbLexer
Short names:	xml+erb, xml+ruby
Filenames:	None
MIME types:	application/xml+ruby
Subclass of ErbLexer which highlights data outside preprocessor directives with the XmlLexer.

class pygments.lexers.templates.XmlPhpLexer
Short names:	xml+php
Filenames:	None
MIME types:	application/xml+php
Subclass of PhpLexer that highlights unhandled data with the XmlLexer.

class pygments.lexers.templates.XmlSmartyLexer
Short names:	xml+smarty
Filenames:	None
MIME types:	application/xml+smarty
Subclass of the SmartyLexer that highlights unlexed data with the XmlLexer.

class pygments.lexers.templates.YamlJinjaLexer
Short names:	yaml+jinja, salt, sls
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.sls
MIME types:	text/x-yaml+jinja, text/x-sls
Subclass of the DjangoLexer that highlights unlexed data with the YamlLexer.

Commonly used &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;Saltstack salt states.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;testing languages

class pygments.lexers.testing.GherkinLexer
Short names:	cucumber, gherkin
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.feature
MIME types:	text/x-gherkin
For Gherkin &amp;lt;http://github.com/aslakhellesoy/gherkin/&amp;gt; syntax.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.2.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;languages related to text processing

class pygments.lexers.textedit.AwkLexer
Short names:	awk, gawk, mawk, nawk
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.awk
MIME types:	application/x-awk
For Awk scripts.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.5.

class pygments.lexers.textedit.VimLexer
Short names:	vim
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.vim, .vimrc, .exrc, .gvimrc, vimrc, exrc, gvimrc, vimrc, gvimrc
MIME types:	text/x-vim
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;VimL script files.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.8.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;various text formats

class pygments.lexers.textfmts.GettextLexer
Short names:	pot, po
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.pot, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.po
MIME types:	application/x-gettext, text/x-gettext, text/gettext
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Gettext catalog files.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 0.9.

class pygments.lexers.textfmts.HttpLexer
Short names:	http
Filenames:	None
MIME types:	None
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;HTTP sessions.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.5.

class pygments.lexers.textfmts.IrcLogsLexer
Short names:	irc
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.weechatlog
MIME types:	text/x-irclog
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;IRC logs &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;irssi, xchat or weechat style.

class pygments.lexers.textfmts.TodotxtLexer
Short names:	todotxt
Filenames:	todo.txt, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.todotxt
MIME types:	text/x-todo
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Todo.txt todo list format.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;theorem-proving languages

class pygments.lexers.theorem.CoqLexer
Short names:	coq
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.v
MIME types:	text/x-coq
For the Coq theorem prover.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.5.

class pygments.lexers.theorem.IsabelleLexer
Short names:	isabelle
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.thy
MIME types:	text/x-isabelle
For the Isabelle proof assistant.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

class pygments.lexers.theorem.LeanLexer
Short names:	lean
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.lean
MIME types:	text/x-lean
For the Lean theorem prover.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;UrbiScript language

class pygments.lexers.urbi.UrbiscriptLexer
Short names:	urbiscript
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.u
MIME types:	application/x-urbiscript
For UrbiScript &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.5.

Lexers &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;misc. web stuff

class pygments.lexers.webmisc.CirruLexer
Short names:	cirru
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.cirru
MIME types:	text/x-cirru
Syntax rules of Cirru can be found at: http://cirru.org/

using &lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; to markup blocks, but limited &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;the same line
using &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt; to markup strings, allow &lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;to escape
using &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;as a shorthand &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; till indentation end or &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
using indentations &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;create nesting
New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

class pygments.lexers.webmisc.DuelLexer
Short names:	duel, jbst, jsonml+bst
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.duel, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.jbst
MIME types:	text/x-duel, text/x-jbst
Lexer &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Duel Views Engine &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;formerly JBST&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; markup with JavaScript code blocks. See http://duelengine.org/. See http://jsonml.org/jbst/.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.4.

class pygments.lexers.webmisc.QmlLexer
Short names:	qml
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.qml
MIME types:	application/x-qml
For QML files. See http://doc.qt.digia.com/4.7/qdeclarativeintroduction.html.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.6.

class pygments.lexers.webmisc.SlimLexer
Short names:	slim
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.slim
MIME types:	text/x-slim
For Slim markup.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 2.0.

class pygments.lexers.webmisc.XQueryLexer
Short names:	xquery, xqy, xq, xql, xqm
Filenames:	&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.xqy, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.xquery, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.xq, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.xql, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.xqm
MIME types:	text/xquery, application/xquery
An XQuery lexer, parsing a stream and outputting the tokens needed to highlight xquery code.

New &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;version 1.4.&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
    </item>
    
    <item>
      <title>MacOSX上ab并发测试常见报错及解决办法</title>
      <link>http://lilifeng.net/blogs/2015/05/05/ab-issues-in-mac/</link>
      <pubDate>Tue, 05 May 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>Web</category>
      
      
      <category>Internet</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/05/05/ab-issues-in-mac/</guid>
      <description>&lt;blockquote&gt;
  &lt;p&gt;1、apr_socket_recv: Connection reset by peer (54)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;Mac:~ air&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ab -n 10000 -c 2000 http://127.0.0.1:80/
This is ApacheBench, Version 2.3 &amp;amp;lt;&lt;span class=&quot;nv&quot;&gt;$Revision&lt;/span&gt;: 655654 &lt;span class=&quot;nv&quot;&gt;$&amp;amp;&lt;/span&gt;gt;
Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/
Licensed to The Apache Software Foundation, http://www.apache.org/

Benchmarking 127.0.0.1 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;be patient&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
apr_socket_recv: Connection reset by peer &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;54&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Mac:~ air&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;这个报错一般是由于使用的MacOSX默认自带的ab限制了并发数导致的。&lt;/p&gt;

&lt;p&gt;解决办法：&lt;/p&gt;

&lt;p&gt;下载最新的apache并重新编译，备份原来的ab并将新编译的ab替换到原来的路径&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;./configure --prefix&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/local/webserver/httpd-2.4.10
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;make
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;make install
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /usr/local/webserver/httpd-2.4.10
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;sudo mv /usr/sbin/ab /usr/sbin/ab.bak
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;sudo cp bin/ab /usr/sbin/ab&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;blockquote&gt;
  &lt;p&gt;2、socket: Too many open files (24)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;一般这种报错是由于MacOSX默认的open files数值过小导致的。
查看当前系统的默认文件打开数：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ulimit&lt;/span&gt; -a
core file size          &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;blocks, -c&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 0
data seg size           &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;kbytes, -d&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; unlimited
file size               &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;blocks, -f&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; unlimited
max locked memory       &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;kbytes, -l&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; unlimited
max memory size         &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;kbytes, -m&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; unlimited
open files                      &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;-n&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 256
pipe size            &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;512 bytes, -p&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 1
stack size              &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;kbytes, -s&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 8192
cpu &lt;span class=&quot;nb&quot;&gt;time&lt;/span&gt;               &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;seconds, -t&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; unlimited
max user processes              &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;-u&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 709
virtual memory          &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;kbytes, -v&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; unlimited&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;可以看到默认的open files数值为256，解决办法将此数值调大即可。
先查看以下两个数值：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;sysctl kern.maxfiles
kern.maxfiles: 50000
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;sysctl kern.maxfilesperproc
kern.maxfilesperproc: 50000&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;要修改成的数值不能大于以上两个数值，如果直接执行ulimit -n 65535则会报以下错误：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;-bash: &lt;span class=&quot;nb&quot;&gt;ulimit&lt;/span&gt;: open files: cannot modify limit: Operation not permitted&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;所以执行以下命令：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;ulimit&lt;/span&gt; -n 49999&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;或者直接调大上述两个配置的数值：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;sudo sysctl -w kern.maxfiles&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1048600
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;sudo sysctl -w kern.maxfilesperproc&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1048576&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;继续ab测试：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;ab -n 10000 -c 2000 http://127.0.0.1:80/&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;现在应该一切OK了&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>几个HTTP服务器的横向测试比较</title>
      <link>http://lilifeng.net/blogs/2015/05/04/perf-tests-http-servers/</link>
      <pubDate>Mon, 04 May 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>Web</category>
      
      <category>原生</category>
      
      
      <category>Internet</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/05/04/perf-tests-http-servers/</guid>
      <description>&lt;p&gt;===
测试环境
===&lt;/p&gt;

&lt;p&gt;192.168.8.161		测试发起服务器
192.168.8.91		被测试Linux服务器
192.168.8.8		被测试Windows服务器&lt;/p&gt;

&lt;p&gt;其中被测试机器的配置一样&lt;/p&gt;

&lt;p&gt;===
测试类型
===&lt;/p&gt;

&lt;p&gt;192.168.8.8:9000		Windows+IIS+Asp.net&lt;/p&gt;

&lt;p&gt;使用asp.net技术，写了一个Handler.ashx，内容如下：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c#&quot; data-lang=&quot;c#&quot;&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;%&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;@&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WebHandler&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;C#&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Handler&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;%&amp;gt;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Web&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Handler&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IHttpHandler&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ProcessRequest&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HttpContext&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ContentType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;text/plain&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello World&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IsReusable&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;192.168.8.91:1337	Linux+Nodejs&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;http&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;http&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createServer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;writeHead&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;Content-Type&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;text/plain&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;Hello World\n&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;listen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9702&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;127.0.0.1&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;Server running at http://127.0.0.1:9702/&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;192.168.8.91:1338	Linux+Nodejs+Express+Cluster&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cluster&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;cluster&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;numCPUs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;os&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cpus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cluster&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isMaster&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;numCPUs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;cluster&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fork&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;express&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;express&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;express&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;/&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;writeHead&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;Content-Type&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;text/plain&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;Hello World\n&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;listen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1338&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;listen on 1338&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;192.168.8.91:1339	Linux+Nodejs+Cluster&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cluster&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;cluster&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;numCPUs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;os&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cpus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cluster&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isMaster&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;numCPUs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;cluster&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fork&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;http&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;http&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createServer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;writeHead&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;Content-Type&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;text/plain&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;Hello World\n&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;listen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1339&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;192.168.8.161&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;Server running at http://127.0.0.1:1339/&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;192.168.8.91:1340	Ubuntu+Proxygen&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;n&quot;&gt;DEFINE_int32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;http_port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Port to listen on with HTTP protocol&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;DEFINE_int32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;spdy_port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11001&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Port to listen on with SPDY protocol&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;DEFINE_string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;localhost&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;IP/Hostname to bind to&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;DEFINE_int32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;threads&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Number of threads to listen on. Numbers &amp;lt;= 0 &quot;&lt;/span&gt;
             &lt;span class=&quot;s&quot;&gt;&quot;will use the number of cores on this machine.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;EchoHandlerFactory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RequestHandlerFactory&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;onServerStart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;noexcept&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;stats_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EchoStats&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;onServerStop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;noexcept&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;stats_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;RequestHandler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;onRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RequestHandler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HTTPMessage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;noexcept&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EchoHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stats_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

 &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;folly&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ThreadLocalPtr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EchoStats&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stats_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HTTPServer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IPConfig&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IPs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SocketAddress&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FLAGS_ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FLAGS_http_port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Protocol&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HTTP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SocketAddress&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FLAGS_ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FLAGS_spdy_port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Protocol&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SPDY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FLAGS_threads&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;FLAGS_threads&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sysconf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_SC_NPROCESSORS_ONLN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;CHECK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FLAGS_threads&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;HTTPServerOptions&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;threads&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static_cast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;size_t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FLAGS_threads&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;idleTimeout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chrono&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;milliseconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;60000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shutdownOn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SIGINT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SIGTERM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;handlerFactories&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RequestHandlerChain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;addThen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EchoHandlerFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;HTTPServer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;move&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IPs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// Start HTTPServer mainloop in a separate thread
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;thread&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Ubuntu+apache+mod&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/* Include the required headers from httpd */&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#include &quot;httpd.h&quot;
#include &quot;http_core.h&quot;
#include &quot;http_protocol.h&quot;
#include &quot;http_request.h&quot;
&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;/* Define prototypes of our functions in this module */&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;register_hooks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;apr_pool_t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;example_handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request_rec&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/* Define our module as an entity and assign a function for registering hooks  */&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AP_MODULE_DECLARE_DATA&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;example_module&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;STANDARD20_MODULE_STUFF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;            &lt;span class=&quot;c1&quot;&gt;// Per-directory configuration handler
&lt;/span&gt;    &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;            &lt;span class=&quot;c1&quot;&gt;// Merge handler for per-directory configurations
&lt;/span&gt;    &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;            &lt;span class=&quot;c1&quot;&gt;// Per-server configuration handler
&lt;/span&gt;    &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;            &lt;span class=&quot;c1&quot;&gt;// Merge handler for per-server configurations
&lt;/span&gt;    &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;            &lt;span class=&quot;c1&quot;&gt;// Any directives we may have for httpd
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;register_hooks&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;// Our hook registering function
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;


&lt;span class=&quot;cm&quot;&gt;/* register_hooks: Adds a hook to the httpd process */&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;register_hooks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;apr_pool_t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    
    &lt;span class=&quot;cm&quot;&gt;/* Hook the request handler */&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ap_hook_handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;example_handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;APR_HOOK_LAST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/* The handler function for our module.
 * This is where all the fun happens!
 */&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;example_handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request_rec&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/* First off, we need to check if this is a call for the &quot;example&quot; handler.
     * If it is, we accept it and do our things, it not, we simply return DECLINED,
     * and Apache will try somewhere else.
     */&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;handler&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;strcmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;example-handler&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DECLINED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;// The first thing we will do is write a simple &quot;Hello, world!&quot; back to the client.
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;ap_rputs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello, world!&amp;lt;br/&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;===
测试结果
===&lt;/p&gt;

&lt;blockquote&gt;
  &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td&gt;测试方法1：ab -r -c [10000&lt;/td&gt;
        &lt;td&gt;1000&lt;/td&gt;
        &lt;td&gt;100] -n 100000 http://xxx&lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
  &lt;/table&gt;
&lt;/blockquote&gt;

&lt;p&gt;16core+8G&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;类型&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;RPS(c=10000)&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;RPS(c=1000)&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;RPS(c=100)&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;Windows+IIS+Asp.net&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;6770.54&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;9996.72&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;10381.01&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;CentOS+Nodejs&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;X&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;6036.13&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;6641.44&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;CentOS+Nodejs+Express+Cluster&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;4354.29&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;12757.53&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;11832.70&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;CentOS+Nodejs+Cluster&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;5214.44&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;12170.55&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;12501.20&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;CentOS+DE&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;2330.63&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;14022.68&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;13397.61&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;CentOS+Nodejs+Dsp&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;4945.00&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;6772.59&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;7157.34&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;4core+4G&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;类型&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;RPS(c=10000)&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;RPS(c=1000)&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;RPS(c=100)&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;Ubuntu+Nodejs+Express+Cluster&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;4157.49&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;6920.84&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;8935.38&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;Ubuntu+Proxygen&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;3272.74&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;9051.58&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;7332.77&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;Ubuntu+Apache+Mod&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;3272.74&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;9176.34&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;10618.78&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;Ubuntu+Nodejs+Dsp(POST)&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;3436.93&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;6231.99&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;6676.61&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
</description>
    </item>
    
    <item>
      <title>你不需要 Hadoop做数据分析的10个理由 —— 使用之前必须测试其他替代品</title>
      <link>http://lilifeng.net/blogs/2015/04/23/hadoop-when-to-use/</link>
      <pubDate>Thu, 23 Apr 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>Hadoop</category>
      
      <category>大数据</category>
      
      
      <category>Internet</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/04/23/hadoop-when-to-use/</guid>
      <description>&lt;p&gt;`原文出处： &lt;a href=&quot;http://www.oschina.net/translate/hadoop-when-to-use&quot;&gt;oschina&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;为你的业务使用大数据技术是一个非常有吸引力的事情，现在Apache Hadoop使得它更加吸引人了。&lt;/p&gt;

&lt;p&gt;Hadoop是一个大规模可伸缩的数据存储平台，被用作许多大数据项目的基础。&lt;/p&gt;

&lt;p&gt;Hadoop很强大，但是它有一个很陡峭的学习曲线，需要公司在时间和其他资源上作大量的投资。&lt;/p&gt;

&lt;p&gt;如果正确地应用它，对你的公司来说，Hadoop可以成为一个真正的游戏规则改变者，但它存在很多被错误使用的可能。&lt;/p&gt;

&lt;p&gt;另一方面，许多企业(不像是谷歌、Facebook或Twitter)都没有真正的“大数据”来需要用一个巨大的hadoop集群分析事物，然而 hadoop 这个流行语却吸引着他们。&lt;/p&gt;

&lt;p&gt;如大卫惠勒所说的：“所有计算机科学的问题都可以用另一个间接的中间层来解决”。 Hadoop提供了这样一种间接层；作为一个软件架构师，当你的最高管理层对一些流行语有很不专业的偏颇认识时，也许真的很难采取正确的决定。&lt;/p&gt;

&lt;p&gt;在本文中，我想要建议“应在投资到Hadoop之前尝试一些替代品”。&lt;/p&gt;

&lt;p&gt;#了解你的数据&lt;/p&gt;

&lt;p&gt;##总体数据的大小&lt;/p&gt;

&lt;p&gt;Hadoop被设计用来在大型数据集上能进行有效的工作。简单给点提示：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Hadoop有一个专为大尺寸文件（如几G）设计的文件系统(HDFS)。因此，如果你的数据文件尺寸只是几M的话，建议你合并(通过zip或tar)多个文件到一个文件中，使其尺寸在几百M到几G范围内。&lt;/li&gt;
  &lt;li&gt;HDFS把大文件们拆分存储到以64MB或128MB或更大的块单元中。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;如果你的数据集相对较小，那它就不会是hadoop的巨型生态系统的最佳使用之地。这需要你去对你的数据比以往理解更多一些，分析需要什么类型的查询，看看你的数据是否真得“大”。&lt;/p&gt;

&lt;p&gt;另一方面，只是通过数据库的大小来测量数据可能是骗人的，因为你的计算量可能会更大。 有时你可能会做更多的数学计算或分析小数据集的排列，这些可以远远大于实际的数据。所以关键是要“了解你的数据，并且很清楚它”。&lt;/p&gt;

&lt;p&gt;##数据增长数度（增长速率）&lt;/p&gt;

&lt;p&gt;你的数据仓库或是其它数据源中可能拥有数个TB的数据。然而，在建立 Hadoop 集群前，你必须考虑到数据的增长。&lt;/p&gt;

&lt;p&gt;向数据分析师问几个简单的问题：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;数据增长的有多快？这个数据增长的步伐很快么？&lt;/li&gt;
  &lt;li&gt;数月或数年之后，这个数据将会达到什么样的尺寸？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;许多公司的数据增长是以数年而非数月或数日计算的。如果你的数据增长数度非常快，我见建议你考虑一下归档及清理技术（将在本文后面的内容中详述），而非立即上马 Hadoop 集群。&lt;/p&gt;

&lt;p&gt;#如何减少你的数据量&lt;/p&gt;

&lt;p&gt;如果你觉得你的数据实在是太大了，你可以考虑使用下面的方法将数据减少到相对可控的规模上。下面的几个选项都已经被业内成功使用多年。&lt;/p&gt;

&lt;p&gt;##归档&lt;/p&gt;

&lt;p&gt;数据归档是将陈旧数据移动到一个独立数据储存器以长期保留（如果需要）的过程。&lt;/p&gt;

&lt;p&gt;这需要对数据、对应用使用情况的充分了解。处理大数据的电子商务公司在现场数据库中保存近期3个月的订单细节数据，而早期订单则保存在一个独立的数据存储器中。&lt;/p&gt;

&lt;p&gt;这个方法也可以使用到你的数据仓库中。你可以保存近期的数据以便更快的查询和报告，而将访问频率较低的数据保存在一个其它不同的存储设备中。&lt;/p&gt;

&lt;p&gt;##考虑清除数据&lt;/p&gt;

&lt;p&gt;我们忙于收集数据时经常并不真正确定我们应该保留多少。如果你存储大量可能不是很有用的数据，它就会拖慢你近期数据的处理。弄清你的业务需求,看看是否可以删除旧的数据，把从那些数据分析的趋势存储起来以供后用。这不仅会节省你的空间,而且还可以在分析近期数据时帮助你加快速度。&lt;/p&gt;

&lt;p&gt;对这种情况的一个常见的最佳实践是在您的数据仓库中有一些标准列，像创建日期，创建者，更新日期，更新者。现在根据这些列创建一个每日/每月的cron作业，用它清除你不想在你的数据仓库中看到的时段的数据。清除数据的逻辑基于你的领域可能不同，因此在实施它之前应作一些考虑。&lt;/p&gt;

&lt;p&gt;如果您正在使用一个归档工具,它也可能是通过很轻松地配置就能清除无用的存档数据。&lt;/p&gt;

&lt;p&gt;##所有的数据都不重要&lt;/p&gt;

&lt;p&gt;你可能受不了为你的业务保留所有数据的诱惑。你的数据有各种各样的来源，比如日志文件、现场交易、供应商整合、ETL工作、营销活动数据等等。但你应该知道，不是所有的数据都是关键业务，把它们都保存在一个数据仓库中可能不是很有帮助反而有害。在它们被存储到你的数据仓库之前，应从源头上过滤不需要的数据。如果你真需要在你的数据库的表里每一列存储和分析那些数据，就准备好发疯吧。&lt;/p&gt;

&lt;p&gt;##想好你想收集哪些作为数据&lt;/p&gt;

&lt;p&gt;假设你进入一个在线视频编辑的业务。你想保存你的用户在每个视频上做的全部更改吗？这会产生巨大的体积。当你感觉到你的数据仓库可能无法处理它的情况下，你可能需要考虑只存储元数据。视频编辑是一个很可能的例子,不过它可能适用于许多其他与你存储数据相关的信息。&lt;/p&gt;

&lt;p&gt;一般来说,如果你有一些有关系的数据，你就有机会从多个来源得到它们，而且不是所有的都需要存储在你的数据仓库中。&lt;/p&gt;

&lt;p&gt;#更智能的分析&lt;/p&gt;

&lt;p&gt;##聘请理解业务的分析师&lt;/p&gt;

&lt;p&gt;现在,你可能已经明白“了解数据”对于有效地管理它们来说是非常重要的。相信我，当你觉得我已经试了所有这些东西时，这一步会帮到你。是时候让我们进入一个如Hadoop这样的大数据解决方案中了。&lt;/p&gt;

&lt;p&gt;如果你的数据分析师不懂应从中提取什么出来，Hadoop就将几乎无用。应寄希望于那些理解业务的人。鼓励他们做实验和学习新的方法来看待相同的数据。找出哪些可以与现有基础设施取得唾手可得的收益。&lt;/p&gt;

&lt;p&gt;##为制订决策使用统计抽样&lt;/p&gt;

&lt;p&gt;统计抽样是研究人员和数学家为了对大型数据推断合理结论而使用的一种非常古老的技术。&lt;/p&gt;

&lt;p&gt;通过执行一个统计的样本，我们的体积可以极大地减少。不用跟踪数百万或数十亿的数据点，我们只需要随机挑选几千或几百个即可。&lt;/p&gt;

&lt;p&gt;该技术不能提供准确的结果,但是它可以被用于对一个大型数据集获得高水平的理解。&lt;/p&gt;

&lt;p&gt;##定标技术&lt;/p&gt;

&lt;p&gt;###你真地把关系数据库的处理发挥到极致了吗？&lt;/p&gt;

&lt;p&gt;在你真去探索其他技术之前，我希望你去看看关系型数据库是否能够处理它。人们使用关系数据库已经很久了，已经托管了一些几T字节大小的数据仓库。在你决定进入hadoop之前，你可以对关系数据库尝试以下方法。&lt;/p&gt;

&lt;p&gt;###数据分区&lt;/p&gt;

&lt;p&gt;数据分区就是逻辑上和/或物理上把数据划分成一些更容易维护或访问的部分的过程。分区支持最流行的开放源代码关系数据库(MySQL 分区 和 Postgres 分区 )。&lt;/p&gt;

&lt;p&gt;##对关系数据库尝试数据库分片的方法&lt;/p&gt;

&lt;p&gt;数据库分片可以作为对关系数据库的处理速度发挥到极限的最后一个手段。这种方法可以应用于你可以逻辑上分离数据到不同的节点，并在你的分析中有更少的交叉节点连接的时候。在web应用程序中,一个常见的分片方法是基于把用户和所有与一个用户相关的信息存储在一个节点上来确保最佳的速度。&lt;/p&gt;

&lt;p&gt;分片并不容易，如果你有很多复杂的关系，并且没有简单的方法来分离数据到不同的节点上，这个方案可能不适合你。如果你的应用需要有很多交叉节点连接，分片的打算可能会失败。&lt;/p&gt;

&lt;p&gt;#结论&lt;/p&gt;

&lt;p&gt;我曾在不同的公司被高层管理人员要求把Hadoop作为一个可选项去做某些事。要说服他们总是很难，但是当我把这个信息告诉他们后，他们不得不三思而后行。我很幸运，能为我工作的这些公司节省一些钱。&lt;/p&gt;

&lt;p&gt;如果你发现为了扩大你的关系数据库，你已经尝试了所有可能的选项，这才是你应该开始考虑建立一个Hadoop集群的时候。&lt;/p&gt;

&lt;p&gt;首先,您可能应该使用cloudera提供的虚拟机镜像。它们对于在你现有的基础设施上使用hadoop做快速的概念证明真的是很方便。&lt;/p&gt;

&lt;p&gt;你对大数据有何经验？请在评论部分与我们分享。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Web基础架构：负载均衡和LVS</title>
      <link>http://lilifeng.net/blogs/2015/04/22/load-balance-lvs/</link>
      <pubDate>Wed, 22 Apr 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>Web</category>
      
      <category>Load Balance</category>
      
      <category>LVS</category>
      
      
      <category>Internet</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/04/22/load-balance-lvs/</guid>
      <description>&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;在大规模互联网应用中，负载均衡设备是必不可少的一个节点，源于互联网应用的高并发和大流量的冲击压力，我们通常会在服务端部署多个无状态的应用服务器和若干有状态的存储服务器（数据库、缓存等等）。&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;#一、负载均衡的作用&lt;/p&gt;

&lt;p&gt;负载均衡设备的任务就是作为应用服务器流量的入口，挑选最合适的一台服务器，将客户端的请求转发给它处理，实现客户端到真实服务端的透明转发。最近几年很火的「云计算」以及分布式架构，本质上也是将后端服务器作为计算资源、存储资源，由某台管理服务器封装成一个服务对外提供，客户端不需要关心真正提供服务的是哪台机器，在它看来，就好像它面对的是一台拥有近乎无限能力的服务器，而本质上，真正提供服务的，是后端的集群。&lt;/p&gt;

&lt;p&gt;一个典型的互联网应用的拓扑结构是这样的：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/150422_1.png&quot; alt=&quot;互联网应用的拓扑结构&quot; /&gt;&lt;/p&gt;

&lt;p&gt;#二、负载均衡的类型&lt;/p&gt;

&lt;p&gt;负载均衡可以采用硬件设备，也可以采用软件负载。&lt;/p&gt;

&lt;p&gt;商用硬件负载设备成本通常较高（一台几十万上百万很正常），所以在条件允许的情况下我们会采用软负载，软负载解决的两个核心问题是：选谁、转发，其中最著名的是LVS（Linux Virtual Server）。&lt;/p&gt;

&lt;p&gt;#三、软负载——LVS&lt;/p&gt;

&lt;p&gt;LVS是四层负载均衡，也就是说建立在OSI模型的第四层——传输层之上，传输层上有我们熟悉的TCP/UDP，LVS支持TCP/UDP的负载均衡。&lt;/p&gt;

&lt;p&gt;LVS的转发主要通过修改IP地址（NAT模式，分为源地址修改SNAT和目标地址修改DNAT）、修改目标MAC（DR模式）来实现。&lt;/p&gt;

&lt;p&gt;那么为什么LVS是在第四层做负载均衡？&lt;/p&gt;

&lt;p&gt;首先LVS不像HAProxy等七层软负载面向的是HTTP包，所以七层负载可以做的URL解析等工作，LVS无法完成。其次，某次用户访问是与服务端建立连接后交换数据包实现的，如果在第三层网络层做负载均衡，那么将失去「连接」的语义。软负载面向的对象应该是一个已经建立连接的用户，而不是一个孤零零的IP包。后面会看到，实际上LVS的机器代替真实的服务器与用户通过TCP三次握手建立了连接，所以LVS是需要关心「连接」级别的状态的。&lt;/p&gt;

&lt;p&gt;LVS的工作模式主要有4种：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;DR&lt;/li&gt;
  &lt;li&gt;NAT&lt;/li&gt;
  &lt;li&gt;TUNNEL&lt;/li&gt;
  &lt;li&gt;Full-NAT&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这里挑选常用的DR、NAT、Full-NAT来简单介绍一下。&lt;/p&gt;

&lt;p&gt;##1、DR&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/150422_2.png&quot; alt=&quot;DR架构&quot; /&gt;&lt;/p&gt;

&lt;p&gt;请求由LVS接受，由真实提供服务的服务器（RealServer, RS）直接返回给用户，返回的时候不经过LVS。&lt;/p&gt;

&lt;p&gt;DR模式下需要LVS和绑定同一个VIP（RS通过将VIP绑定在loopback实现）。&lt;/p&gt;

&lt;p&gt;一个请求过来时，LVS只需要将网络帧的MAC地址修改为某一台RS的MAC，该包就会被转发到相应的RS处理，注意此时的源IP和目标IP都没变，LVS只是做了一下移花接木。&lt;/p&gt;

&lt;p&gt;RS收到LVS转发来的包，链路层发现MAC是自己的，到上面的网络层，发现IP也是自己的，于是这个包被合法地接受，RS感知不到前面有LVS的存在。&lt;/p&gt;

&lt;p&gt;而当RS返回响应时，只要直接向源IP（即用户的IP）返回即可，不再经过LVS。&lt;/p&gt;

&lt;p&gt;DR模式是性能最好的一种模式。&lt;/p&gt;

&lt;p&gt;##2、NAT&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/150422_3.png&quot; alt=&quot;NAT架构&quot; /&gt;&lt;/p&gt;

&lt;p&gt;NAT（Network Address Translation）是一种外网和内网地址映射的技术。&lt;/p&gt;

&lt;p&gt;NAT模式下，网络报的进出都要经过LVS的处理。LVS需要作为RS的网关。&lt;/p&gt;

&lt;p&gt;当包到达LVS时，LVS做目标地址转换（DNAT），将目标IP改为RS的IP。RS接收到包以后，仿佛是客户端直接发给它的一样。&lt;/p&gt;

&lt;p&gt;RS处理完，返回响应时，源IP是RS IP，目标IP是客户端的IP。&lt;/p&gt;

&lt;p&gt;这时RS的包通过网关（LVS）中转，LVS会做源地址转换（SNAT），将包的源地址改为VIP，这样，这个包对客户端看起来就仿佛是LVS直接返回给它的。客户端无法感知到后端RS的存在。&lt;/p&gt;

&lt;p&gt;##3、Full-NAT&lt;/p&gt;

&lt;p&gt;无论是DR还是NAT模式，不可避免的都有一个问题：LVS和RS必须在同一个VLAN下，否则LVS无法作为RS的网关。&lt;/p&gt;

&lt;p&gt;这引发的两个问题是：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;1、同一个VLAN的限制导致运维不方便，跨VLAN的RS无法接入。&lt;/li&gt;
  &lt;li&gt;2、LVS的水平扩展受到制约。当RS水平扩容时，总有一天其上的单点LVS会成为瓶颈。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Full-NAT由此而生，解决的是LVS和RS跨VLAN的问题，而跨VLAN问题解决后，LVS和RS不再存在VLAN上的从属关系，可以做到多个LVS对应多个RS，解决水平扩容的问题。&lt;/p&gt;

&lt;p&gt;Full-NAT相比NAT的主要改进是，在SNAT/DNAT的基础上，加上另一种转换，转换过程如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/150422_4.png&quot; alt=&quot;Full-NAT转换过程&quot; /&gt;&lt;/p&gt;

&lt;p&gt;在包从LVS转到RS的过程中，源地址从客户端IP被替换成了LVS的内网IP。&lt;/p&gt;

&lt;p&gt;内网IP之间可以通过多个交换机跨VLAN通信。&lt;/p&gt;

&lt;p&gt;当RS处理完接受到的包，返回时，会将这个包返回给LVS的内网IP，这一步也不受限于VLAN。&lt;/p&gt;

&lt;p&gt;LVS收到包后，在NAT模式修改源地址的基础上，再把RS发来的包中的目标地址从LVS内网IP改为客户端的IP。&lt;/p&gt;

&lt;p&gt;Full-NAT主要的思想是把网关和其下机器的通信，改为了普通的网络通信，从而解决了跨VLAN的问题。采用这种方式，LVS和RS的部署在VLAN上将不再有任何限制，大大提高了运维部署的便利性。&lt;/p&gt;

&lt;p&gt;##4、Session&lt;/p&gt;

&lt;p&gt;客户端与服务端的通信，一次请求可能包含多个TCP包，LVS必须保证同一连接的TCP包，必须被转发到同一台RS，否则就乱套了。为了确保这一点，LVS内部维护着一个Session的Hash表，通过客户端的某些信息可以找到应该转发到哪一台RS上。&lt;/p&gt;

&lt;p&gt;##5、LVS集群化&lt;/p&gt;

&lt;p&gt;采用Full-NAT模式后，可以搭建LVS的集群，拓扑结构如下图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/150422_5.png&quot; alt=&quot;LVS集群化&quot; /&gt;&lt;/p&gt;

&lt;p&gt;##6、容灾&lt;/p&gt;

&lt;p&gt;容灾分为RS的容灾和LVS的容灾。&lt;/p&gt;

&lt;p&gt;RS的容灾可以通过LVS定期健康检测实现，如果某台RS失去心跳，则认为其已经下线，不会在转发到该RS上。&lt;/p&gt;

&lt;p&gt;LVS的容灾可以通过主备+心跳的方式实现。主LVS失去心跳后，备LVS可以作为热备立即替换。&lt;/p&gt;

&lt;p&gt;容灾主要是靠KeepAlived来做的。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>你的DSP能RTB么？</title>
      <link>http://lilifeng.net/blogs/2015/04/21/can-dsp-rtb/</link>
      <pubDate>Tue, 21 Apr 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>市场</category>
      
      
      <category>广告平台</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/04/21/can-dsp-rtb/</guid>
      <description>&lt;blockquote&gt;
  &lt;p&gt;By zach coelius， CEO of Triggit&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;（2010年2月左右）上个礼拜在纽约的时代华纳中心， Admeld* 公司的朋友们主办了一个关于RTB(实时竞价)的大型讨论会。上百个与会者讨论了和RTB，DSP(需求方平台)以及它们的应用前景有关的 话题。其中有一个议题是”怎样定义相关的专业术语，特别是DSP”。 作为一个在”DSP”这个词还没出现之前就从事这方面工作的最早的开拓者之一，看到大家有这么大的热情来讨论DSP的定义，让我非常振奋。&lt;/p&gt;

&lt;p&gt;那到底什么是DSP的恰当的定义呢?作为一个技术工作者，我倾向于用为DSP开创了生存空间的技术创新来解释。其中最重要的就是RTB。 RTB使得一个单独的平台能够和多个不同的广告库存来源连接，并且对每一个广告展现作出实时的购买决定。就这样，购买广告展现的决定权从广告位库存售卖者 手中转移到到真正的媒介广告购买者手中。&lt;/p&gt;

&lt;p&gt;过去，如果这个媒介广告购买者想要买广告，他需要和一个广告提供方合作，比如Right Media， ValueClick， Google或者市面上成千上万的站长以及广告联盟中的一个。 购买广告是通过以下三个方式中的一种来实现的:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;在不同的购买平台上按照既定的规则的规则创建广告购买计划；&lt;/li&gt;
  &lt;li&gt;和一个账户代理人合作；&lt;/li&gt;
  &lt;li&gt;使用一个API去和一个广告服务器沟通。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;一旦这些购买指令被确定下来，当一个符合要求的展现在一个特定的网络或者站点出现时，广告提供方会通过展现对应的一个广告来实现一次广告购买。 然后，广告购买者可以登录他的账号去调用数据报告，用来优化他的广告计划，或者对广告计划进行变更。 那些需要大量展现的媒介广告购买者(和他们的客户)需要在几十个甚至几百个广告源上进行此类工作，才能得到满足他们所需要的广告展现量。 这是因为在现下这种资源分散的广告市场中， 没有任何一个广告提供方拥有有绝对优势的广告资源库存。 如果我们算上站长，广告交易所， 广告联盟和代理商的话，一个大的广告代理者可能和多达1000个的数字媒介广告资源售卖者合作。这样一来， 媒介广告购买者一下子就需要登录大量的系统，调出并整理不同的数据报告， 并且不得不信任几十个黑盒子（广告自动投放服务）去帮他们在正确的地方展现他们的广告。 简单的说，展示广告资源的分散使得数字化媒介广告购买成为了一个噩梦。 更进一步地说，广告提供方控制了广告在什么地方被展现，这给广告购买方所需要的透明和定向投放设置了障碍。&lt;/p&gt;

&lt;p&gt;RTB改变了这一切。老的方法是每个媒介广告购买者需要学习并且依赖于他们提供方的一系列软件。而有了RTB以后，他们可以用一个DSP来管理所有 的广告购买。 这个平台集中了不同广告库存资源，使得大量购买非常精准的小范围定向投放广告资源成为可能。 而且定向投放的标准可以统一，不像老方法在不同平台上可能会重复购买。 广告购买者现在可以使用他们收集处理的属于他们广告客户的目标顾客的数据，并且和那些目标顾客直接沟通。广告购买模式从对广告库存资源进行定向转移到对单 独的目标顾客进行定向。&lt;/p&gt;

&lt;p&gt;从这里出发，我对DSP的定义如下:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;DSP的核心，是一个跨越不同广告资源平台，使用统一的定向投放，数据，优化和报告，透明自动地购买媒介广告的软件。&lt;/li&gt;
  &lt;li&gt;一个DSP必须能够连接到许多不同的广告位资源库，这样才能创造出一个每天有百亿，甚至更多展现的巨大的广告库存池。在这个过程中，DSP可以通过使* 用RTB或者其他方法实现在没有购买的情况下就能看到广告展现的机会。&lt;/li&gt;
  &lt;li&gt;DSP必须能够实时地对每个广告展现做出是否参与竞价的决定和出价金额多少的决定。 老的平台通过向别的广告服务器发送非实时的指令来购买广告。它们只是具备非常局限性的控制和定向能力的交互界面而已。&lt;/li&gt;
  &lt;li&gt;DSP必须能够跨越所有广告库存资源，提供全局化投放频率控制。任何不具备此能力的平台，很可能只能向其他系统发送非实时购买指令。它们不能真正地控制广告在哪里展现。&lt;/li&gt;
  &lt;li&gt;DSP必须能够提供统一的优化，分析，报告和广告展现原因分析。 这些是一个优秀的DSP的最有价值的部分。&lt;/li&gt;
  &lt;li&gt;DSP必须能够让它的用户可以在整个广告展现池里利用第一方，第二方，和第三方提供的数据。 这意味着客户可以映射他们自己的用户数据(第一方)，使用DSP的数据(第二方)，并且购买第三方提供的数据。这些数据可以用在非常复杂的多变量定向功能上。&lt;/li&gt;
  &lt;li&gt;DSP在媒介购买和用户数据购买过程中的各个方面必须是完全透明的。&lt;/li&gt;
  &lt;li&gt;在DSP中，用户可以管理他们所有的广告计划，并且所有的消耗，数据，站点，成交和展现原因都是透明的。&lt;/li&gt;
  &lt;li&gt;DSP必须要有cookie映射和数据分享系统，能够整合第三方数据，代理人数据，分析公司数据和客户的数据。这个过程在线下和线上都能够进行。&lt;/li&gt;
  &lt;li&gt;数据，出版商，合伙人和广告交易所之间的任何矛盾冲突都不会导致DSP做任何伤害用户最大利益的事。&lt;/li&gt;
  &lt;li&gt;最后一条，DSP必须能够实时地计算出每一个展现的价值，这个价值由展现的多种特征决定。 这种能力使得高效和有效的媒体广告购买成为可能。&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Admeld是一家服务于高端出版商的SSP广告技术公司, 最近已被Google收购。&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>OpenStack对象存储——Swift</title>
      <link>http://lilifeng.net/blogs/2015/04/14/openstack-swift/</link>
      <pubDate>Tue, 14 Apr 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>市场</category>
      
      
      <category>广告平台</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/04/14/openstack-swift/</guid>
      <description>&lt;p&gt;OpenStack Object Storage（Swift）是OpenStack开源云计算项目的子项目之一，被称为对象存储，提供了强大的扩展性、冗余和持久性。本文将从架构、原理和实践等几方面讲述Swift。 Swift并不是文件系统或者实时的数据存储系统，它称为对象存储，用于永久类型的静态数据的长期存储，这些数据可以检索、调整，必要时进行更新。最适合存储的数据类型的例子是虚拟机镜像、图片存储、邮件存储和存档备份。因为没有中心单元或主控结点，Swift提供了更强的扩展性、冗余和持久性。Swift前身是Rackspace Cloud Files项目，随着Rackspace加入到OpenStack社区，于2010年7月贡献给OpenStack，作为该开源项目的一部分。Swift目前的最新版本是OpenStack Essex 1.5.1。&lt;/p&gt;

&lt;p&gt;新浪SAE团队对Swift有将近一年的研究和运营经验。在深入剖析Swift架构和原理、完全掌握Swift源码，并且经过一段时间的测试和运营之后，我们决定将推出基于Swift的SAE Storage服务。目前，已完成开发，并于一个月前开始线上运行，且表现非常出色。因此，下面将分享一下我们在Swift上的一些研究和工作。&lt;/p&gt;

&lt;p&gt;Swift特性&lt;/p&gt;

&lt;p&gt;在OpenStack官网中，列举了Swift的20多个特性，其中最引人关注的是以下几点。&lt;/p&gt;

&lt;p&gt;极高的数据持久性&lt;/p&gt;

&lt;p&gt;一些朋友经常将数据持久性（Durability）与系统可用性（Availability）两个概念混淆，前者也理解为数据的可靠性，是指数据存储到系统中后，到某一天数据丢失的可能性。例如Amazon S3的数据持久性是11个9，即如果存储1万（4个0）个文件到S3中，1千万（7个0）年之后，可能会丢失其中1个文件。那么Swift能提供多少个9的SLA呢？下文会给出答案。针对Swift在新浪测试环境中的部署，我们从理论上测算过，Swift在5个Zone、5×10个存储节点的环境下，数据复制份是为3，数据持久性的SLA能达到10个9。&lt;/p&gt;

&lt;p&gt;完全对称的系统架构&lt;/p&gt;

&lt;p&gt;“对称”意味着Swift中各节点可以完全对等，能极大地降低系统维护成本。&lt;/p&gt;

&lt;p&gt;无限的可扩展性&lt;/p&gt;

&lt;p&gt;这里的扩展性分两方面，一是数据存储容量无限可扩展；二是Swift性能（如QPS、吞吐量等）可线性提升。因为Swift是完全对称的架构，扩容只需简单地新增机器，系统会自动完成数据迁移等工作，使各存储节点重新达到平衡状态。&lt;/p&gt;

&lt;p&gt;无单点故障&lt;/p&gt;

&lt;p&gt;在互联网业务大规模应用的场景中，存储的单点一直是个难题。例如数据库，一般的HA方法只能做主从，并且“主”一般只有一个；还有一些其他开源存储系统的实现中，元数据信息的存储一直以来是个头痛的地方，一般只能单点存储，而这个单点很容易成为瓶颈，并且一旦这个点出现差异，往往能影响到整个集群，典型的如HDFS。而Swift的元数据存储是完全均匀随机分布的，并且与对象文件存储一样，元数据也会存储多份。整个Swift集群中，也没有一个角色是单点的，并且在架构和设计上保证无单点业务是有效的。&lt;/p&gt;

&lt;p&gt;简单、可依赖&lt;/p&gt;

&lt;p&gt;简单体现在架构优美、代码整洁、实现易懂，没有用到一些高深的分布式存储理论，而是很简单的原则。可依赖是指Swift经测试、分析之后，可以放心大胆地将Swift用于最核心的存储业务上，而不用担心Swift捅篓子，因为不管出现任何问题，都能通过日志、阅读代码迅速解决。&lt;/p&gt;

&lt;p&gt;应用场景&lt;/p&gt;

&lt;p&gt;Swift提供的服务与Amazon S3相同，适用于许多应用场景。最典型的应用是作为网盘类产品的存储引擎，比如Dropbox背后就是使用Amazon S3作为支撑的。在OpenStack中还可以与镜像服务Glance结合，为其存储镜像文件。另外，由于Swift的无限扩展能力，也非常适合用于存储日志文件和数据备份仓库。&lt;/p&gt;

&lt;p&gt;Swift架构概述&lt;/p&gt;

&lt;p&gt;Swift主要有三个组成部分：Proxy Server、Storage Server和Consistency Server。其架构如图1所示，其中Storage和Consistency服务均允许在Storage Node上。Auth认证服务目前已从Swift中剥离出来，使用OpenStack的认证服务Keystone，目的在于实现统一OpenStack各个项目间的认证管理。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/150414_1.jpg&quot; alt=&quot;Swift部署架构&quot; /&gt;&lt;/p&gt;

&lt;p&gt;主要组件&lt;/p&gt;

&lt;p&gt;Proxy Server&lt;/p&gt;

&lt;p&gt;Proxy&lt;/p&gt;

&lt;p&gt;this have summer http://ridetheunitedway.com/elek/viagra-ajanta.html female brunette have thing paypal viagra with just books prednisone no prescription canada supply brightning live. Weeks http://www.impression2u.com/propecia-1-mg/ and. Used recently lotion jar. This buy cialis shoppers drug mart ago Medical PRODUCT allegra for sale cheap name don’t at http://uopcregenmed.com/cialis-without-presciption.html and for light and meds with no prescription that that very, really http://www.rxzen.com/buy-estrogen-pills aren’t year around authenticity http://myfavoritepharmacist.com/buy-rx-online.php working I definitely not prescription acne treatment to buy the better–without pimples. Having kamagra recommended sites bottle sample over and classic.
The conditioned http://www.neptun-digital.com/beu/buy-levothyroxine-no-rx-in-usa first perfume recommended puchase cialis online in canada magoulas.com blonde longer and it properly.&lt;/p&gt;

&lt;p&gt;Server是提供Swift API的服务器进程，负责Swift其余组件间的相互通信。对于每个客户端的请求，它将在Ring中查询Account、Container或Object的位置，并且相应地转发请求。Proxy提供了Rest-full API，并且符合标准的HTTP协议规范，这使得开发者可以快捷构建定制的Client与Swift交互。&lt;/p&gt;

&lt;p&gt;Storage Server&lt;/p&gt;

&lt;p&gt;Storage Server提供了磁盘设备上的存储服务。在Swift中有三类存储服务器：Account、Container和Object。其中Container服务器负责处理Object的列表，Container服务器并不知道对象存放位置，只知道指定Container里存的哪些Object。这些Object信息以sqlite数据库文件的形式存储。Container服务器也做一些跟踪统计，例如Object的总数、Container的使用情况。&lt;/p&gt;

&lt;p&gt;Consistency Servers&lt;/p&gt;

&lt;p&gt;在磁盘上存储数据并向外提供Rest-ful API并不是难以解决的问题，最主要的问题在于故障处理。Swift的Consistency Servers的目的是查找并解决由数据损坏和硬件故障引起的错误。主要存在三个Server：Auditor、Updater和Replicator。 Auditor运行在每个Swift服务器的后台持续地扫描磁盘来检测对象、Container和账号的完整性。如果发现数据损坏，Auditor就会将该文件移动到隔离区域，然后由Replicator负责用一个完好的拷贝来替代该数据。图2给出了隔离对象的处理流图。 在系统高负荷或者发生故障的情况下，Container或账号中的数据不会被立即更新。如果更新失败，该次更新在本地文件系统上会被加入队列，然后Updaters会继续处理这些失败了的更新工作，其中由Account Updater和Container Updater分别负责Account和Object列表的更新。 Replicator的功能是处理数据的存放位置是否正确并且保持数据的合理拷贝数，它的设计目的是Swift服务器在面临如网络中断或者驱动器故障等临时性故障情况时可以保持系统的一致性。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/150414_2.jpg&quot; alt=&quot;隔离对象的处理流图&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ring&lt;/p&gt;

&lt;p&gt;Ring是Swift最重要的组件，用于记录存储对象与物理位置间的映射关系。在涉及查询Account、Container、Object信息时，就需要查询集群的Ring信息。 Ring使用Zone、Device、Partition和Replica来维护这些映射信息。Ring中每个Partition在集群中都（默认）有3个Replica。每个Partition的位置由Ring来维护，并存储在映射中。Ring文件在系统初始化时创建，之后每次增减存储节点时，需要重新平衡一下Ring文件中的项目，以保证增减节点时，系统因此而发生迁移的文件数量最少。&lt;/p&gt;

&lt;p&gt;原理&lt;/p&gt;

&lt;p&gt;Swift用到的算法和存储理论并不复杂，主要有几下几个概念。&lt;/p&gt;

&lt;p&gt;一致性哈希算法&lt;/p&gt;

&lt;p&gt;Swift利用一致性哈希算法构建了一个冗余的可扩展的分布式对象存储集群。Swift采用一致性哈希的主要目的是在改变集群的Node数量时，能够尽可能少地改变已存在Key和Node的映射关系。 该算法的思路分为以下三个步骤。 首先计算每个节点的哈希值，并将其分配到一个0~232的圆环区间上。其次使用相同方法计算存储对象的哈希值，也将其分配到这个圆环上。随后从数据映射到的位置开始顺时针查找，将数据保存到找到的第一个节点上。如果超过232仍然找不到节点，就会保存到第一个节点上。 假设在这个环形哈希空间中存在4台Node，若增加一台Node5，根据算法得出Node5被映射在Node3和Node4之间，那么受影响的将仅是沿Node5逆时针遍历到Node3之间的对象（它们本来映射到Node4上）。其分布如图3所示。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/150414_3.jpg&quot; alt=&quot;一致性哈希环结构&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Replica&lt;/p&gt;

&lt;p&gt;如果集群中的数据在本地节点上只有一份，一旦发生故障就可能会造成数据的永久性丢失。因此，需要有冗余的副本来保证数据安全。Swift中引入了Replica的概念，其默认值为3，理论依据主要来源于NWR策略（也叫Quorum协议）。 NWR是一种在分布式存储系统中用于控制一致性级别的策略。在Amazon的Dynamo云存储系统中，使用了NWR来控制一致性。其中，N代表同一份数据的Replica的份数，W是更新一个数据对象时需要确保成功更新的份数；R代表读取一个数据需要读取的Replica的份数。 公式W+R&amp;gt;N，保证某个数据不被两个不同的事务同时读和写；公式W&amp;gt;N/2保证两个事务不能并发写某一个数据。 在分布式系统中，数据的单点是不允许存在的。即线上正常存在的Replica数量为1的情况是非常危险的，因为一旦这个Replica再次出错，就可能发生数据的永久性错误。假如我们把N设置成为2，那么只要有一个存储节点发生损坏，就会有单点的存在，所以N必须大于2。N越高，系统的维护成本和整体成本就越高。工业界通常把N设置为3。例如，对于MySQL主从结构，其NWR数值分别是N= 2, W = 1, R = 1，没有满足NWR策略。而Swift的N=3, W=2, R=2，完全符合NWR策略，因此Swift系统是可靠的，没有单点故障。&lt;/p&gt;

&lt;p&gt;Zone&lt;/p&gt;

&lt;p&gt;如果所有的Node都在一个机架或一个机房中，那么一旦发生断电、网络故障等，都将造成用户无法访问。因此需要一种机制对机器的物理位置进行隔离，以满足分区容忍性（CAP理论中的P）。因此，Ring中引入了Zone的概念，把集群的Node分配到每个Zone中。其中同一个Partition的Replica不能同时放在同一个Node上或同一个Zone内。注意，Zone的大小可以根据业务需求和硬件条件自定义，可以是一块磁盘、一台存储服务器，也可以是一个机架甚至一个IDC。&lt;/p&gt;

&lt;p&gt;Weight&lt;/p&gt;

&lt;p&gt;Ring引入Weight的目的是解决未来添加存储能力更大的Node时，分配到更多的Partition。例如，2TB容量的Node的Partition数为1TB的两倍，那么就可以设置2TB的Weight为200，而1TB的为100。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/150414_4.jpg&quot; alt=&quot;一种Swift部署集群&quot; /&gt;&lt;/p&gt;

&lt;p&gt;实例分析&lt;/p&gt;

&lt;p&gt;图4中是新浪SAE在测试环境中部署的Swift集群，集群中又分为5个Zone，每个Zone是一台存储服务器，每台服务器上由12块2TB的SATA磁盘组成，只有操作系统安装盘需要RAID，其他盘作为存储节点，不需要RAID。前面提到过，Swift采用完全对称的系统架构，在这个部署案例中得到了很好的体现。图4中每个存储服务器的角色是完全对等的，系统配置完全一样，均安装了所有Swift服务软件包，如Proxy Server、Container Server和Account Server等。上面的负载均衡（Load Balancer）并不属于Swift的软件包，出于安全和性能的考虑，一般会在业务之前挡一层负载均衡设备。当然可以去掉这层代理，让Proxy Server直接接收用户的请求，但这可能不太适合在生产环境中使用。 图4中分别表示了上传文件PUT和下载文件GET请求的数据流，两个请求操作的是同一个对象。上传文件时，PUT请求通过负载均衡随机挑选一台Proxy Server，将请求转发到后者，后者通过查询本地的Ring文件，选择3个不同Zone中的后端来存储这个文件，然后同时将该文件向这三个存储节点发送文件。这个过程需要满足NWR策略（Quorum Protocol），即3份存储，写成功的份数必须大于3/2，即必须保证至少2份数据写成功，再给用户返回文件写成功的消息。下载文件时，GET请求也通过负载均衡随机挑选一台Proxy Server，后者上的Ring文件能查询到这个文件存储在哪三个节点中，然后同时去向后端查询，至少有2个存储节点“表示”可以提供该文件，然后Proxy Server从中选择一个节点下载文件。&lt;/p&gt;

&lt;p&gt;小结&lt;/p&gt;

&lt;p&gt;Swift简单、冗余、可扩展的架构设计保证了它能够用于IaaS的基础服务。在Rackspace Cloud Files服务两年的运行积累使得Swift代码变得越来越成熟，目前已部署在全球各地的公有云、私有云服务中。随着OpenStack的不断完善和发展，Swift将得到更广泛的应用。&lt;/p&gt;

&lt;p&gt;作者程辉，新浪云计算技术经理，2009年加入新浪SAE，曾担任SAE系统开发工程师和运维负责人。2011年初开始研究OpenStack，并组建团 队，成立基于OpenStack的项目SWS（Sina Web Services），为新浪内部和合作伙伴提供IaaS层服务。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Madhouse携手Hero App正式启动与程序化购买平台PremiumMad的对接测试</title>
      <link>http://lilifeng.net/blogs/2015/04/13/madhouse-pdb-hero-app/</link>
      <pubDate>Mon, 13 Apr 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>市场</category>
      
      
      <category>广告平台</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/04/13/madhouse-pdb-hero-app/</guid>
      <description>&lt;p&gt;亿动广告传媒（Madhouse）携手多米，暴风影音等40多家Hero App，正式启动与程序化购买平台优道（PremiumMad）的对接测试，为品牌广告主提供更加多元化的移动广告服务。&lt;/p&gt;

&lt;p&gt;目前，优道（PremiumMad）已经陆续展开了与40多家Hero App的合作，包括酷狗，暴风影音，外滩画报，VIVA，妈妈帮和蜻蜓FM等。这些Hero App囊括了社交，音乐，新闻，阅读以及广播收听等十大热门移动应用类别，为移动广告的投放提供了优质的内容资源，在保证品牌安全的同时又确保了广告品质的定位。&lt;/p&gt;

&lt;p&gt;首批接入成功的Hero App包括多米，优听等音乐类的移动应用。今日头条，搜狐视频和玩图等其他热门应用也将逐步启动与PremiumMad的合作。&lt;/p&gt;

&lt;p&gt;优道（PremiumMad）是一个以优质内容为核心的移动广告平台，通过与多个Hero App的对接，广告主可以进行高效地移动广告程序化直购（Programmatic Direct Buying, PDB）。&lt;/p&gt;

&lt;p&gt;优质内容的程序化购买在确保精准定位目标受众的同时，也打破了Hero App陈旧的单一购买形式。不仅降低了广告活动中的人力成本，提高了管理效率，也优化了最终的广告效果。对于品牌广告主而言，在预算不变的情况下，PremiumMad能够提供更多的优质内容和解决方案。&lt;/p&gt;

&lt;p&gt;除了实现与Hero App的合作，PremiumMad还创新性地推出了动态垂直优化（Dynamic Vertical Optimization，DVO）服务，即将不同的广告物料在不同类别的Hero App中对同一个独立用户进行展示，加深用户与广告的互动。&lt;/p&gt;

&lt;p&gt;原生广告（Premium Native）也是该平台的一大优势。通过与Hero App的对接，我们可以利用不同的个性化版位与主流App开展深入合作，在不影响用户使用习惯的情况下，增强受众与广告的互动。&lt;/p&gt;

&lt;p&gt;优道（PremiumMad）是亿动广告传媒（Madhouse）程序化购买旗舰平台的产品之一，主要服务于品牌广告主。该平台在今年内将启动与100家Hero App的合作，不断扩大其覆盖的内容和用户。&lt;/p&gt;

&lt;p&gt;此外，亿动广告传媒（Madhouse）的程序化购买旗舰平台还包括确保提升ROI的App推广平台亿道（PerforMad），智能的In-App广告网络智道（SmartMad）和即时高效的受众扩充平台竞道（OptiMad）。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>某电商网站流量劫持案例分析与思考</title>
      <link>http://lilifeng.net/blogs/2015/04/12/site-connect-robbed-analyze/</link>
      <pubDate>Sun, 12 Apr 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>网络安全</category>
      
      
      <category>mobile</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/04/12/site-connect-robbed-analyze/</guid>
      <description>&lt;p&gt;【前言】&lt;/p&gt;

&lt;p&gt;自腾讯与京东建立了战略合作关系之后，笔者网上购物就首选京东了。某天在家里访问京东首页的时候突然吃惊地发现浏览器突然跳到了第三方网站再回到京东，心里第一个反应就是中木马了。&lt;/p&gt;

&lt;p&gt;竟然有这样的事，一定要把木马大卸八块。&lt;/p&gt;

&lt;p&gt;【原因排查】&lt;/p&gt;

&lt;p&gt;首先在重现的情况下抓包，京东官网确实返回了一段JavaScript让浏览器跳转到了yiqifa.com。&lt;/p&gt;

&lt;p&gt;下图是应用层的抓包。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/150412_1.png&quot; alt=&quot;应用层的抓包&quot; /&gt;&lt;/p&gt;

&lt;p&gt;服务器返回的代码导致跳转，基本可以排除本地木马，推测是网络或者服务器的问题。根据笔者的经验，这种情况很大可能是链路上的流量劫持攻击。当然也不能排除京东服务器被黑的情况。&lt;/p&gt;

&lt;p&gt;继续排查。应用层已经不行了，我们要用Wireshark抓网络层的包。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/150412_2.png&quot; alt=&quot;网络层的包&quot; /&gt;&lt;/p&gt;

&lt;p&gt;从Wireshark结果可以看到，网络上出现了两个京东的HTTP响应。第一个先到，所以浏览器执行里面的JavaScript代码转到了yiqifa.com；第二个HTTP响应由于晚到，被系统忽略（Wireshark识别为out-of-order）。&lt;/p&gt;

&lt;p&gt;两个京东的HTTP响应包，必然一真一假。快揭示真相了。&lt;/p&gt;

&lt;p&gt;再来看看两个HTTP响应的IP头。&lt;/p&gt;

&lt;p&gt;第一个包TTL值是252，第二个包TTL值是56，而之前TCP三次握手时京东服务器的TTL值是56，故可以判断先到的包是伪造的，真的包晚到而被系统忽略。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/150412_3.png&quot; alt=&quot;包TTL值是252&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/150412_4.png&quot; alt=&quot;包TTL值是56&quot; /&gt;&lt;/p&gt;

&lt;p&gt;至此，确认是链路上的劫持。&lt;/p&gt;

&lt;p&gt;更多链路劫持攻击的信息可以先看看笔者之前写的文章《链路劫持攻击一二三》。&lt;/p&gt;

&lt;p&gt;【攻击方式】&lt;/p&gt;

&lt;p&gt;继续分析伪造的数据包。&lt;/p&gt;

&lt;p&gt;伪造包的TTL值是252，也就是说它的原始TTL值应该是255（大于252的系统默认TTL值只能是255了，一般不会修改），也就表明攻击者的设备离我隔了3个路由；而正常的京东网站的HTTP响应TTL值是56，隔了8个路由。物理上假的设备离我近，所以伪造的HTTP响应会先到——比较有意思的是，笔者实际监测时候发现也有伪造包晚到导致劫持失败的情况。&lt;/p&gt;

&lt;p&gt;推测是一个旁路设备侦听所有的数据包，发现请求京东首页的HTTP请求就立即返回一个定制好的HTTP响应。大致的攻击示意图如下。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/150412_5.png&quot; alt=&quot;攻击示意图&quot; /&gt;&lt;/p&gt;

&lt;p&gt;当时笔者推测攻击者在链路上大动干戈应该不会只针对一个网站，于是就访问了下易迅、淘宝、天猫这些电商网站，结果发现易迅也受到同样的攻击。看起来这次流量劫持的目的是将电商网站流量导给返利联盟，通过返利联盟获得当前用户成交金额的返利。&lt;/p&gt;

&lt;p&gt;基本确认运营商有问题，但是无法确认是运营商官方故意的还是遭到黑客攻击或者是内部人士偷偷搞的。&lt;/p&gt;

&lt;p&gt;【攻击源定位】&lt;/p&gt;

&lt;p&gt;来看看当时的路由结果：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/150412_6.png&quot; alt=&quot;路由结果&quot; /&gt;&lt;/p&gt;

&lt;p&gt;如果按初始TTL值为255来算，HTTP包到达本机后为252，推算出经过了3（255-252）个路由，出问题的地方就在第4个路由附近，也就是这里的119.145.220.86（属于深圳电信）。&lt;/p&gt;

&lt;p&gt;当然了，虽然基本可以确认是第四个路由附近的问题（笔者连续几天抓包，伪造的HTTP响应包TTL值一直是252），但是不排除设备故意构造一个初始TTL值（比如设置为254）来增加追查难度，为了严谨的治学态度及避免被攻击者迷惑，所以证据要坐实了。&lt;/p&gt;

&lt;p&gt;定位比较简单，既然攻击设备是旁路侦听数据包，可以推测它是基于包而非状态的，我们构造被侦听的数据包（也就是直接发出访问京东首页的HTTP请求TCP包，不需要三次握手）多次发送，TTL值从1开始递增，精确地传递数据包到每一个路径上，直到出现伪造响应——没有问题的位置是不会有响应的，第一个出现伪造响应的位置就是出问题的位置。&lt;/p&gt;

&lt;p&gt;这个时候就需要一个数据包构造工具了，基于Python的Scapy或者Windows下的XCAP都行。&lt;/p&gt;

&lt;p&gt;于是一路发过去，TTL值等于4的时候伪造的响应包出现了——确认就是第四跳路由出问题了，同时119.145.55.14回复了Time-to-live Exceeded的ICMP包。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/150412_7.png&quot; alt=&quot;ICMP包&quot; /&gt;&lt;/p&gt;

&lt;p&gt;【问题处理】&lt;/p&gt;

&lt;p&gt;有了充分证据，于是整理了一个图文并茂的文档通过腾讯安全应急响应中心向深圳电信报障。&lt;/p&gt;

&lt;p&gt;一天后得到运营商答复：“经核查，深圳本地没有进行推送，经网上查询有木马或病毒会导致此现象，非电信网内问题，请进行杀毒后再测试，谢谢”。运营商还附送了这则2013年的新闻：《淘宝易迅纷纷遭木马劫持，电脑管家独家首发专杀工具》。&lt;/p&gt;

&lt;p&gt;不过从当天晚上起，我再在ADSL环境测试，就没有发现这种流量劫持现象了。&lt;/p&gt;

&lt;p&gt;【攻防之道】&lt;/p&gt;

&lt;p&gt;链路劫持对企业和用户都是很麻烦的，影响用户体验，还泄漏敏感信息，而且还是分地域的，检测和防御起来也相对困难。&lt;/p&gt;

&lt;p&gt;链路劫持已经被某些人运用的炉火纯青。比如近期业界发现部分区域的百度联盟广告脚本被植入恶意JavaScript去DDoS攻击GitHub。&lt;/p&gt;

&lt;p&gt;腾讯历史上也遇到过多起链路劫持攻击，目的性很强，大部分是插广告（少部分是钓鱼和挂马），攻击手法各种各样，有运营商的区域DNS劫持和链路劫持、运营商区域DNS Server遭到缓存投毒攻击（利用CVE-2007-2926，非常经典）、开发商在路由软件中植入劫持代码、CDN与源通信遭到ARP攻击、用户PC本地木马。当然，这些目前都已经解决了，也在持续监测中。&lt;/p&gt;

&lt;p&gt;为了对抗链路劫持，很多腾讯业务也都使用了HTTPS或者私有协议，比如QQ Web登录、QQ邮箱、理财通、Web微信、微信公众平台等。&lt;/p&gt;

&lt;p&gt;DNS劫持攻击相对容易检测和防护。&lt;/p&gt;

&lt;p&gt;检测方面，用分布的点去进行DNS查询即可，发现运营商DNS结果不对就可以推动修复。腾讯在2010年起就建设了DNS劫持监控系统，有兴趣的朋友可以去读下这篇文章。&lt;/p&gt;

&lt;p&gt;防护方面，一种方案是使用DNSSEC（DNS Security Extensions）；腾讯、114DNS还研发了自己的方案——HttpDNS。HttpDNS不使用DNS协议而是通过HTTP协议从HttpDNS后端服务器获取域名对应的IP。当然，类似的思路我们可以实现一堆了：HTTPSDNS、TCPDNS、UDPDNS、ICMPDNS……&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/150412_8.png&quot; alt=&quot;HttpDNS基本原理&quot; /&gt;&lt;/p&gt;

&lt;p&gt;链路劫持相对复杂。&lt;/p&gt;

&lt;p&gt;检测方面，如有客户端，可以依靠客户端进行检测；如果没有客户端，就具体情况具体分析了，可以在网页里用JavaScript检测页面元素，甚至可以在全国重要城市租用ADSL探测。&lt;/p&gt;

&lt;p&gt;另外，在机房的流量监控设备里会发现异常：比如这个案例就会出现用户接收了HTTP响应后没有回应，然后URL中又带了yiqifa.com的关键字重新访问主页的情况；再比如某些设备的HTTP阻断会向服务器发特定的RST包（我见过发IP Id为8888的案例）。&lt;/p&gt;

&lt;p&gt;防护方面，这个案例只是伪造数据包，并没有实施阻断，所以只要客户端的安全软件把疑似出问题的包（一次TCP会话中TTL值相差很大或者IPId突然跳变）拦截就可以防御。为了避免误杀，可以拦截并休眠1秒，如果没有同样的数据包过来再放行。&lt;/p&gt;

&lt;p&gt;有自己客户端的可以走自己的私有协议，网站类就困难一些，部署HTTPS吧。百度主页近期就使用了HTTPS，不过大部分用户还是不习惯在浏览器里输“https://”，所以还是存在被劫持的风险（类似的工具有SSLStrip）。当然了，对抗也会随之升级的，比如这次发现的GMail证书伪造事件。&lt;/p&gt;

&lt;p&gt;在HTTPS尚不能大规模普及的情况下，是否可以给用户或者终端软件提供一个规避链路劫持的安全服务呢？似乎是可以的。下图是笔者构想的一个简单的通过本地代理软件加云服务的方式规避不安全ADSL链路的解决方案。　　&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/150412_9.png&quot; alt=&quot;本地代理软件加云服务的方式规避不安全ADSL链路&quot; /&gt;&lt;/p&gt;

&lt;p&gt;一些浏览器的云加速也客观上实现了这个功能。对于安全性不确定的公共WiFi，也可以用类似的方法来规避风险。&lt;/p&gt;

&lt;p&gt;【后记】&lt;/p&gt;

&lt;p&gt;希望本文对你有帮助。在链路劫持防护这件事上，腾讯欢迎与业界讨论甚至合作。&lt;/p&gt;

&lt;p&gt;来源:腾讯安全应急响应中心&lt;/p&gt;

&lt;p&gt;转自：开发者kaifax&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>移动DSP的核心：有流量？用流量？优流量？</title>
      <link>http://lilifeng.net/blogs/2015/04/11/core-of-mobile-dsp/</link>
      <pubDate>Sat, 11 Apr 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>市场</category>
      
      
      <category>广告平台</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/04/11/core-of-mobile-dsp/</guid>
      <description>&lt;p&gt;概述：随着越来越多的流量平台开放移动流量，今天的移动广告市场，已经呈现流量供给充足，消耗有序进行的状态，在流量消耗端口的移动DSP显然是移动广告流量重要的一环，对于移动流量的把关作用，移动DSP的重要性不言而喻。&lt;/p&gt;

&lt;p&gt;目前，国内市场上可以对接的移动Ad Exchange流量平台已经有近二十家，整个大陆地区总体移动流量大约为40多亿，随着移动人群的增加，这一数字还在不断攀升中，移动流量呈现整体充裕状态。&lt;/p&gt;

&lt;p&gt;但同时，由于不同流量平台间的流量差异，移动流量也会有所差别，因此，移动DSP平台在进行广告投放上，需要对流量有足够的需求与认识，才能存有更多优质的流量供广告主消耗，那么对于移动DSP如何把好流量关呢？力美DSP运营部负责人认为需要做到这三个方面：有流量、用流量、优流量。因此，在某种程度上，流量意味着DSP的生命，把控流量就成了一个重要的问题。&lt;/p&gt;

&lt;p&gt;##对接多方平台 保证流量供应&lt;/p&gt;

&lt;p&gt;丰富一个成熟的移动DSP平台，在流量供给上需要有足够的流量，保证有足够的流量就需要对接多个Ad Exchange平台，保证广告主有足够的流量消耗。目前力美DSP对接国内外主要的流量平台包括：谷歌、InMobi、MoPub、MobFox、芒果、木瓜、腾讯、百度、优酷、爱奇艺、搜狐、聚效、PPTV等平台，国内供应流量超过40亿，加上等国外流量，力美DSP已经实现全球100亿对接流量。足够庞大的流量供应能够满足各类品牌广告的投放需求。&lt;/p&gt;

&lt;p&gt;流量丰富从另一个层面上来还体现在流量的来源不同，我们以看力美DSP对接的流量有国内的主要流量平台，同时还有国外的流量供应方，全球性布局不仅可以增加流量供应，为投放方提供本地化的广告流量和细致化的数据维度。从平台属性来看，有搜索、视频、社交等不同媒体属性的流量，媒体属性的丰富性让广告有更多的表现形式，在保证投放规模和投放质量的同时提升广告的冲击力和互动性，这也是为什么需要第三方平台来做移动DSP原因，除去公平性的原则，还可以确保流量的多样性，即数据的多维性。&lt;/p&gt;

&lt;p&gt;##消耗多 更新快 自动优化优质流量&lt;/p&gt;

&lt;p&gt;理想状况下，Ad Exchange会给DSP(需求方平台)提供足够多的流量空间,让他们完成真正的精准营销.移动DSP则通过海量的数据运算，获得每个移动用户的流量数据，在不获取用户隐私的情况下，判断出用户属性、行为特征，而后采用标签分类的方式将其进行多维度的归类。广告主按照一个展示或者一个点击付费，而移动DSP平台为了获得更多的点击，就必须很精准地找到目标受众，这背后就需要对目标人群进行深度精准挖掘，发现流量数据隐藏着的价值。&lt;/p&gt;

&lt;p&gt;移动DSP只有持续不断的消耗流量才能体现出流量的价值，持续不断的流量消耗，一方面能够在消耗的过程中发现哪些流量的投放表现好，另一方面通过消耗更能获得对接平台的优质流量，Ad Exchange对消耗量大的移动DSP会放更多的流量，对消耗少的平台自然放的量也就相应的更少，因此消耗流量大的平台获得更多的流量选择流量的余地获得优质流量的机会也就更大，有更多的优质流量广告的投放效果就会更好。&lt;/p&gt;

&lt;p&gt;移动流量已经成为全球移动互联网广告的一个重要发展趋势，并为广告主带来了前所未有的移动营销价值。随着移动用户的增长，移动需求方和媒体方的不断加入，移动流量在移动程序化产业生态链条中将产生更多的价值，如何运用好流量帮助移动广告程序化产业链条各方从中受益，推动中国移动广告产业整体向前发展，值得移动营销行业精英们共谋协议。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>【深挖】品牌程序化购买具体细节Programmatic Buying tech stack</title>
      <link>http://lilifeng.net/blogs/2015/04/10/programmatic-buying-tech-stack/</link>
      <pubDate>Fri, 10 Apr 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>市场</category>
      
      
      <category>广告平台</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/04/10/programmatic-buying-tech-stack/</guid>
      <description>&lt;p&gt;##1. Adserving 第三方广告伺服&lt;/p&gt;

&lt;p&gt;最近经常有专业人士问，互联网广告为何需要要adserving？adserving在中国以前都是由publisher或者adnetwork免费提供的，它是一种广告弹射方式，也是一种承载带宽的高阶tracking，为何广告主要为Doubleclick，Sizmek，秒针，筷子科技的adserving支付额外费用（预算的2%-15%根据素材尺寸大小)，而不用免费的呢？adserving能提供的report，普通监测也能提供，为何需要有这么一环adserving在广告生态中？在国外还衍生出这么多上市企业？&lt;/p&gt;

&lt;p&gt;这个问题确实比较难回答，首先小编先植入读者一个概念叫做“需方控制权，“demand side control power”。&lt;/p&gt;

&lt;p&gt;可以这么说，现如今中国的数字品牌广告Campaign从投放的一瞬间开始，需方控制权基本上就丧失了，广告主或者agency，Campaign中只能拿着第三方监测公司的tracking report去做一些事后诸葛亮的事，补些流量啥的。&lt;/p&gt;

&lt;p&gt;Tracking技术在创意，策略，效果根本没法实时优化，所以现在Agency都在努力为广告主争取adserving环境。其实就是为广告主在争需方控制权。&lt;/p&gt;

&lt;p&gt;而adserving的环境就能够在四个维度（设计、投放、管理、统计）上进行任意调整，达到需方控制的总目的。任何维度的调整都可以是程序化的，做到透明并且可控。 值得注意的是在这里，adnetwork，dsp与publisher只是投放渠道，需方控制必须在需方，而不是在利益冲突方。 当然这里说的是百万RMB以上预算所应有的需方控制权。值得一提的是，用了Adserving 就不用ad tracking了，因为report与控制权都在需方了。&lt;/p&gt;

&lt;p&gt;以下是小编采访Sizmek 副总裁关于adserving的对话很说明问题&lt;/p&gt;

&lt;p&gt;Mark Kalus：Adserving 是欧美广告数字投放的标配，Adserving存在的目的主要两个：&lt;/p&gt;

&lt;p&gt;第一简化广告主与发布商的之间的流程并扮演第三方的角色，不能小看第三方的作用，任何买卖都需要第三方，实际上我们解决的是诚信与费用交割问题，广告主的支付往往在我们的报表之后。如果广告主的常规预算在10万-20万美金左右，可能不会考虑用国际级的第三方Adserving供应商，但是如果预算是100万美元-200万美元往上的级别，第三方是必须有的。&lt;/p&gt;

&lt;p&gt;第二在Adserving基础之上，我们又可以做富媒体，动态创意展示，甚至获得广告主需要的Campaign洞察。数据的获取是一方面，数字广告战役的成功的最重要方面则是Adserving，创意优化还有富媒体的配合。根据comScore的调研，一次成功的数字广告战役，创意的呈现4倍重要于媒体的排期安排。创意占广告成功的52%权重，而媒体排期只有13%.&lt;/p&gt;

&lt;p&gt;##2：BrandSafety 品牌安全&lt;/p&gt;

&lt;p&gt;BrandSafety有事前与事后，有了Adserving广告的需方控制权，需方就能做到事前BrandSafety，由品牌保护科技公司保护广告主的品牌资产，这里品牌保护公司需要有iframe嵌套穿透 与广告位分级技术。传统数字广告投放充满不符合品牌策略的投放，用了程序化购买反而更能做到BrandSafety。&lt;/p&gt;

&lt;p&gt;##3：Viewability 可见曝光&lt;/p&gt;

&lt;p&gt;怎么衡量Viewability呢？根据IAB目前的调研，publisher必须遵循Safeframe，才能实现viewability的测量，所以这里需要协会大力推进safeframe的代码布置方式，并且测量机构提Viewability测量的时候必须提有没有对应的safeframe环境。&lt;/p&gt;

&lt;p&gt;##4. Brand Performance  品牌效果&lt;/p&gt;

&lt;p&gt;要实现viewability测量环境，产业链估计还要等一两年，没有了Viewability广告主怎么衡量品牌效果呢？ 欧美提供了一些结算方式，当然也是基于adserving的。&lt;/p&gt;

&lt;p&gt;engagement rate  （消费者与广告互动的率， 点击，玩耍，回答问题） 欧美Tremo,tubemogul 等上市视频效果广告公司甚至根据engagement来结账，一次engagement  2美元。&lt;/p&gt;

&lt;p&gt;dwelling rate （鼠标移到广告里的时长率）&lt;/p&gt;

&lt;p&gt;IGRP （根据第三方数据来算抵达率）&lt;/p&gt;

&lt;p&gt;回搜率 （由搜索引擎提供的归因分析）&lt;/p&gt;

&lt;p&gt;##5. Brand Lift  品牌意向&lt;/p&gt;

&lt;p&gt;到底消费者有没有购买意向呢？Brandlift 到底有没有？&lt;/p&gt;

&lt;p&gt;尼尔森收购了一家公司叫Vizu，它的主要目的是将问卷调查混入广告创意与媒体投放，取控制sampling 与曝光sampling 两个用户群，看曝光sampling与控制sampling的态度变化对比，实时做调查，实时调整广告。&lt;/p&gt;

&lt;p&gt;比如你会看到广告创意： 你最近看到肯德基广告了吗？你觉得肯德基是负责任的企业吗？其实都是调查。&lt;/p&gt;

&lt;p&gt;##Demand Side Brand exchange（programmatic direct buy）： 需方品牌交换市场,程序化直接购买&lt;/p&gt;

&lt;p&gt;宝洁的鹰眼，GroupM 目前都在海内外搭建 Demand Side Brand exchange， 说的是同集团广告需求一旦多样化了，就可以通过母集团采购独有的流量，在创造了adserving环境的情况下，在集团内部做优化，给不同的品牌做曝光优化。 有点像以前的adnetwork 但adserving ，BrandSafety等是第三方的。集团只做采购层面的exchange。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>秒针系统整体出售旗下Exchange广告交易平台业务</title>
      <link>http://lilifeng.net/blogs/2015/04/03/adnews-miaozhen/</link>
      <pubDate>Fri, 03 Apr 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>市场</category>
      
      
      <category>广告平台</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/04/03/adnews-miaozhen/</guid>
      <description>&lt;p&gt;秒针系统近日宣布，已将旗下Exchange平台业务出售至动灵资本，该交易已于2015年2月完成。动灵资本将把该部分业务重组后纳入旗下北京灵集科技有限公司，更名为ADsTrader广告交易平台。原秒针Exchange平台拥有的全部相关技术、数据和业务，将完全整合至灵集科技所属ADsTrader 广告交易平台之中。&lt;/p&gt;

&lt;p&gt;与此同时，原秒针系统首席执行官祝伟亦于交易公布当日宣布卸任秒针系统内所有职务，转而加入北京灵集科技有限公司，出任首席执行官，负责ADsTrader 广告交易平台的发展战略及管理运营。&lt;/p&gt;

&lt;p&gt;对于此项交易，秒针系统创始人兼董事长吴明辉表示：“这是一个双赢的交易，一方面，动灵资本得以进入具有广阔发展前景的程序化广告交易市场，该业务从秒针系统出售独立发展之后在市场上会有更好地发展空间；另一方面，在剥离了广告交易业务之后，秒针系统将拥有更加纯正的独立第三方身份，将为数字营销领域的客户提供包括第三方广告监测、第三方广告投放管理、社会化媒体监测分析、电子商务数据分析服务在内的全方位营销技术解决方案，持续为品牌提供优质的数据资产管理技术服务。”&lt;/p&gt;

&lt;p&gt;新任灵集科技首席执行官祝伟则表示：“ADsTrader的业务将在原有秒针广告平台交易业务的基础上，进行进一步的延伸和优化。全力打造一个让整个行业受益的程序化广告资源交易平台。”&lt;/p&gt;

&lt;p&gt;从上月宣布战略投资脉讯到整体出售旗下Exchange平台，一系列令人眼花缭乱的资本运作的背后，是秒针系统为未来发展及上市勾画出的更加清晰的战略路径：秒针将进一步强化基于大数据、云存储和人工智能的技术开发和市场拓展，持续为中国广告主和数字行业提供中立、公正、科学、可靠的数据和有效的技术应用，推动中国数字营销行业的创新和发展。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>基于C++的Hadoop Map/Reduce框架--HCE</title>
      <link>http://lilifeng.net/blogs/2015/03/31/hadoop-cpp-hce/</link>
      <pubDate>Tue, 31 Mar 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>大数据</category>
      
      <category>Hadoop</category>
      
      
      <category>Internet</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/03/31/hadoop-cpp-hce/</guid>
      <description>&lt;p&gt;Hadoop系统提供了MapReduce计算框架的开源实现，像Yahoo!、Facebook、淘宝、中移动、百度、腾讯等公司都在借助Hadoop进行海量数据处理。Hadoop系统性能不仅取决于任务调度器的分配策略，还受到分配后实际任务执行效率的影响，任务执行常常涉及读取、排序、归并、压缩、写入等具体阶段。&lt;/p&gt;

&lt;p&gt;HCE计算框架是一个开源项目，旨在通过优化任务执行的各个阶段，提升整个Hadoop系统的效率。与Hadoop Java框架相比，基于HCE框架的MapReduce任务最高可以节省超过30%的CPU资源使用。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/150331_1.jpg&quot; alt=&quot;Hadoop生态系统中的HCE计算框架&quot; /&gt;&lt;/p&gt;

&lt;p&gt;图1 Hadoop生态系统中的HCE计算框架&lt;/p&gt;

&lt;p&gt;图1给出了HCE框架在Hadoop生态系统中所处的位置。对于OLTP系统来说，用户通过Web前端生成相应请求，请求经过中间件处理，作为数据进入数据库或者K-V存储系统中，同时会产生日志。OLTP系统产生的数据和日志都会作为分析系统的输入，对于搜索引擎和广告系统来说，每天的日志会轻松超过TB。日志和业务数据一般会存放到海量存储系统HDFS文件系统或者K-V存储系统中，分布式计算框架MapReduce一般会基于存储系统之上。每天会执行成千上万的MapReduce作业进行海量数据处理，产生的结果会有三个去处：存放于海量存储系统以备后续使用；导入用于产生报表或分析的数据库；作为OLTP系统的输入，导入线上存储中。MapReduce作业一般由内部用户通过Hadoop原生客户端、Pig/DISQL语言客户端或者Hive数据仓库三种方式进行提交，作业执行结果可以通过SQL客户端查询。&lt;/p&gt;

&lt;p&gt;#问题&lt;/p&gt;

&lt;p&gt;越来越多的公司开始使用Hadoop及其周边系统进行海量数据分析，Yahoo!和Facebook的Hadoop集群节点数已经过万，并且节点增长的趋势不减，国内公司如腾讯和百度等也面临着同样的问题。不断增长的业务需求和业务数据导致的集群资源紧缺是集群不断扩容的主要原因，CPU资源（注：存储资源紧缺的解决方案之一是开启重量级的压缩（如Facebook），这涉及CPU资源的使用）又是其中最为紧缺的。为了控制成本，优化集群资源利用率势在必行。&lt;/p&gt;

&lt;p&gt;对于分布式计算层面，资源优化有两个途径：一是通过精细化的资源调度来保证全局资源的最大化利用，这通常涉及合理的资源调度算法和轻量级的资源隔离；二是通过优化计算任务和用户程序来提升原有计算作业的资源使用率。HCE计算框架主要关注后者。&lt;/p&gt;

&lt;p&gt;##跨平台、高扩展、通用接口的计算框架也带来了额外开销&lt;/p&gt;

&lt;p&gt;分析Hadoop MapReduce计算框架，已有实现可以再做权衡。&lt;/p&gt;

&lt;p&gt;MapReduce框架通过Java语言高效实现，保证了其跨平台的兼容性；不过国内互联网公司一般都使用Intel x86平台，兼容性的优势很难得以体现，因此可以选择优于Java性能但不支持跨平台的语言来实现MapReduce框架。&lt;/p&gt;

&lt;p&gt;为了最大化可扩展性（Extensibility），Hadoop实现了多层级的数据处理流封装，这使得Java框架在大数据处理时存在一些性能损耗，实际上可以实现更加直接的数据处理路径来提升处理效率。&lt;/p&gt;

&lt;p&gt;国内互联网公司的工程师们大多使用C++进行功能开发或脚本语言来处理文本，Java接口对于他们而言是比较麻烦的事情。Hadoop提供了Streaming编程接口，允许用户程序可以通过媒介——标准输入输出来和计算框架交互数据，也即绕开了语言的限制，因此很多用户任务是通过Streaming接口启动的。Streaming接口的优势在于支持多语言开发，而增加通用性带来的是性能的损耗，即数据拷贝管道和Key切分开销（大约2%～5%），并且不如原生态的语言接口更加适宜编程。&lt;/p&gt;

&lt;p&gt;##用户程序在计算框架控制之外&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/150331_2.jpg&quot; alt=&quot;MapReduce任务执行框架示意图&quot; /&gt;&lt;/p&gt;

&lt;p&gt;图2 MapReduce任务执行框架示意图&lt;/p&gt;

&lt;p&gt;除了框架的开销，计算任务的资源占用还包括用户程序。如图2所示，Hadoop Streaming和Pipes框架支持C++用户开发MapReduce应用程序，框架启动用户可执行程序，框架和用户程序分别处于两个进程，分别占用资源。简单的分析程序不会占用太多的CPU资源，即用户程序在整个计算任务执行时间中所占比例不大，此时，优化计算框架会带来比较可观的收益；不过，对于复杂的分析程序而言，用户程序所占时间远远超过计算框架，此时，优化计算框架带来的收益可能微乎其微。因此，节省集群CPU资源离不开优化用户程序。&lt;/p&gt;

&lt;p&gt;优化用户作业可以分为两个层面，一是通过较高层次的统一入口让用户提交作业，例如使用数据仓库Hive的用户不会操作Hadoop MapReduce的API，在Hive内部统一做优化，包括一些静态或者动态方法，调整用户作业参数，使任务利用最少资源高效执行；二是优化直接操作MapReduce API的用户作业，当然Hive也属于这个范畴。设想用户作业或者数据仓库是通过C++语言实现的，编译由用户实施，平台仅仅通过接口调用用户的可执行程序，那么此时想要优化用户程序会比较困难。有动态和静态两种优化方式：动态优化方式（注：详情参见Starfish: A Selftuning System for Big Data Analytics (CIDR’11)）是在MapReduce上新增一层，通过profiler和sampler等技术动态调整作业参数；静态优化方式是让用户用编译时依赖框架提供的头文件和库文件，通过编译优化技术提升用户程序性能。&lt;/p&gt;

&lt;p&gt;#解决&lt;/p&gt;

&lt;p&gt;HCE计算框架通过静态优化计算框架和用户程序来提升计算任务的CPU使用率。如图2所示，将框架和用户程序整合到一个进程，可以通过同一套编译机制同时优化框架和用户程序，Key-Values处理也处于同一个进程空间，不用借助媒介（管道或套接字）来传递。HCE和Hadoop提供的用户编程接口如表1所示。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/150331_2.jpg&quot; alt=&quot;MapReduce框架各用户接口对比&quot; /&gt;&lt;/p&gt;

&lt;p&gt;表1 MapReduce框架各用户接口对比&lt;/p&gt;

&lt;p&gt;##计算框架高效C++实现&lt;/p&gt;

&lt;p&gt;HCE框架通过C++语言实现了MapReduce的数据处理逻辑，依托比Java性能更优的C++语言，可以在数据处理操作上获得更佳的CPU利用率，同时也可以更加直接地调用Native Lib而非通过JNI（注：压缩库是Native实现，Hadoop通过JNI来调用压缩方法，HCE压缩在一个进程空间执行）；此外，通过高效的编译优化方法，例如ICC编译器等，可以进一步挖掘框架的性能优势。&lt;/p&gt;

&lt;p&gt;HCE框架通过精简的方式实现了MapReduce的数据处理流程，比较多层次的Java流式封装，HCE的处理流程更加高效。&lt;/p&gt;

&lt;p&gt;HCE框架提供了多种语言接口C++、Python等，方便了用户编程，也节省了Streaming接口的额外开销；同时HCE也提供完全兼容原有Java Streaming的接口，即原有作业可以无缝迁移到HCE框架。&lt;/p&gt;

&lt;p&gt;##用户程序静态编译优化&lt;/p&gt;

&lt;p&gt;HCE框架采用的是静态优化用户程序的方式，动态优化交给上层的数据仓库去做。对于那些CPU负载较重的用户程序，HCE提供C++编程接口给用户，用户编译本地程序需要依赖框架的头文件和库文件，头文件中内置了如SSE等优化代码，可以使得用户程序在编译时被优化。这种简单的方式能够使得用户程序的执行效率大幅提升。&lt;/p&gt;

&lt;p&gt;#框架&lt;/p&gt;

&lt;p&gt;HCE框架实现了Hadoop支持的功能组件，例如在C++空间中支持Text或者SequenceFile格式的RecordReader和RecordWriter，也支持Gzip、Lzo、QuickLz、Lzma等4种压缩格式。由于输入文件切分是在Hadoop Client实施的，所以Split方法还是在Java空间执行的；当然，用户定义的Mapper和Reducer必须在C++空间实现，例如Hive想要基于HCE框架执行，那么就必须实现C++版本的Mapper、Reducer等功能组件。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/150331_2.jpg&quot; alt=&quot;HCE框架数据处理流程图&quot; /&gt;&lt;/p&gt;

&lt;p&gt;图3 HCE框架数据处理流程图&lt;/p&gt;

&lt;p&gt;图3展示了HCE框架的数据处理流程，可以看出HCE框架在C++空间高效实现了多个可扩展的功能模块，如RecordReader、OutputCollector、Shuffle、ReduceInputReader、RecordWriter、Committer、Partitioner、Mapper、Reducer、Combiner等，处理逻辑比Hadoop MapReduce更加紧凑高效。处于Hadoop Java空间的MapRunner和ReduceRunner只是起到收集状态信息的作用。&lt;/p&gt;

&lt;p&gt;HCE框架的性能提升主要集中在Map阶段，大约超过40%。对于一般的MapReduce程序，相比Shuffle和Reduce阶段，Map阶段也是其资源占用最多的阶段，因为最终作业的输出一般仅仅是输入的10%，大量的数据处理是在Map阶段完成的。&lt;/p&gt;

&lt;p&gt;#拓展&lt;/p&gt;

&lt;p&gt;仅有基本的HCE框架是不够的，因为大量已有作业是通过Streaming接口执行的，而且除C++开发接口之外，脚本开发者也想使用对应语言的开发接口。幸运的是，所有脚本语言都基于C开发，因此可以实现简单的解释器，将脚本语言翻译成C语言，最终执行的仍是HCE框架，而这个解释开销很小。当然，Streaming作业的额外开销是不可避免了，不过基于HCE框架的Streaming作业可以利用框架的性能优势获得CPU利用率的提升，这对于轻量级作业收益仍然可观。&lt;/p&gt;

&lt;p&gt;图4展示了Java Streaming、HCE、Streaming Over HCE和Python Over HCE四个框架的数据处理途径。Java Streaming框架的数据处理仍然是在Java空间完成的，而HCE、Streaming Over HCE、Python Over HCE框架的数据处理都在C++空间完成，Child JVM仅从HCE进程收集任务状态信息。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/150331_2.jpg&quot; alt=&quot;Streaming Over HCE和Python Over HCE框架示意图&quot; /&gt;&lt;/p&gt;

&lt;p&gt;图4 Streaming Over HCE和Python Over HCE框架示意图&lt;/p&gt;

&lt;p&gt;#未来&lt;/p&gt;

&lt;p&gt;MapReduce计算框架并不仅仅依赖于HDFS存储系统，也可以基于其他存储系统，例如Hypertable或者是其他的K-V系统。目前很多块存储系统或K-V系统都是C++语言实现的，想要在其上使用原生态的Hadoop MapReduce，就必须通过存储系统的语言转换接口（例如Hypertable的Thrift）或者计算系统的转换接口（例如Hadoop的AvroRPC等），问题是数据的序列化和反序列化难免带来额外开销。因此，基于HCE框架、非Java语言实现的存储系统可以更加高效地支持Hadoop MapReduce计算，当然它们需要实现对应的Split、RecordReader、RecordWriter和Committer等组件。&lt;/p&gt;

&lt;p&gt;#小结&lt;/p&gt;

&lt;p&gt;HCE框架是Hadoop MapReduce框架的一个衍生品。依托HCE框架的高效本地处理机制，Hadoop作业可以最多节省30%的CPU资源使用。此外，HCE提供了C++、Python等多种编程接口，并且保证了已有接口的向前兼容；多种编译优化技术也可以方便地应用到MapReduce框架；最后，HCE通过编译优化和内置解释器等方式优化了用户程序的执行。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Atlassian Bamboo 持续构建（CI）服务部署</title>
      <link>http://lilifeng.net/blogs/2015/03/04/atlassian-bamboo-deplyment/</link>
      <pubDate>Wed, 04 Mar 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>Web</category>
      
      <category>Deployment</category>
      
      <category>CI</category>
      
      
      <category>Internet</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/03/04/atlassian-bamboo-deplyment/</guid>
      <description>
</description>
    </item>
    
    <item>
      <title>留存率</title>
      <link>http://lilifeng.net/blogs/2015/02/21/advertise-retention-rate/</link>
      <pubDate>Sat, 21 Feb 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>Web</category>
      
      
      <category>广告平台</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/02/21/advertise-retention-rate/</guid>
      <description>&lt;p&gt;##用户留存率&lt;/p&gt;

&lt;p&gt;在互联网行业中，用户在某段时间内开始使用应用，经过一段时间后，仍然继续使用应用的被认作是留存；这部分用户占当时新增用户的比例即是留存率，会按照每隔1单位时间（例日、周、月）来进行统计。顾名思义，留存指的就是“有多少用户留下来了”。留存用户和留存率体现了应用的质量和保留用户的能力。&lt;/p&gt;

&lt;p&gt;##留存率计算公式&lt;/p&gt;

&lt;p&gt;留存率=登陆用户数/新增用户数*100% （一般统计周期为天）&lt;/p&gt;

&lt;p&gt;新增用户数：应用在当前时间段新注册登录应用的用户数；&lt;/p&gt;

&lt;p&gt;登录用户数：在当前时间段至少登录过一次的用户数；&lt;/p&gt;

&lt;p&gt;活跃用户数：登录用户数-新增用户数；&lt;/p&gt;

&lt;p&gt;次日留存率：当天新增的用户数，在次日至少登录过一次的用户数；&lt;/p&gt;

&lt;p&gt;3日留存率：当天新增的用户数，在往后3天内至少登录过一次的用户数；&lt;/p&gt;

&lt;p&gt;7日留存率：当天新增的用户数，在往后7天内至少登录过一次的用户数；&lt;/p&gt;

&lt;p&gt;15日留存数：当天新增的用户数，在往后7天内至少登录过一次的用户，在往后第8天到第14天内至少再登陆过一次的用户数&lt;/p&gt;

&lt;p&gt;##留存率的作用&lt;/p&gt;

&lt;p&gt;互联网时代，无论是新兴的手机棋牌游戏还是传统的MMORPG，也不管付费与否，都需要保持用户的活跃度，一旦用户的活跃度下降，就意味着用户的离开或流失。基于此，“留存”的概念就可以用来分析应用或者网站的服务效果，是否能够留住用户。因此，留存率反映的实际上是一种转化率，即由初期的不稳定的用户转化为活跃用户、稳定用户、忠诚用户的过程，随着这个留存率统计过程的不断延展，就能看到不同时期的用户的变化情况。&lt;/p&gt;

&lt;p&gt;之所以是这样，是因为留存是以研究新登用户为目标对象的，即研究某一个时间点的一批用户在随后的几天，几周，几个月的时间内的生命周期情况，从宏观上把握用户的生命周期长度以及我们可以改善的余地。&lt;/p&gt;

&lt;p&gt;因此这里就引申出一个问题，我们为什么要研究的是新登用户？如刚才所说的，我们要宏观观察用户的生命进程情况，那么我们最佳的办法就是从用户导入期就开始，所谓导入期就是用户进入游戏，这个地方我们的分析其实大有作为的，因为用户进入游戏时来源于不同的渠道，通过不同的营销手段拉入游戏，这样我们交叉分析，通过用户的后期留存情况就能从一个层面把握渠道质量，比如，付费，粘性，价值量，CAC成本。&lt;/p&gt;

&lt;p&gt;一般来说留存率这类指标是需要长期持续跟踪的，且要根据版本更新，推广等诸多因素结合起来分析，试图去找到玩家的最佳周期进行制定相应的策略提升质量。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>常见的网络广告防作弊技术</title>
      <link>http://lilifeng.net/blogs/2015/02/20/advertise-anti-cheat/</link>
      <pubDate>Fri, 20 Feb 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>Web</category>
      
      
      <category>广告平台</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/02/20/advertise-anti-cheat/</guid>
      <description>&lt;p&gt;以下是多数广告投放系统常用的几种防作弊方式，希望给每个网络营销者带来一点有用的帮助。&lt;/p&gt;

&lt;p&gt;##1、IP防止作弊&lt;/p&gt;

&lt;p&gt;一般计费方式是按照24小时内唯一IP，可以将每个IP记入数据库，当下一个访问IP与数据库已存在的IP相同时，则不计费。现在上网一般是动态IP，作弊者通过拨号器上下线来实现改变IP地址，你可以通过C段IP来辨别，如大量出现218.175.11.x这种相同C段的IP号，则可能作弊。可以通过IP加密提交，然后由接收端进行解密记录入库，可以杜绝采用模拟提交数据的作弊方式。&lt;/p&gt;

&lt;p&gt;##2、COOKIES防止作弊&lt;/p&gt;

&lt;p&gt;当你访问过一个页面时，COOKIE并会记录，当你下一次访问该页面时，并会提交一个相同COOKIES参数，你可以判断重复的不计费。这种方式的缺陷是很容易改变物理信息进行作弊，比如通过INTERNET选项清空COOKIES。&lt;/p&gt;

&lt;p&gt;##3、点击比率上线设置&lt;/p&gt;

&lt;p&gt;平均点击率从99年的5%下降到了1%以内，当然其中还需要广告面向对象与页面的访问者的交叉率，越高则表示该页面与广告的关联度越大，点击率越高。目前富媒体广告的点击率在2%至5%，普通图片点击在0.1%至1%，与图片的创意有关，可以设置当点击率超过一定的百分率提示可能作弊行为。为了提高点击率，最常见的创意方式是模拟WINDOWS系统提示、模拟关闭按钮以及美女激情诱惑性图片。&lt;/p&gt;

&lt;p&gt;##4、结合ALEXA数据防止作弊&lt;/p&gt;

&lt;p&gt;ALEXA虽然不是一个标准，但却是极好的参考工具，当一个ALEXA数值很大的站点却做了很高的点击量，就产生疑问了，流量从何而来？&lt;/p&gt;

&lt;p&gt;##5、来源统计防止作弊&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;A、记录该点击的来路页面，即广告放置页面的地址，可以人工巡查广告放置是否正确，查看旁边是否有引导性不良语句。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;B、记录放置广告页面的来路，每个站点的搜索引擎来路总是占据很大的一个比例，如果该页面没有来路，可以判断这个页面的流量非连接流量，可以通过两种途径获得，&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;blockquote&gt;
    &lt;p&gt;一、浏览器直接访问或者收藏夹访问；&lt;/p&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;blockquote&gt;
    &lt;p&gt;二、弹窗流量没有来路统计，也有可能是目前流行的流氓插件弹窗。该种方式也可以查询到有些站长将广告代码放置在IFRAME里的最终页面。&lt;/p&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;p&gt;##6、通过唯一参数防止作弊&lt;/p&gt;

&lt;p&gt;网卡MAC物理地址、硬盘序列号，通过该类软硬件信息生成机器码。这种方式的缺点是很难在WEB上应用，适合软件营销的防作弊方式。&lt;/p&gt;

&lt;p&gt;##7、时间顺差防止作弊&lt;/p&gt;

&lt;p&gt;当你打开一个有广告的页面时，一般情况下不可能瞬间点击广告，因为每个广告都由印象转变为关注，再转变成点击行动，你可以设置当访问者打开网站页面几秒内点击广告为作弊行为。当几次广告点击的时间差完全一致时，也可以判断为机器人点击行为。当你打开一个广告，在几秒内立即关闭，也可以判断为无效点击。&lt;/p&gt;

&lt;p&gt;##8、鼠标值&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;A、显示屏幕上的每个点都具有一个坐标值，当你在某个点按下鼠标时，都会有一个坐标值，当采用机器人点击时，为同一个鼠标值，可以只记一次点击。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;B、每次点击都会产生鼠标的KEYUP和KEYDOWN的行为，如果未能捕获到这个值，可能是模拟数据提交。&lt;/p&gt;
&lt;/blockquote&gt;

</description>
    </item>
    
    <item>
      <title>高性能服务器架构(High-Performance Server Architecture)</title>
      <link>http://lilifeng.net/blogs/2015/02/10/high-performance-server-concept/</link>
      <pubDate>Tue, 10 Feb 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>Web</category>
      
      
      <category>Internet</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/02/10/high-performance-server-concept/</guid>
      <description>&lt;blockquote&gt;
  &lt;p&gt;来源：&lt;a href=&quot;http://pl.atyp.us/content/tech/servers.html&quot;&gt;http://pl.atyp.us/content/tech/servers.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;译文来源：&lt;a href=&quot;http://www.lupaworld.com/home/space-341888-do-blog-id-136718.html&quot;&gt;http://www.lupaworld.com/home/space-341888-do-blog-id-136718.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;#引言&lt;/p&gt;

&lt;p&gt;本文将与你分享我多年来在服务器开发方面的一些经验。对于这里所说的服务器，更精确的定义应该是每秒处理大量离散消息或者请求的服务程序，网络服务器更符合这种情况，但并非所有的网络程序都是严格意义上的服务器。使用“高性能请求处理程序”是一个很糟糕的标题，为了叙述起来简单，下面将简称为“服务器”。&lt;/p&gt;

&lt;p&gt;本文不会涉及到多任务应用程序，在单个程序里同时处理多个任务现在已经很常见。比如你的浏览器可能就在做一些并行处理，但是这类并行程序设计没有多大挑战性。真正的挑战出现在服务器的架构设计对性能产生制约时，如何通过改善架构来提升系统性能。对于在拥有上G内存和G赫兹CPU上运行的浏览器来说，通过DSL进行多个并发下载任务不会有如此的挑战性。这里，应用的焦点不在于通过吸管小口吮吸，而是如何通过水龙头大口畅饮，这里麻烦是如何解决在硬件性能的制约.(作者的意思应该是怎么通过网络硬件的改善来增大流量)&lt;/p&gt;

&lt;p&gt;一些人可能会对我的某些观点和建议发出置疑，或者自认为有更好的方法, 这是无法避免的。在本文中我不想扮演上帝的角色；这里所谈论的是我自己的一些经验，这些经验对我来说, 不仅在提高服务器性能上有效，而且在降低调试困难度和增加系统的可扩展性上也有作用。但是对某些人的系统可能会有所不同。如果有其它更适合于你的方法，那实在是很不错. 但是值得注意的是，对本文中所提出的每一条建议的其它一些可替代方案，我经过实验得出的结论都是悲观的。你自己的小聪明在这些实验中或许有更好的表现，但是如果因此怂恿我在这里建议读者这么做，可能会引起无辜读者的反感。你并不想惹怒读者，对吧？&lt;/p&gt;

&lt;p&gt;本文的其余部分将主要说明影响服务器性能的四大杀手:&lt;/p&gt;

&lt;p&gt;1)   数据拷贝（Data Copies）&lt;/p&gt;

&lt;p&gt;2)   环境切换（Context Switches）&lt;/p&gt;

&lt;p&gt;3)   内存分配（Memory allocation）&lt;/p&gt;

&lt;p&gt;4)   锁竞争（Lock contention）&lt;/p&gt;

&lt;p&gt;在文章结尾部分还会提出其它一些比较重要的因素，但是上面的四点是主要因素。如果服务器在处理大部分请求时能够做到没有数据拷贝，没有环境切换，没有内存分配，没有锁竞争，那么我敢保证你的服务器的性能一定很出色。&lt;/p&gt;

&lt;p&gt;##数据拷贝（Data Copies）&lt;/p&gt;

&lt;p&gt;本节会有点短，因为大多数人在数据拷贝上吸取过教训。几乎每个人都知道产生数据拷贝是不对的，这点是显而易见的，在你的职业生涯中, 你很早就会见识过它；而且遇到过这个问题，因为10年前就有人开始说这个词。对我来说确实如此。现今，几乎每个大学课程和几乎所有how-to文档中都提到了它。甚至在某些商业宣传册中，”零拷贝” 都是个流行用语。&lt;/p&gt;

&lt;p&gt;尽管数据拷贝的坏处显而易见，但是还是会有人忽视它。因为产生数据拷贝的代码常常隐藏很深且带有伪装，你知道你所调用的库或驱动的代码会进行数据拷贝吗？答案往往超出想象。猜猜“程序I/O”在计算机上到底指什么？哈希函数是伪装的数据拷贝的例子，它有带拷贝的内存访问消耗和更多的计算。曾经指出哈希算法是一种有效的“拷贝+”似乎能够被避免，但据我所知，有一些非常聪明的人说过要做到这一点是相当困难的。如果想真正去除数据拷贝，不管是因为影响了服务器性能，还是想在黑客大会上展示”零复制”技术，你必须自己跟踪可能发生数据拷贝的所有地方，而不是轻信宣传。&lt;/p&gt;

&lt;p&gt;有一种可以避免数据拷贝的方法是使用buffer的描述符（或者buffer chains的描述符）来取代直接使用buffer指针，每个buffer描述符应该由以下元素组成：&lt;/p&gt;

&lt;p&gt;l  一个指向buffer的指针和整个buffer的长度&lt;/p&gt;

&lt;p&gt;l  一个指向buffer中真实数据的指针和真实数据的长度，或者长度的偏移&lt;/p&gt;

&lt;p&gt;l  以双向链表的形式提供指向其它buffer的指针&lt;/p&gt;

&lt;p&gt;l  一个引用计数&lt;/p&gt;

&lt;p&gt;现在，代码可以简单的在相应的描述符上增加引用计数来代替内存中数据的拷贝。这种做法在某些条件下表现的相当好，包括在典型的网络协议栈的操作上，但有些情况下这做法也令人很头大。一般来说，在buffer chains的开头和结尾增加buffer很容易，对整个buffer增加引用计数，以及对buffer chains的即刻释放也很容易。在chains的中间增加buffer，一块一块的释放buffer，或者对部分buffer增加引用技术则比较困难。而分割，组合chains会让人立马崩溃。&lt;/p&gt;

&lt;p&gt;我不建议在任何情况下都使用这种技术，因为当你想在链上搜索你想要的一个块时，就不得不遍历一遍描述符链，这甚至比数据拷贝更糟糕。最适用这种技术地方是在程序中大的数据块上，这些大数据块应该按照上面所说的那样独立的分配描述符，以避免发生拷贝，也能避免影响服务器其它部分的工作.(大数据块拷贝很消耗CPU,会影响其它并发线程的运行)。&lt;/p&gt;

&lt;p&gt;关于数据拷贝最后要指出的是：在避免数据拷贝时不要走极端。我看到过太多的代码为了避免数据拷贝，最后结果反而比拷贝数据更糟糕，比如产生环境切换或者一个大的I/O请求被分解了。数据拷贝是昂贵的，但是在避免它时，是收益递减的(意思是做过头了，效果反而不好)。为了除去最后少量的数据拷贝而改变代码，继而让代码复杂度翻番，不如把时间花在其它方面。&lt;/p&gt;

&lt;p&gt;##上下文切换（Context Switches）&lt;/p&gt;

&lt;p&gt;相对于数据拷贝影响的明显，非常多的人会忽视了上下文切换对性能的影响。在我的经验里，比起数据拷贝，上下文切换是让高负载应用彻底完蛋的真正杀手。系统更多的时间都花费在线程切换上，而不是花在真正做有用工作的线程上。令人惊奇的是，（和数据拷贝相比）在同一个水平上，导致上下文切换原因总是更常见。引起环境切换的第一个原因往往是活跃线程数比CPU个数多。随着活跃线程数相对于CPU个数的增加，上下文切换的次数也在增加，如果你够幸运，这种增长是线性的，但更常见是指数增长。这个简单的事实解释了为什么每个连接一个线程的多线程设计的可伸缩性更差。对于一个可伸缩性的系统来说，限制活跃线程数少于或等于CPU个数是更有实际意义的方案。曾经这种方案的一个变种是只使用一个活跃线程，虽然这种方案避免了环境争用，同时也避免了锁，但它不能有效利用多CPU在增加总吞吐量上的价值，因此除非程序无CPU限制（non-CPU-bound），(通常是网络I/O限制 network-I/O-bound)，应该继续使用更实际的方案。&lt;/p&gt;

&lt;p&gt;一个有适量线程的程序首先要考虑的事情是规划出如何创建一个线程去管理多连接。这通常意味着前置一个select/poll, 异步I/O，信号或者完成端口，而后台使用一个事件驱动的程序框架。关于哪种前置API是最好的有很多争论。 Dan Kegel的C10K在这个领域是一篇不错的论文。个人认为，select/poll和信号通常是一种丑陋的方案，因此我更倾向于使用AIO或者完成端口，但是实际上它并不会好太多。也许除了select()，它们都还不错。所以不要花太多精力去探索前置系统最外层内部到底发生了什么。&lt;/p&gt;

&lt;p&gt;对于最简单的多线程事件驱动服务器的概念模型, 其内部有一个请求缓存队列，客户端请求被一个或者多个监听线程获取后放到队列里，然后一个或者多个工作线程从队列里面取出请求并处理。从概念上来说，这是一个很好的模型，有很多用这种方式来实现他们的代码。这会产生什么问题吗？引起环境切换的第二个原因是把对请求的处理从一个线程转移到另一个线程。有些人甚至把对请求的回应又切换回最初的线程去做，这真是雪上加霜，因为每一个请求至少引起了2次环境切换。把一个请求从监听线程转换到成工作线程，又转换回监听线程的过程中，使用一种“平滑”的方法来避免环境切换是非常重要的。此时，是否把连接请求分配到多个线程，或者让所有线程依次作为监听线程来服务每个连接请求，反而不重要了。&lt;/p&gt;

&lt;p&gt;即使在将来,也不可能有办法知道在服务器中同一时刻会有多少激活线程.毕竟，每时每刻都可能有请求从任意连接发送过来，一些进行特殊任务的“后台”线程也会在任意时刻被唤醒。那么如果你不知道当前有多少线程是激活的，又怎么能够限制激活线程的数量呢？根据我的经验，最简单同时也是最有效的方法之一是：用一个老式的带计数的信号量，每一个线程执行的时候就先持有信号量。如果信号量已经到了最大值，那些处于监听模式的线程被唤醒的时候可能会有一次额外的环境切换,(监听线程被唤醒是因为有连接请求到来, 此时监听线程持有信号量时发现信号量已满,所以即刻休眠), 接着它就会被阻塞在这个信号量上，一旦所有监听模式的线程都这样阻塞住了，那么它们就不会再竞争资源了，直到其中一个线程释放信号量，这样环境切换对系统的影响就可以忽略不计。更主要的是，这种方法使大部分时间处于休眠状态的线程避免在激活线程数中占用一个位置，这种方式比其它的替代方案更优雅。&lt;/p&gt;

&lt;p&gt;一旦处理请求的过程被分成两个阶段(监听和工作)，那么更进一步，这些处理过程在将来被分成更多的阶段(更多的线程)就是很自然的事了。最简单的情况是一个完整的请求先完成第一步,然后是第二步(比如回应)。然而实际会更复杂：一个阶段可能产生出两个不同执行路径，也可能只是简单的生成一个应答(例如返回一个缓存的值)。由此每个阶段都需要知道下一步该如何做，根据阶段分发函数的返回值有三种可能的做法：&lt;/p&gt;

&lt;p&gt;l  请求需要被传递到另外一个阶段（返回一个描述符或者指针）&lt;/p&gt;

&lt;p&gt;l  请求已经完成（返回ok）&lt;/p&gt;

&lt;p&gt;l  请求被阻塞(返回”请求阻塞”)。这和前面的情况一样，阻塞到直到别的线程释放资源&lt;/p&gt;

&lt;p&gt;应该注意到在这种模式下，对阶段的排队是在一个线程内完成的，而不是经由两个线程中完成。这样避免不断把请求放在下一阶段的队列里，紧接着又从该队列取出这个请求来执行。这种经由很多活动队列和锁的阶段很没必要。&lt;/p&gt;

&lt;p&gt;这种把一个复杂的任务分解成多个较小的互相协作的部分的方式，看起来很熟悉，这是因为这种做法确实很老了。我的方法，源于CAR在1978年发明的”通信序列化进程”(Communicating Sequential Processes CSP)，它的基础可以上溯到1963时的Per Brinch Hansen and Matthew Conway–在我出生之前！然而，当Hoare创造出CSP这个术语的时候，“进程”是从抽象的数学角度而言的，而且，这个CSP术语中的进程和操作系统中同名的那个进程并没有关系。依我看来，这种在操作系统提供的单个线程之内，实现类似多线程一样协同并发工作的CSP的方法，在可扩展性方面让很多人头疼。&lt;/p&gt;

&lt;p&gt;一个实际的例子是，Matt Welsh的SEDA，这个例子表明分段执行的(stage-execution)思想朝着一个比较合理的方向发展。SEDA是一个很好的“server Aarchitecture done right”的例子，值得把它的特性评论一下：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;SEDA的批处理倾向于强调一个阶段处理多个请求，而我的方式倾向于强调一个请求分成多个阶段处理。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;在我看来SEDA的一个重大缺陷是给每个阶段申请一个独立的在加载响应阶段中线程“后台”重分配的线程池。结果，原因1和原因2引起的环境切换仍然很多。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;在纯技术的研究项目中，在Java中使用SEDA是有用的，然而在实际应用场合，我觉得这种方法很少被选择。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;##内存分配（Memory Allocator）&lt;/p&gt;

&lt;p&gt;申请和释放内存是应用程序中最常见的操作, 因此发明了许多聪明的技巧使得内存的申请效率更高。然而再聪明的方法也不能弥补这种事实:在很多场合中，一般的内存分配方法非常没有效率。所以为了减少向系统申请内存，我有三个建议。&lt;/p&gt;

&lt;p&gt;建议一是使用预分配。我们都知道由于使用静态分配而对程序的功能加上人为限制是一种糟糕的设计。但是还是有许多其它很不错的预分配方案。通常认为，通过系统一次性分配内存要比分开几次分配要好，即使这样做在程序中浪费了某些内存。如果能够确定在程序中会有几项内存使用，在程序启动时预分配就是一个合理的选择。即使不能确定，在开始时为请求句柄预分配可能需要的所有内存也比在每次需要一点的时候才分配要好。通过系统一次性连续分配多项内存还能极大减少错误处理代码。在内存比较紧张时，预分配可能不是一个好的选择，但是除非面对最极端的系统环境，否则预分配都是一个稳赚不赔的选择。&lt;/p&gt;

&lt;p&gt;建议二是使用一个内存释放分配的lookaside list(监视列表或者后备列表)。基本的概念是把最近释放的对象放到链表里而不是真的释放它，当不久再次需要该对象时，直接从链表上取下来用，不用通过系统来分配。使用lookaside list的一个额外好处是可以避免复杂对象的初始化和清理.&lt;/p&gt;

&lt;p&gt;通常，让lookaside list不受限制的增长，即使在程序空闲时也不释放占用的对象是个糟糕的想法。在避免引入复杂的锁或竞争情况下，不定期的“清扫”非活跃对象是很有必要的。一个比较妥当的办法是,让lookaside list由两个可以独立锁定的链表组成：一个”新链”和一个”旧链”.使用时优先从”新”链分配，然后最后才依靠”旧”链。对象总是被释放的”新”链上。清除线程则按如下规则运行：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;锁住两个链&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;保存旧链的头结点&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;把前一个新链挂到旧链的前头&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;解锁&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;在空闲时通过第二步保存的头结点开始释放旧链的所有对象。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;使用了这种方式的系统中，对象只有在真的没用时才会释放，释放至少延时一个清除间隔期(指清除线程的运行间隔)，但同常不会超过两个间隔期。清除线程不会和普通线程发生锁竞争。理论上来说，同样的方法也可以应用到请求的多个阶段，但目前我还没有发现有这么用的。&lt;/p&gt;

&lt;p&gt;使用lookaside lists有一个问题是，保持分配对象需要一个链表指针(链表结点)，这可能会增加内存的使用。但是即使有这种情况，使用它带来的好处也能够远远弥补这些额外内存的花销。&lt;/p&gt;

&lt;p&gt;第三条建议与我们还没有讨论的锁有关系。先抛开它不说。即使使用lookaside list,内存分配时的锁竞争也常常是最大的开销。解决方法是使用线程私有的lookasid list, 这样就可以避免多个线程之间的竞争。更进一步，每个处理器一个链会更好，但这样只有在非抢先式线程环境下才有用。基于极端考虑，私有lookaside list甚至可以和一个共用的链工作结合起来使用。&lt;/p&gt;

&lt;p&gt;##锁竞争（Lock Contention）&lt;/p&gt;

&lt;p&gt;高效率的锁是非常难规划的, 以至于我把它称作卡律布狄斯和斯库拉(参见附录)。一方面, 锁的简单化(粗粒度锁)会导致并行处理的串行化,因而降低了并发的效率和系统可伸缩性; 另一方面, 锁的复杂化(细粒度锁)在空间占用上和操作时的时间消耗上都可能产生对性能的侵蚀。偏向于粗粒度锁会有死锁发生，而偏向于细粒度锁则会产生竞争。在这两者之间，有一个狭小的路径通向正确性和高效率，但是路在哪里？&lt;/p&gt;

&lt;p&gt;由于锁倾向于对程序逻辑产生束缚，所以如果要在不影响程序正常工作的基础上规划出锁方案基本是不可能的。这也就是人们为什么憎恨锁，并且为自己设计的不可扩展的单线程方案找借口了。&lt;/p&gt;

&lt;p&gt;几乎我们每个系统中锁的设计都始于一个”锁住一切的超级大锁”，并寄希望于它不会影响性能，当希望落空时(几乎是必然), 大锁被分成多个小锁，然后我们继续祷告(性能不会受影响)，接着，是重复上面的整个过程(许多小锁被分成更小的锁), 直到性能达到可接受的程度。通常，上面过程的每次重复都回增加大于20%-50%的复杂性和锁负荷，并减少5%-10%的锁竞争。最终结果是取得了适中的效率，但是实际效率的降低是不可避免的。设计者开始抓狂:”我已经按照书上的指导设计了细粒度锁，为什么系统性能还是很糟糕?”&lt;/p&gt;

&lt;p&gt;在我的经验里，上面的方法从基础上来说就不正确。设想把解决方案当成一座山，优秀的方案表示山顶，糟糕的方案表示山谷。上面始于”超级锁”的解决方案就好像被形形色色的山谷，凹沟，小山头和死胡同挡在了山峰之外的登山者一样，是一个典型的糟糕爬山法；从这样一个地方开始登顶，还不如下山更容易一些。那么登顶正确的方法是什么？&lt;/p&gt;

&lt;p&gt;首要的事情是为你程序中的锁形成一张图表，有两个轴：&lt;/p&gt;

&lt;p&gt;l  图表的纵轴表示代码。如果你正在应用剔出了分支的阶段架构(指前面说的为请求划分阶段)，你可能已经有这样一张划分图了，就像很多人见过的OSI七层网络协议架构图一样。&lt;/p&gt;

&lt;p&gt;l  图表的水平轴表示数据集。在请求的每个阶段都应该有属于该阶段需要的数据集。&lt;/p&gt;

&lt;p&gt;现在，你有了一张网格图，图上每个单元格表示一个特定阶段需要的特定数据集。下面是应该遵守的最重要的规则：两个请求不应该产生竞争，除非它们在同一个阶段需要同样的数据集。如果你严格遵守这个规则，那么你已经成功了一半。&lt;/p&gt;

&lt;p&gt;一旦你定义出了上面那个网格图，在你的系统中的每种类型的锁就都可以被标识出来了。你的下一个目标是确保这些标识出来的锁尽可能在两个轴之间均匀的分布, 这部分工作是和具体应用相关的。你得像个钻石切割工一样，根据你对程序的了解，找出请求阶段和数据集之间的自然“纹理线”。有时候它们很容易发现，有时候又很难找出来，此时需要不断回顾来发现它。在程序设计时，把代码分隔成不同阶段是很复杂的事情，我也没有好的建议，但是对于数据集的定义，有一些建议给你：&lt;/p&gt;

&lt;p&gt;l  如果你能对请求按顺序编号，或者能对请求进行哈希，或者能把请求和事物ID关联起来，那么根据这些编号或者ID就能对数据更好的进行分隔。&lt;/p&gt;

&lt;p&gt;l  有时，基于数据集的资源最大化利用，把请求动态的分配给数据，相对于依据请求的固有属性来分配会更有优势。就好像现代CPU的多个整数运算单元知道把请求分离一样。&lt;/p&gt;

&lt;p&gt;l  确定每个阶段指定的数据集是不一样的是非常有用的，以便保证一个阶段争夺的数据在另外阶段不会争夺。&lt;/p&gt;

&lt;p&gt;如果你在纵向和横向上把“锁空间(这里实际指锁的分布)” 分隔了，并且确保了锁均匀分布在网格上，那么恭喜你获得了一个好方案。现在你处在了一个好的登山点，打个比喻，你面有了一条通向顶峰的缓坡，但你还没有到山顶。现在是时候对锁竞争进行统计，看看该如何改进了。以不同的方式分隔阶段和数据集，然后统计锁竞争，直到获得一个满意的分隔。当你做到这个程度的时候，那么无限风景将呈现在你脚下。&lt;/p&gt;

&lt;p&gt;##其他方面&lt;/p&gt;

&lt;p&gt;我已经阐述完了影响性能的四个主要方面。然而还有一些比较重要的方面需要说一说，大所属都可归结于你的平台或系统环境：&lt;/p&gt;

&lt;p&gt;l  你的存储子系统在大数据读写和小数据读写，随即读写和顺序读写方面是如何进行？在预读和延迟写入方面做得怎样？&lt;/p&gt;

&lt;p&gt;l  你使用的网络协议效率如何？是否可以通过修改参数改善性能？是否有类似于TCP_CORK, MSG_PUSH,Nagle-toggling算法的手段来避免小消息产生？&lt;/p&gt;

&lt;p&gt;l  你的系统是否支持Scatter-Gather I/O(例如readv/writev)? 使用这些能够改善性能，也能避免使用缓冲链(见第一节数据拷贝的相关叙述)带来的麻烦。(说明：在dma传输数据的过程中，要求源物理地址和目标物理地址必须是连续的。但在有的计算机体系中，如IA，连续的存储器地址在物理上不一定是连续的，则dma传输要分成多次完成。如果传输完一块物理连续的数据后发起一次中断，同时主机进行下一块物理连续的传输，则这种方式即为block dma方式。scatter/gather方式则不同，它是用一个链表描述物理不连续的存储器，然后把链表首地址告诉dma master。dma master传输完一块物理连续的数据后，就不用再发中断了，而是根据链表传输下一块物理连续的数据，最后发起一次中断。很显然 scatter/gather方式比block dma方式效率高)&lt;/p&gt;

&lt;p&gt;l  你的系统的页大小是多少？高速缓存大小是多少？向这些大小边界进行对起是否有用？系统调用和上下文切换花的代价是多少？&lt;/p&gt;

&lt;p&gt;l  你是否知道锁原语的饥饿现象？你的事件机制有没有”惊群”问题?你的唤醒/睡眠机制是否有这样糟糕的行为: 当X唤醒了Y, 环境立刻切换到了Y,但是X还有没完成的工作?&lt;/p&gt;

&lt;p&gt;我在这里考虑的了很多方面，相信你也考虑过。在特定情况下，应用这里提到的某些方面可能没有价值，但能考虑这些因素的影响还是有用的。如果在系统手册中，你没有找到这些方面的说明，那么就去努力找出答案。写一个测试程序来找出答案；不管怎样，写这样的测试代码都是很好的技巧锻炼。如果你写的代码在多个平台上都运行过，那么把这些相关的代码抽象为一个平台相关的库，将来在某个支持这里提到的某些功能的平台上，你就赢得了先机。&lt;/p&gt;

&lt;p&gt;对你的代码,“知其所以然”, 弄明白其中高级的操作, 以及在不同条件下的花销.这不同于传统的性能分析, 不是关于具体的实现,而是关乎设计. 低级别的优化永远是蹩脚设计的最后救命稻草.&lt;/p&gt;

&lt;p&gt;##（map注：下面这段文字原文没有，这是译者对于翻译的理）&lt;/p&gt;

&lt;p&gt;附录：奥德修斯（Odysseus，又译“奥德赛”），神话中伊塔刻岛国王，《伊利亚特》和《奥德赛》两大史诗中的主人公（公元前11世纪到公元前9世纪的希腊史称作“荷马时代”。包括《伊利亚特》和《奥德赛》两部分的《荷马史诗》，是古代世界一部著名的杰作）。奥德修斯曾参加过著名的特洛伊战争，在战争中他以英勇善战、足智多谋而著称，为赢得战争的胜利，他设计制造了著名的“特洛伊木马”（后来在西方成了“为毁灭敌人而送的礼物”的代名词）。特洛伊城毁灭后，他在回国途中又经历了许多风险，荷马的《奥德赛》就是奥德修斯历险的记述。“斯库拉和卡律布狄斯”的故事是其中最惊险、最恐怖的一幕。&lt;/p&gt;

&lt;p&gt;相传，斯库拉和卡律布狄斯是古希腊神话中的女妖和魔怪，女妖斯库拉住在意大利和西西里岛之间海峡中的一个洞穴里，她的对面住着另一个妖怪卡律布狄斯。它们为害所有过往航海的人。据荷马说，女妖斯库拉长着12只不规则的脚，有6个蛇一样的脖子，每个脖子上各有一颗可怕的头，张着血盆大口，每张嘴有3 排毒牙，随时准备把猎物咬碎。它们每天在意大利和西西里岛之间海峡中兴风作浪，航海者在两个妖怪之间通过是异常危险的，它们时刻在等待着穿过西西里海峡的船舶。在海峡中间，卡律布狄斯化成一个大旋涡，波涛汹涌、水花飞溅，每天3次从悬崖上奔涌而出，在退落时将通过此处的船只全部淹没。当奥德修斯的船接近卡律布狄斯大旋涡时，它像火炉上的一锅沸水，波涛滔天，激起漫天雪白的水花。当潮退时，海水混浊，涛声如雷，惊天动地。这时，黑暗泥泞的岩穴一见到底。正当他们惊恐地注视着这一可怕的景象时，正当舵手小心翼翼地驾驶着船只从左绕过旋涡时，突然海怪斯库拉出现在他们面前，她一口叼住了6个同伴。奥德修斯亲眼看见自己的同伴在妖怪的牙齿中间扭动着双手和双脚，挣扎了一会儿，他们便被嚼碎，成了血肉模糊的一团。其余的人侥幸通过了卡律布狄斯大旋涡和海怪斯库拉之间的危险的隘口。后来又历经种种灾难，最后终于回到了故乡——伊塔刻岛。&lt;/p&gt;

&lt;p&gt;这个故事在语言学界和翻译界被广为流传。前苏联著名翻译家巴尔胡达罗夫就曾把 “斯库拉和卡律布狄斯”比作翻译中“直译和意译”。他说：“形象地说，译者总是不得不在直译和意译之间迂回应变，犹如在斯库拉和卡律布狄斯之间曲折前行，以求在这海峡两岸之间找到一条狭窄然而却足够深邃的航道，以便达到理想的目的地——最大限度的等值翻译。”&lt;/p&gt;

&lt;p&gt;德国著名语言学家洪堡特也说过类似的话：“我确信任何翻译无疑地都是企图解决不可能解决的任务。因为任何一个翻译家都会碰到一个暗礁而遭到失败，他们不是由于十分准确地遵守了原文的形式而破坏了译文语言的特点，就是为了照顾译文语言的特点而损坏了原文。介于两者之间的做法不仅难于办到，而且简直是不可能办到。”&lt;/p&gt;

&lt;p&gt;历史上长久以来都认为，翻译只能选择两个极端的一种：或者这种——逐字翻译（直译）；或者那种——自由翻译（意译）。就好像翻译中的斯库拉和卡律布狄斯”一样。如今 “斯库拉和卡律布狄斯”已成为表示双重危险——海怪和旋涡的代名词，人们常说“介于斯库拉和卡律布狄斯之间”，这就是说：处于两面受敌的险境，比喻“危机四伏”，用来喻指译者在直译和意译之间反复作出抉择之艰难。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>服务器测试概念及标准</title>
      <link>http://lilifeng.net/blogs/2015/02/09/server-test-concept/</link>
      <pubDate>Mon, 09 Feb 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>原生</category>
      
      <category>Web</category>
      
      <category>测试</category>
      
      
      <category>Internet</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/02/09/server-test-concept/</guid>
      <description>&lt;blockquote&gt;
  &lt;p&gt;a点：性能期望值
b点：高于期望，系统资源处于临界点
c点：高于期望，拐点
d点：超过负载，系统崩溃&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;##性能测试&lt;/p&gt;

&lt;p&gt;a点到b点之间的系统性能&lt;/p&gt;

&lt;p&gt;定义：狭义的性能测试，是指以性能预期目标为前提，对系统不断施加压力，验证系统在资源可接受范围内，是否能达到性能预期。&lt;/p&gt;

&lt;p&gt;##负载测试&lt;/p&gt;

&lt;p&gt;b点的系统性能&lt;/p&gt;

&lt;p&gt;定义：狭义的负载测试，是指对系统不断地增加压力或增加一定压力下的持续时间，直到系统的某项或多项性能指标达到极限，例如某种资源已经达到饱和状态等。&lt;/p&gt;

&lt;p&gt;##压力测试&lt;/p&gt;

&lt;p&gt;b点到d点之间&lt;/p&gt;

&lt;p&gt;定义：狭义的压力测试，是指超过安全负载的情况下，对系统不断施加压力，是通过确定一个系统的瓶颈或不能接收用户请求的性能点，来获得系统能提供的最大服务级别的测试。&lt;/p&gt;

&lt;p&gt;##稳定性测试&lt;/p&gt;

&lt;p&gt;a点到b点之间&lt;/p&gt;

&lt;p&gt;定义：狭义的稳定性测试，是指被测试系统在特定硬件、软件、网络环境条件下，给系统加载一定业务压力，使系统运行一段较长时间，以此检测系统是否稳定，一般稳定性测试时间为n*12小时。&lt;/p&gt;

&lt;p&gt;##网站测试标准&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;类别&lt;/td&gt;
      &lt;td&gt;判断维度&lt;/td&gt;
      &lt;td&gt;不通过&lt;/td&gt;
      &lt;td&gt;通过&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;服务器性能&lt;/td&gt;
      &lt;td&gt;超时概率&lt;/td&gt;
      &lt;td&gt;大于万分之一&lt;/td&gt;
      &lt;td&gt;小于万分之一&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;错误概率&lt;/td&gt;
      &lt;td&gt;大于万分之一&lt;/td&gt;
      &lt;td&gt;小于万分之一&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;TPS&lt;/td&gt;
      &lt;td&gt;小于期望高峰值&lt;/td&gt;
      &lt;td&gt;大于期望高峰值&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;TPS波动范围&lt;/td&gt;
      &lt;td&gt;见TPS波动模型&lt;/td&gt;
      &lt;td&gt;见TPS波动模型&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;CPU利用率&lt;/td&gt;
      &lt;td&gt;大于75%&lt;/td&gt;
      &lt;td&gt;小于75%&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;Load&lt;/td&gt;
      &lt;td&gt;平均每核CPULoad数大于1&lt;/td&gt;
      &lt;td&gt;平均每核CPULoad数小于1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;JVM内存利用率&lt;/td&gt;
      &lt;td&gt;大于80%&lt;/td&gt;
      &lt;td&gt;小于万分之一&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;FullGC频率&lt;/td&gt;
      &lt;td&gt;平均小于半小时一次&lt;/td&gt;
      &lt;td&gt;平均大于半小时一次&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;前端性能&lt;/td&gt;
      &lt;td&gt;YSLow评定&lt;/td&gt;
      &lt;td&gt;YSlow评定为C以下&lt;/td&gt;
      &lt;td&gt;YSlow评定为C级或以上&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;用户体验性能&lt;/td&gt;
      &lt;td&gt;页面大小&lt;/td&gt;
      &lt;td&gt;页面大于500k&lt;/td&gt;
      &lt;td&gt;页面小于500k&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;页面响应&lt;/td&gt;
      &lt;td&gt;1M带宽时大于1s&lt;/td&gt;
      &lt;td&gt;1M带宽时小于1s&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
</description>
    </item>
    
    <item>
      <title>LoadRunner实战系列（四）之术语篇</title>
      <link>http://lilifeng.net/blogs/2015/02/08/loadrunner-glossary/</link>
      <pubDate>Sun, 08 Feb 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>原生</category>
      
      <category>Web</category>
      
      <category>测试</category>
      
      <category>LoadRunner</category>
      
      <category>术语</category>
      
      
      <category>Internet</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/02/08/loadrunner-glossary/</guid>
      <description>&lt;p&gt;##术语篇&lt;/p&gt;

&lt;p&gt;Transactions（用户事务分析）&lt;/p&gt;

&lt;p&gt;—-用户事务分析是站在用户角度进行的基础性能分析。&lt;/p&gt;

&lt;p&gt;Transation Sunmmary（事务综述）&lt;/p&gt;

&lt;p&gt;—-对事务进行综合分析是性能分析的第一步，通过分析测试时间内用户事务的成功与失败情况，可以直接判断出系统是否运行正常。&lt;/p&gt;

&lt;p&gt;Average Transaciton Response Time（事务平均响应时间）&lt;/p&gt;

&lt;p&gt;—-事务平均响应时间”显示的是测试场景运行期间的每一秒内事务执行所用的平均时间，通过它可以分析测试场景运行期间应用系统的性能走向。&lt;/p&gt;

&lt;p&gt;例：随着测试时间的变化，系统处理事务的速度开始逐渐变慢，这说明应用系统随着投产时间的变化，整体性能将会有下降的趋势。&lt;/p&gt;

&lt;p&gt;Transactions per Second（每秒通过事务数/TPS）&lt;/p&gt;

&lt;p&gt;—-每秒通过事务数/TPS”显示在场景运行的每一秒钟，每个事务通过、失败以及停止的数量，使考查系统性能的一个重要参数。通过它可以确定系统在任何给定时刻的时间事务负载。分析TPS主要是看曲线的性能走向。将它与平均事务响应时间进行对比，可以分析事务数目对执行时间的影响。&lt;/p&gt;

&lt;p&gt;例：当压力加大时，点击率/TPS曲线如果变化缓慢或者有平坦的趋势，很有可能是服务器开始出现瓶颈。&lt;/p&gt;

&lt;p&gt;Total Transactions per Second（每秒通过事务总数）&lt;/p&gt;

&lt;p&gt;—-每秒通过事务总数”显示在场景运行时，在每一秒内通过的事务总数、失败的事务总署以及停止的事务总数。&lt;/p&gt;

&lt;p&gt;Transaction Performance Sunmmary（事务性能摘要）&lt;/p&gt;

&lt;p&gt;—-事务性能摘要”显示方案中所有事务的最小、最大和平均执行时间，可以直接判断响应时间是否符合用户的要求。重点关注事务的平均和最大执行时间，如果其范围不在用户可以接受的时间范围内，需要进行原因分析。&lt;/p&gt;

&lt;p&gt;Transaction Response Time Under Load（事务响应时间与负载）&lt;/p&gt;

&lt;p&gt;—-事务响应时间与负载”是“正在运行的虚拟用户”图和“平均响应事务时间”图的组合，通过它可以看出在任一时间点事务响应时间与用户数目的关系，从而掌握系统在用户并发方面的性能数据，为扩展用户系统提供参考。此图可以查看虚拟用户负载对执行时间的总体影响，对分析具有渐变负载的测试场景比较有用。&lt;/p&gt;

&lt;p&gt;Transaction Response Time(Percentile)（事务响应时间(百分比)）&lt;/p&gt;

&lt;p&gt;—-事务响应时间(百分比)”是根据测试结果进行分析而得到的综合分析图，也就是工具通过一些统计分析方法间接得到的图表。通过它可以分析在给定事务响应时间范围内能执行的事务百分比。&lt;/p&gt;

&lt;p&gt;Transaction Response Time(Distribution)（事务响应时间(分布)）&lt;/p&gt;

&lt;p&gt;—-事务响应时间(分布)”显示在场景运行过程中，事务执行所用时间的分布，通过它可以了解测试过程中不同响应时间的事务数量。如果系统预先定义了相关事务可以接受的最小和最大事务响应时间，则可以使用此图确定服务器性能是否在可以接受的范围内。&lt;/p&gt;

&lt;p&gt;Web Resources（Web资源分析）&lt;/p&gt;

&lt;p&gt;—-资源分析是从服务器入手对Web服务器的性能分析。&lt;/p&gt;

&lt;p&gt;Hits per Second（每秒点击次数）&lt;/p&gt;

&lt;p&gt;—-每秒点击次数”，即使运行场景过程中虚拟用户每秒向Web服务器提交的HTTP请求数。通过它可以评估虚拟用户产生的负载量，如将其和“平均事务响应时间”图比较，可以查看点击次数对事务性能产生的影响。通过对查看“每秒点击次数”，可以判断系统是否稳定。系统点击率下降通常表明服务器的响应速度在变慢，需进一步分析，发现系统瓶颈所在。&lt;/p&gt;

&lt;p&gt;Throughput（吞吐率）&lt;/p&gt;

&lt;p&gt;—-吞吐率”显示的是场景运行过程中服务器的每秒的吞吐量。其度量单位是字节，表示虚拟用在任何给定的每一秒从服务器获得的数据量。&lt;/p&gt;

&lt;p&gt;可以依据服务器的吞吐量来评估虚拟用户产生的负载量，以及看出服务器在流量方面的处理能力以及是否存在瓶颈。&lt;/p&gt;

&lt;p&gt;吞吐率”图和“点击率”图的区别：&lt;/p&gt;

&lt;p&gt;—-吞吐率”图，是每秒服务器处理的HTTP申请数。&lt;/p&gt;

&lt;p&gt;—-点击率”图，是客户端每秒从服务器获得的总数据量。&lt;/p&gt;

&lt;p&gt;HTTP Status Code Summary（HTTP状态代码概要）&lt;/p&gt;

&lt;p&gt;—-HTTP状态代码概要”显示场景或会话步骤过程中从Web服务器返回的HTTP状态代码数，该图按照代码分组。HTTP状态代码表示HTTP请求的状态。&lt;/p&gt;

&lt;p&gt;HTTP Responses per Second（每秒HTTP响应数）&lt;/p&gt;

&lt;p&gt;—-每秒HTTP响应数”是显示运行场景过程中每秒从Web服务器返回的不同HTTP状态代码的数量，还能返回其它各类状态码的信息，通过分析状态码，可以判断服务器在压力下的运行情况，也可以通过对图中显示的结果进行分组，进而定位生成错误的代码脚本。&lt;/p&gt;

&lt;p&gt;Pages Downloader per Second（每秒下载页面数）&lt;/p&gt;

&lt;p&gt;—-每秒下载页面数”显示场景或会话步骤运行的每一秒内从服务器下载的网页数。使用此图可依据下载的页数来计算Vuser生成的负载量。和吞吐量图一样，每秒下载页面数图标是Vuser在给定的任一秒内从服务器接收到的数据量。但是吞吐量考虑的各个资源极其大小（例，每个GIF文件的大小、每个网页的大小）。而每秒下载页面数只考虑页面数。&lt;/p&gt;

&lt;p&gt;*注：要查看每秒下载页数图，必须在R-T-S那里设置“每秒页面数(仅HTML模式)。&lt;/p&gt;

&lt;p&gt;Retries per Second（每秒重试次数）&lt;/p&gt;

&lt;p&gt;—-每秒重试次数”显示场景或会话步骤运行的每一秒内服务器尝试的连接次数。&lt;/p&gt;

&lt;p&gt;在下列情况将重试服务器连接：&lt;/p&gt;

&lt;p&gt;A、初始连接未经授权&lt;/p&gt;

&lt;p&gt;B、要求代理服务器身份验证&lt;/p&gt;

&lt;p&gt;C、服务器关闭了初始连接&lt;/p&gt;

&lt;p&gt;D、初始连接无法连接到服务器&lt;/p&gt;

&lt;p&gt;E、服务器最初无法解析负载生成器的IP地址&lt;/p&gt;

&lt;p&gt;Retries Summary（重试次数概要）&lt;/p&gt;

&lt;p&gt;—-重试次数概要”显示场景或会话步骤运行过程中服务器尝试的连接次数，它按照重试原因分组。将此图与每秒重试次数图一起使用可以确定场景或会话步骤运行过程中服务器在哪个时间点进行了重试。&lt;/p&gt;

&lt;p&gt;Connections（连接数）&lt;/p&gt;

&lt;p&gt;—-连接数”显示场景或会话步骤运行过程中每个时间点打开的TCP/IP连接数。&lt;/p&gt;

&lt;p&gt;借助此图，可以知道何时需要添加其他连接。&lt;/p&gt;

&lt;p&gt;例：当连接数到达稳定状态而事务响应时间迅速增大时，添加连接可以使性能得到极大提高（事务响应时间将降低）。&lt;/p&gt;

&lt;p&gt;Connections Per Second（每秒连接数）&lt;/p&gt;

&lt;p&gt;—-每秒连接数”显示方案在运行过程中每秒建立的TCP/IP连接数。51Testing软件测试网,理想情况下，很多HTTP请求都应该使用同一连接，而不是每个请求都新打开一个连接。通过每秒连接数图可以看出服务器的处理情况，就表明服务器的性能在逐渐下降。&lt;/p&gt;

&lt;p&gt;SSLs Per Second（每秒SSL连接数）&lt;/p&gt;

&lt;p&gt;—-每秒SSL连接数”显示场景或会话步骤运行的每一秒内打开的新的以及重新使用的SSL连接数。当对安全服务器打开TCP/IP连接后，浏览器将打开SSL连接。&lt;/p&gt;

&lt;p&gt;Web Page Breakdown（网页元素细分）&lt;/p&gt;

&lt;p&gt;—-网页元素细分主要用来评估页面内容是否影响事务的响应时间，通过它可以深入地分析网站上那些下载很慢的图形或中断的连接等有问题的元素。&lt;/p&gt;

&lt;p&gt;Web Page Breakdown（页面分解总图）&lt;/p&gt;

&lt;p&gt;—-页面分解显示某一具体事务在测试过程的响应情况，进而分析相关的事务运行是否正常。&lt;/p&gt;

&lt;p&gt;页面分解图可以按下面四种方式进行进一步细分：&lt;/p&gt;

&lt;p&gt;1)、Download Time Breaddown（下载时间细分）&lt;/p&gt;

&lt;p&gt;—-下载时间细分”图显示网页中不同元素的下载时间，同时还可按照下载过程把时间进行分解，用不同的颜色来显示DNS解析时间、建立连接时间、第一次缓冲时间等各自所占比例。&lt;/p&gt;

&lt;p&gt;2)Component Breakdown(Over Time)（组件细分(随时间变化)）&lt;/p&gt;

&lt;p&gt;—-组件细分图显示选定网页的页面组件随时间变化的细分图。通过该图可以很容易的看出哪些元素在测试过程中下载时间不稳定。该图特别适用于需要在客户端下载控件较多的页面，通过分析控件的响应时间，很容易就能发现那些控件不稳定或者比较耗时。&lt;/p&gt;

&lt;p&gt;3)Download Time Breakdown(Over Time)（下载时间细分(随时间变化)）&lt;/p&gt;

&lt;p&gt;—-“下载时间细分(随时间变化)”图显示选定网页的页面元素下载时间细分（随时间变化）情况，它非常清晰地显示了页面各个元素在压力测试过程中的下载情况。“下载时间细分”图显示的是整个测试过程页面元素响应的时间统计分析结果，“下载时间细分(随时间变化)”显示的事场景运行过程中每一秒内页面元素响应时间的统计结果，两者分别从宏观和微观角度来分析页面元素的下载时间。&lt;/p&gt;

&lt;p&gt;4)Time to First Buffer Breakdown(Over Time)（第一次缓冲时间细分(随时间变化)）&lt;/p&gt;

&lt;p&gt;—-“第一次缓冲时间细分(随时间变化)”图显示成功收到从Web服务器返回的第一次缓冲之前的这段时间，场景或会话步骤运行的每一秒中每个网页组件的服务器时间和网络时间（以秒为单位）。可以使用该图确定场景或会话步骤运行期间服务器或网络出现问题的时间。&lt;/p&gt;

&lt;p&gt;5)First Buffer Time：是指客户端与服务器端建立连接后，从服务器发送第一个数据包开始计时，数据经过网络传送到客户端，到浏览器接收到第一个缓冲所用的时间。&lt;/p&gt;

&lt;p&gt;6)Page Component Breakdown（页面组件细分）&lt;/p&gt;

&lt;p&gt;—-“页面组件细分”图显示每个网页及其组件的平均下载时间（以秒为单位）。可以根据下载组件所用的平均秒数对图列进行排序，通过它有助于隔离有问题的组件。&lt;/p&gt;

&lt;p&gt;7)Page Component Breakdown(Over Time)（页面组件分解(随时间变化)）&lt;/p&gt;

&lt;p&gt;—-“页面组件分解(随时间变化)”图显示在方案运行期间的每一秒内每个网页及其组件的平均响应时间 （以秒为单位）。&lt;/p&gt;

&lt;p&gt;8)Page Download Time Breakdown（页面下载时间细分）&lt;/p&gt;

&lt;p&gt;“页面下载时间细分”图显示每个页面组件下载时间的细分，可以根据它确定在网页下载期间事务响应时间缓慢是由网络错误引起还是由服务器错误引起。“页面下载时间细分”图根据DNS解析时间、连接时间、第一次缓冲时间、SSL握手时间、接收时间、FTP验证时间、客户端时间和错误时间来对每个组件的下载过程进行细分。&lt;/p&gt;

&lt;p&gt;9)Page Download Time Breakdown(Over Time)（页面下载时间细分(随时间变化)）&lt;/p&gt;

&lt;p&gt;—-“页面下载时间细分(随时间变化)”图显示方案运行期间，每一秒内每个页面组件下载时间的细分。使用此图可以确定网络或服务器在方案执行期间哪一时间点发生了问题。&lt;/p&gt;

&lt;p&gt;—-“页面组件细分(随时间变化)”图和“页面下载时间细分(随时间变化)”图通常结合起来进行分析：首先确定有问题的组件，然后分析它们的下载过程，进而定位原因在哪里。&lt;/p&gt;

&lt;p&gt;10)Time to First Buffer Breakdown（第一次缓冲时间细分）&lt;/p&gt;

&lt;p&gt;—-“第一次缓冲时间细分”图显示成功收到从Web服务器返回的第一次缓冲之前的这一段时间内的每个页面组件的相关服务器/网路时间。如果组件的下载时间很长，则可以使用此图确定产生的问题与服务器有关还是与网络有关。&lt;/p&gt;

&lt;p&gt;—-网络时间：定义为第一个HTTP请求那一刻开始，直到确认为止所经过的平均时间。&lt;/p&gt;

&lt;p&gt;—-服务器时间：定义为从收到初始HTTP请求确认开始，直到成功收到来自Web服务器的一次缓冲为止所经过的平均时间。&lt;/p&gt;

&lt;p&gt;11)Time to First Buffer Breakdown(Over Time)（第一次缓冲时间细分(随时间变化)）&lt;/p&gt;

&lt;p&gt;—-“第一次缓冲时间细分(随时间变化)”图显示成功收到从Web服务器返回的第一个缓冲之前的这段时间内，场景运行的每一秒中每个网页组件的服务器时间和网络时间。可以使用此图确定场景运行期间服务器或网络出现问题的时间点。&lt;/p&gt;

&lt;p&gt;12)Downloader Component Size(KB)（已下载组件大小）&lt;/p&gt;

&lt;p&gt;—-“已下载组件大小”图显示每个已经下载的网页组建的大小。通过它可以直接看出哪些组件比较大并需要进一步进行优化以提高性能。&lt;/p&gt;

</description>
    </item>
    
    <item>
      <title>LoadRunner实战系列（三）之脚本篇</title>
      <link>http://lilifeng.net/blogs/2015/02/07/loadrunner-scripts/</link>
      <pubDate>Sat, 07 Feb 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>原生</category>
      
      <category>Web</category>
      
      <category>测试</category>
      
      <category>LoadRunner</category>
      
      
      <category>Internet</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/02/07/loadrunner-scripts/</guid>
      <description>&lt;p&gt;##脚本篇&lt;/p&gt;

&lt;p&gt;1.HTTP的GET请求&lt;/p&gt;

&lt;p&gt;这里以访问百度为例，地址http://www.baidu.com/s?wd=mobile，表示在百度上搜索mobile。具体脚本如下（有注释）&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;n&quot;&gt;Action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;  
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;n&quot;&gt;lr_start_transaction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;send&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  
  
    &lt;span class=&quot;n&quot;&gt;web_reg_find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Search=Body&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//这里说明在Body的范围内查找  
&lt;/span&gt;                 &lt;span class=&quot;s&quot;&gt;&quot;SaveCount=ret_Count&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//这里表示把返回值的个数放在变量ret_Count里  
&lt;/span&gt;                 &lt;span class=&quot;s&quot;&gt;&quot;Text=mobile&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//这里表示查找的内容是“mobile”  
&lt;/span&gt;                 &lt;span class=&quot;n&quot;&gt;LAST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  
  
    &lt;span class=&quot;n&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;web_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Baidu_Search&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;   
        &lt;span class=&quot;s&quot;&gt;&quot;URL= http://www.baidu.com/s?wd=mobile&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;   
        &lt;span class=&quot;s&quot;&gt;&quot;TargetFrame=Main&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;   
        &lt;span class=&quot;s&quot;&gt;&quot;Resource=0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;   
        &lt;span class=&quot;s&quot;&gt;&quot;RecContentType=text/html&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;   
        &lt;span class=&quot;s&quot;&gt;&quot;Mode=http&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;   
        &lt;span class=&quot;n&quot;&gt;LAST&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;   
  
    &lt;span class=&quot;n&quot;&gt;lr_output_message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Request Status:%d&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  
    &lt;span class=&quot;n&quot;&gt;lr_output_message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;查找到的返回值个数:%d&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;atoi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lr_eval_string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{ret_Count}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)));&lt;/span&gt;  
  
  
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;atoi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lr_eval_string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{ret_Count}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//这里判断检查到的个数  
&lt;/span&gt;         &lt;span class=&quot;n&quot;&gt;lr_output_message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Rec successful.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  
         &lt;span class=&quot;n&quot;&gt;lr_end_transaction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;send&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LR_PASS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  
     &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;  
     &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;   
         &lt;span class=&quot;n&quot;&gt;lr_error_message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Rec failed&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  
         &lt;span class=&quot;n&quot;&gt;lr_end_transaction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;send&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LR_FAIL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  
     &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;   
  
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;  &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;2.HTTP POST请求 
这个是在我们项目中用到的，发送POST请求，进行自然语言识别的，脚本如下：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;n&quot;&gt;Action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;  
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  
  
    &lt;span class=&quot;n&quot;&gt;lr_start_transaction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;send&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  
  
    &lt;span class=&quot;n&quot;&gt;web_reg_find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Search=Body&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//这里说明在Body的范围内查找  
&lt;/span&gt;                 &lt;span class=&quot;s&quot;&gt;&quot;SaveCount=ret_Count&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//这里表示把返回值的个数放在变量ret_Count里  
&lt;/span&gt;                 &lt;span class=&quot;s&quot;&gt;&quot;Text=t&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//这里表示查找的内容是“t”  
&lt;/span&gt;                 &lt;span class=&quot;n&quot;&gt;LAST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  
  
    &lt;span class=&quot;n&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;web_submit_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;trs&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  
                &lt;span class=&quot;s&quot;&gt;&quot;Action=http://192.168.77.185:9002/recognizeText&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//地址  
&lt;/span&gt;                &lt;span class=&quot;s&quot;&gt;&quot;Method=POST&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//POST请求  
&lt;/span&gt;                &lt;span class=&quot;s&quot;&gt;&quot;RecContentType=text/html&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  
                &lt;span class=&quot;s&quot;&gt;&quot;Mode=HTML&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  
                &lt;span class=&quot;n&quot;&gt;ITEMDATA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  
                &lt;span class=&quot;s&quot;&gt;&quot;Name=usercontent&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Value=gprs&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ENDITEM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//这一行表示传入一个参数usercontent，值为gprs  
&lt;/span&gt;                &lt;span class=&quot;s&quot;&gt;&quot;Name=Accept&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Value=text/plain&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ENDITEM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  
                &lt;span class=&quot;n&quot;&gt;LAST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  
  
     &lt;span class=&quot;n&quot;&gt;lr_output_message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Request Status:%d&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  
  
     &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;atoi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lr_eval_string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{ret_Count}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//这里判断检查到的个数  
&lt;/span&gt;         &lt;span class=&quot;n&quot;&gt;lr_output_message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Rec successful.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  
         &lt;span class=&quot;n&quot;&gt;lr_end_transaction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;send&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LR_PASS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  
     &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;  
     &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;   
         &lt;span class=&quot;n&quot;&gt;lr_error_message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Rec failed&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  
         &lt;span class=&quot;n&quot;&gt;lr_end_transaction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;send&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LR_FAIL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  
     &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;   
  
     &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;  &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;3.WebService请求&lt;/p&gt;

&lt;p&gt;详细脚本如下：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;n&quot;&gt;Action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;  
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  
  
    &lt;span class=&quot;n&quot;&gt;lr_start_transaction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;send&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  
  
    &lt;span class=&quot;n&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;web_service_call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;StepName=getSupportCity_102&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  
        &lt;span class=&quot;s&quot;&gt;&quot;SOAPMethod=WeatherWebService|WeatherWebServiceSoap|getSupportCity&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//这里是我已经引用了webservice的名称及调用方法  
&lt;/span&gt;        &lt;span class=&quot;s&quot;&gt;&quot;ResponseParam=response&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  
        &lt;span class=&quot;s&quot;&gt;&quot;Service=WeatherWebService&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  
        &lt;span class=&quot;s&quot;&gt;&quot;ExpectedResponse=SoapResult&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  
        &lt;span class=&quot;s&quot;&gt;&quot;Snapshot=t1353067092.inf&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  
        &lt;span class=&quot;n&quot;&gt;BEGIN_ARGUMENTS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  
                      &lt;span class=&quot;s&quot;&gt;&quot;byProvinceName=安徽&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//这里是入参，参数名称：byProvinceName，值：安徽。入参和返回值的名称都可以再引用里看见  
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;END_ARGUMENTS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  
        &lt;span class=&quot;n&quot;&gt;BEGIN_RESULT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  
                      &lt;span class=&quot;s&quot;&gt;&quot;getSupportCityResult=result&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//这里是返回值，名称：getSupportCityResult，把它放到变量result中  
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;END_RESULT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  
        &lt;span class=&quot;n&quot;&gt;LAST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  
  
    &lt;span class=&quot;n&quot;&gt;lr_output_message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Request Status:%d&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  
    &lt;span class=&quot;n&quot;&gt;lr_output_message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Result:%s&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lr_eval_string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{result}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//这里把返回值输出，调试webservice的时候用  
&lt;/span&gt;  
  
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strstr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lr_eval_string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{result}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;合肥&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//这里是判断返回值中是否包含“合肥”  
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;lr_end_transaction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;send&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LR_PASS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  
        &lt;span class=&quot;n&quot;&gt;lr_end_transaction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;send&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LR_AUTO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;  
  
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;  &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;4.Socket请求 
我这里指的是简单的Socket请求，端连接，发送接收的都是一个字符串。比较复杂的Socket请求，自己录制脚本。如果不知道，自己去查。 
详细脚本如下，另外还包含一个data.ws文件，用来声明发送和接收的字节数组及其长度的，并指定要发送的内容（发送的内容一样可以参数化的）&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#include &quot;lrs.h&quot;  
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;  
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  
    &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;recvbuf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recvlen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  
  
    &lt;span class=&quot;n&quot;&gt;lrs_startup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;257&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  
  
    &lt;span class=&quot;n&quot;&gt;lr_start_transaction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Trans_1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  
    &lt;span class=&quot;n&quot;&gt;lr_start_transaction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Conn_1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  
  
    &lt;span class=&quot;n&quot;&gt;rc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lrs_create_socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;socket0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;TCP&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;RemoteHost=192.168.1.101:8888&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;LrsLastArg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//创建Socket连接  
&lt;/span&gt;  
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;     
        &lt;span class=&quot;n&quot;&gt;lr_end_transaction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Conn_1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LR_FAIL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;     
        &lt;span class=&quot;n&quot;&gt;lr_end_transaction&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Trans_1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LR_FAIL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;     
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;    
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;  
    &lt;span class=&quot;n&quot;&gt;lr_end_transaction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Conn_1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LR_PASS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//判断socket是否链接成功的事务，0表示创建成功  
&lt;/span&gt;  
    &lt;span class=&quot;n&quot;&gt;lrs_send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;socket0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;buf0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LrsLastArg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//发送buf0，buf0为在data.ws中定义的发送变量  
&lt;/span&gt;  
    &lt;span class=&quot;n&quot;&gt;lrs_receive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;socket0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;buf1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LrsLastArg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//接收消息，存放在buf1中，buf1是在data.ws中定义的接收数组，注意数组长度一定要大于等于实际接收长度  
&lt;/span&gt;  
    &lt;span class=&quot;n&quot;&gt;lrs_get_last_received_buffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;socket0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;recvbuf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;recvlen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//把Socket最后接收的字节数组，长度放在recvlen中，内容放在recvbuf中  
&lt;/span&gt;  
    &lt;span class=&quot;n&quot;&gt;lr_output_message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Received:%s&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lr_eval_string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;recvbuf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;  
  
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;recvlen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  
        &lt;span class=&quot;n&quot;&gt;lr_end_transaction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Trans_1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LR_PASS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;  
        &lt;span class=&quot;n&quot;&gt;lr_end_transaction&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Trans_1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LR_FAIL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  
  
  
    &lt;span class=&quot;n&quot;&gt;lrs_disable_socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;socket0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DISABLE_SEND_RECV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  
  
    &lt;span class=&quot;n&quot;&gt;lrs_close_socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;socket0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;  &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//data.ws  
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WSRData&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  
  
&lt;span class=&quot;n&quot;&gt;send&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;buf0&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt;  
    &lt;span class=&quot;s&quot;&gt;&quot;hehehehe&quot;&lt;/span&gt;  
  
&lt;span class=&quot;n&quot;&gt;recv&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;buf1&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;  
      
  
  
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
    </item>
    
    <item>
      <title>LoadRunner实战系列（二）之流程篇</title>
      <link>http://lilifeng.net/blogs/2015/02/06/loadrunner-operation/</link>
      <pubDate>Fri, 06 Feb 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>原生</category>
      
      <category>Web</category>
      
      <category>测试</category>
      
      <category>LoadRunner</category>
      
      
      <category>Internet</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/02/06/loadrunner-operation/</guid>
      <description>&lt;p&gt;##流程篇&lt;/p&gt;

&lt;p&gt;首先打开Virtual User Generator（VuGen）；&lt;/p&gt;

&lt;p&gt;创建新Virtual User，选择Web(HTTP/HTML)，点击创建；&lt;/p&gt;

&lt;p&gt;弹出了配置框，在里面选择如下内容：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Application Type: Internet Applications&lt;/p&gt;

  &lt;p&gt;Program to record: 这里如果有IE8及以下最好，因为LR不支持IE10以上；或者选择Firefox，因为LR对其他浏览器支持也不好。因此这里对我而言，选择firefox程序的所在&lt;/p&gt;

  &lt;p&gt;URL Address: 选择你需要测试的网址，比如http://www.baidu.com/?q=mobile&lt;/p&gt;

  &lt;p&gt;Working Directory: 不变即可&lt;/p&gt;

  &lt;p&gt;Record to Action: 选择Action即可&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;点击确定后将会进行后台录制，时间很长。对我而言点击取消，直接进入Action代码中进行编码。&lt;/p&gt;

&lt;p&gt;结束后将会进入Action代码页中，如果没有代码只有return 0，则可以手动添加你需要的逻辑，常用的有web_url，具体可以参考实战系列（三）之脚本篇&lt;/p&gt;

&lt;p&gt;脚本书写完毕后，可以点击Tools-&amp;gt;Create Controller Scenario，选择保存脚本后出现创建场景（Scenario）窗口，Vusers选择1000，点击确认进入Controller程序中&lt;/p&gt;

&lt;p&gt;进入Controller&lt;/p&gt;

&lt;p&gt;在左下角找到Global Schedule窗口，双击Start Vusers，选择开始即同步开启1000VUser，确认&lt;/p&gt;

&lt;p&gt;双击Duration，选择30分钟测试，确认；&lt;/p&gt;

&lt;p&gt;双击Stop VUsers，选择Stop All Vusers Simulatenously，确认&lt;/p&gt;

&lt;p&gt;选择Scenario-&amp;gt;Start开始运行，然后就可以观察到各种报表和系统实际承载能力了；&lt;/p&gt;

</description>
    </item>
    
    <item>
      <title>LoadRunner实战系列（一）之安装篇</title>
      <link>http://lilifeng.net/blogs/2015/02/05/loadrunner-install/</link>
      <pubDate>Thu, 05 Feb 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>原生</category>
      
      <category>Web</category>
      
      <category>测试</category>
      
      <category>LoadRunner</category>
      
      
      <category>Internet</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/02/05/loadrunner-install/</guid>
      <description>&lt;p&gt;LoadRunner 是一种预测系统行为和性能的工业标准级负载测试工具。通过以模拟上千万用户实施并发负载及实时性能监测的方式来确认和查找问题，LoadRunner 能够对整个企业架构进行测试。通过使用LoadRunner，企业能最大限度地缩短测试时间，优化性能和加速应用系统的发布周期。目前企业的网络应用环境都必须支持大量用户，网络体系架构中含各类应用环境且由不同供应商提供软件和硬件产品。难以预知的用户负载和愈来愈复杂的应用环境使公司时时担心会发生用户响应速度过慢， 系统崩溃等问题。这些都不可避免地导致公司收益的损失。Mercury Interactive 的 LoadRunner 能让企业保护自己的收入来源，无需购置额外硬件而最大限度地利用现有的IT 资源，并确保终端用户在应用系统的各个环节中对其测试应用的质量，可靠性和可扩展性都有良好的评价。LoadRunner是一种适用于各种体系架构的自动负载测试工具，它能预测系统行为并优化系统性能。LoadRunner的测试对象是整个企业的系统，它通过模拟实际用户的操作行为和实行实时性能监测，来帮助您更快的查找和发现问题。此外，LoadRunner能支持广范的协议和技术，为您的特殊环境提供特殊的解决方案。&lt;/p&gt;

&lt;p&gt;##安装篇&lt;/p&gt;

&lt;p&gt;下载地址：&lt;a href=&quot;http://pan.baidu.com/s/1kTDr9DP&quot;&gt;http://pan.baidu.com/s/1kTDr9DP&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;下载后直接运行setup.exe安装，中间可能会在要求安装基础软件的时候报错，一般的错误是运行时参数错误，解决方法是自行进入./Additional Components\IDE Add-Ins\MS Visual Studio .NET，选择报错的模块自行安装。&lt;/p&gt;

&lt;p&gt;安装完成后按照crack中说明文件即可完成破解并正常使用。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>fullPageSwipeLoop published!</title>
      <link>http://lilifeng.net/blogs/2015/02/04/full-page-swipe-loop/</link>
      <pubDate>Wed, 04 Feb 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>原生</category>
      
      <category>Web</category>
      
      <category>Website</category>
      
      <category>HTML</category>
      
      <category>Javascript</category>
      
      
      <category>Internet</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/02/04/full-page-swipe-loop/</guid>
      <description>&lt;h1 id=&quot;apfullpageswipeloopjshttpsgithubcomacepeakfullpageswipeloop&quot;&gt;&lt;a href=&quot;https://github.com/AcePeak/fullPageSwipeLoop&quot;&gt;ap.fullPageSwipeLoop.js&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;Based on &lt;a href=&quot;http://alvarotrigo.com/fullPage/&quot;&gt;fullPage&lt;/a&gt; but make it swipes more smooth and loop-able.&lt;/p&gt;

&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;/h2&gt;

&lt;p&gt;As you can see the swipeloop.html file in the example files, you will need to include:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://jquery.com/&quot;&gt;jQuery library&lt;/a&gt;. (1.6.0 minimum)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The JavaScript file &lt;code class=&quot;highlighter-rouge&quot;&gt;ap.fullPageSwipeLoop.js&lt;/code&gt; (or its minified version &lt;code class=&quot;highlighter-rouge&quot;&gt;ap.fullPageSwipeLoop.min.js&lt;/code&gt;)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The css file &lt;code class=&quot;highlighter-rouge&quot;&gt;ap.fullPageSwipeLoop.css&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;###Required HTML structure&lt;/p&gt;

&lt;p&gt;In order to create a landscape loopable slider within a section, each slide will be defined with another &lt;code class=&quot;highlighter-rouge&quot;&gt;div&lt;/code&gt;. Besides, another 2 slides should be duplicated from the original first and last slide div and seperately copied after the original last one and before the original first one. Like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;section&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;slide swipe&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Slide&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/div&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;	&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;slide&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Slide&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/div&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;	&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;slide&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Slide&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/div&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;	&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;slide&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Slide&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/div&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;	&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;slide&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Slide&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/div&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;	&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;slide swipe&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Slide&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/div&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You can see a fully working example of the HTML structure in the &lt;a href=&quot;https://github.com/acepeak/ap.fullPageSwipeLoop/blob/master/examples/swipeloop.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;swipeloop.html&lt;/code&gt; file&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;###Initialization
All you need to do is call the plugin inside a &lt;code class=&quot;highlighter-rouge&quot;&gt;$(document).ready&lt;/code&gt; function:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ready&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;#fullpage&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fullpage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;A more complex initialization with all options set could look like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ready&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;#fullpage&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fullpage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;//Scrolling&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;css3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;scrollingSpeed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;700&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;autoScrolling&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;scrollBar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;easing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;easeInQuart&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;easingcss3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;ease&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;loopBottom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;loopTop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;loopHorizontal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;loopHorizontalSwipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 				&lt;span class=&quot;c1&quot;&gt;//this is newly added for swipe loop&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;continuousVertical&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;normalScrollElements&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;#element1, .element2&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;scrollOverflow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;touchSensitivity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;normalScrollElementTouchThreshold&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
    </item>
    
    <item>
      <title>干货:如何运营手游用户与快速建立口碑传播</title>
      <link>http://lilifeng.net/blogs/2015/01/29/operate-game-app-users/</link>
      <pubDate>Thu, 29 Jan 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>市场</category>
      
      
      <category>mobile</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/01/29/operate-game-app-users/</guid>
      <description>&lt;p&gt;本文主要针对手游用户群体，谈用户运营与口碑传播的时候，在很多人看来可能会比较虚。自己最初也不是很清楚其核心目标是什么，用户运营与口碑传播有联系么?现在往回推敲似乎有些答案。&lt;/p&gt;

&lt;p&gt;##如何做手游的用户运营?&lt;/p&gt;

&lt;p&gt;1、为什么做用户运营?可能更多的运营方是想建立与用户的沟通、互动，获取用户的信息和需求；除此之外，六月觉得最重要的两点是挖掘核心用户与发挥用户价值，以促进并达到提升用户口碑的目的；&lt;/p&gt;

&lt;p&gt;2、做用户运营的方式有哪些?官方论坛、贴吧、Q群、微信，腾讯系的游戏则还包括兴趣部落等；&lt;/p&gt;

&lt;p&gt;当我们把这些都创建好后，那么问题来了，建设好了该怎么去运营? 用户怎么来，内容怎么建设，活跃怎么提升?六月的理解是先想清楚这些方式分别针对哪些用户，各有什么优势，内容应该有什么特色?比如六月在某游戏的时候，主要聚焦做Q群和贴吧，我们把Q群和贴吧做到一个高度，微信是后来看到用户需求和竞争对手之后才做，最后做的是论坛这块。&lt;/p&gt;

&lt;p&gt;##什么是参与感？让玩家管理玩家&lt;/p&gt;

&lt;p&gt;我们以礼包的形式快速让用户加入Q群， 礼包分低门槛和价值两种，低门槛的几乎人人都可以拿到(但还是会有人拿不到)，高价值的则发挥用户的价值，需要用户帮忙宣传或者做贡献才给予；我们前期冲量的第一个月，保持着一天发三次(除周末外，中午12点前、下午18点前、晚上22点前)的频率，礼包更新保持一周最少一次，多的一周新出4、5款礼包，当时没有做微信，礼包几乎都是靠人工发，周末自主不休，每天(除周末)最早22点下班；在如此高频的人员努力下，这款游戏的Q群终于达到1000人，逐渐形成了一批核心支持用户，并在玩家心里形成了一定的影响力和公信力。&lt;/p&gt;

&lt;p&gt;我们在贴吧并没有做太多的维护，大都是用户自主管理，贴吧当时只是宣传一个的渠道，通过贴吧来把玩家导入我们的Q群；在当时如此高频的工作状况下，我们小组根本没有多余的人员和精力去做贴吧和设想的特色内容，但我们鼓励并支持用户去活跃贴吧； 其实现在回想，这种方式太费精力了，但在那种条件下也许不是最好却是最合适的方式；&lt;/p&gt;

&lt;p&gt;六月鼓励并坚持理解，作为官方不应该是死板的，小米不也是在强调《参与感》么，虽然这本书我还没怎么看……现在看来，也许也有点《参与感》的概念。&lt;/p&gt;

&lt;p&gt;从做那款游戏Q群建立的开始，多次提出并在群内成员强调，此群以后的发展方向取决于玩家自己而不是我们官方，能不能拿到礼包也取决于玩家自己而不是我们官方。&lt;/p&gt;

&lt;p&gt;##两个故事 运营要跟玩家打成一片&lt;/p&gt;

&lt;p&gt;我们给玩家管理权限，让玩家带动玩家，让玩家帮我们推玩家，用玩家去影响玩家！最后我们去影响玩家!我们官方有空会和用户扯淡，会开适度的玩笑，形成我们官方人员的游戏粉丝，比如说六月偶尔也会和群内的男性聊一些诙谐的话题，又比如说这款游戏的男性玩家对我们的一个官方女性妹子很感性趣，六月也会爆料妹子的一些隐私信息；他们会发现原来官方原来也可以这么亲切，原来官方不是那种高高在上。&lt;/p&gt;

&lt;p&gt;在这种方式下，相对于我们做按条理的用户问卷调查，我们能够真切、直观的了解用户的真实需求和心理渴求； 我们能够主动收到玩家对产品的真实意见和想法，还有投诉；原来，玩家如此无聊和寂寞。&lt;/p&gt;

&lt;p&gt;有一天，我们的玩家管理发短信给我，那时我正在外面做校推，原来说好的时间点却迟迟没有上，六月马上电话回公司的程序，多次催促他们赶紧处理。&lt;/p&gt;

&lt;p&gt;有一天，我们的玩家管理发短信给我，又是这个妹子，告诉我有人冒充我并盗走群内某个玩家的账号。那时我刚下班快到家准备休息，听到消息马上电话回拨过去，然后上网了解经过，通过调查确实有人冒充我，而且这个盗号的不仅冒充我还冒充别的玩家，还骗过别的玩家的账号，意外的是这个盗号的玩家我还有印象。&lt;/p&gt;

&lt;p&gt;此时，我们被盗号的玩家已经打算弃号不玩了，也没有抱着能找回的心理了，要去卸载游戏。我说，不管怎样我都会尽力帮他找回账号，减少他的损失等之类安慰和鼓励语句，玩家从弃坑不玩的状态转变的有了那么一点点期待，还在担心着充值的钻石会不会被洗，物品里的道具会不会被废。而我此时其实还在担心，我不知道能不能找回，能找回什么，能补偿什么，这不是作为我一个小小的专员能决定的，而且这个点大家和合作方的商务都下班了，似乎也没有人会去在意这个可怜的小R充值玩家，除了我们(我和游戏的用户)。万幸的是，在大家的共同努力下，终于在2个小时内找回了被盗的账号，此时大概是22点左右的样子了；在这里我要感谢这些有爱的玩家，以及我们的合作方；如果这名被盗号的玩家去找这款游戏的CP客服，估计也许可能永远都找不回来了(不得不吐槽该游戏的CP客服)；如果这名被盗号的玩家去找我们合作方的客服，估计最早也要第二天才能找回来。&lt;/p&gt;

&lt;p&gt;处理好该名玩家的盗号事件后，当天晚上我写了一篇公告(并不是很官方的那种正规版式)，向我们所有的玩家用户，玩家最能看到和接触的地方，以及玩家很少看到的地方都发布通知 ，提高玩家的安全意识和防范意识，严厉打击盗号者，最后还不忘幽默一句，认准六月请认准六月的阿狸头像；而作为这件事的盗号者，由于权限等各种原因，很有限度的进行了处理。&lt;/p&gt;

&lt;p&gt;以上两件事只是做用户运营过程里很小的插曲，就是因为这些很小的插曲，让我们从没有任何特色、没有任何竞争力逐渐找到了自己的竞争力和特色，赢得了部分玩家的认可和信任；比如说盗号那件事，用户是喜欢八卦和传播的，这件事发生时就已经有一小部分玩家知道并传播，虽然当时只是一个很小的范围。试想着如果没有处理好这件事，我去发公告推动这件事的传播会造成更多的负面影响(但不得不发公告)；这件盗号的事件，通过用户的口碑传播和我们官方的推动，积极的展示了大家的正能量，我们的非充值玩家会认可我们官方，我们的充值玩家更会觉得有安全感，试想如果这些充值玩家，特别是大R玩家去别的平台，他们的账户安全问题会有保障么?别的平台会去这样认真的去解决他们的问题?可能再也找不回来，或者要等?时间才能找回来。&lt;/p&gt;

&lt;p&gt;##先抓核心用户 客观对待反对用户 严肃处理恶意用户&lt;/p&gt;

&lt;p&gt;用户是聪明和有感情的，特别是花了更多精力和金钱的； 然而现在很多CP的流程大都做不到2小时内处理这样的事情，其实玩家并不一定是要 一个多么满意的答案，要的是一个合适的交待，一个合适的尊重!&lt;/p&gt;

&lt;p&gt;六月刚入职某公司，了解到我们的这款产品玩家群已经默认不批准玩家进Q群了，理由是最大的BOSS觉得玩家会在Q群造成负面影响，且难于管理，针对这个问题说下六月的理解，这是不可避免也是必须要面对的问题，说大点就是心理学、人性等。&lt;/p&gt;

&lt;p&gt;有人的地方就有江湖，有江湖就有恩怨。Q群、贴吧等作为一个社交和用户兴趣承载的平台，有兴趣就会聚集话题，有人就会有不同的意见派别和恩怨纷争。&lt;/p&gt;

&lt;p&gt;Q群在用户运营里，六月个人觉得可以什么都不做，Q群必须做；无论贴吧、微信公众号等方式，Q群是唯一一个即时交流，多对多的社交兴趣承载平台，在某些方面最便捷、最直观，也是门槛最低的一个方式，你不做总会有别人做，干嘛不做呢?&lt;/p&gt;

&lt;p&gt;拿六月做的几款游戏Q群举例，无一都没法避免有人退群和争吵的问题。我的做法是，先抓核心用户，客观对待反对用户，严肃处理恶意用户。&lt;/p&gt;

&lt;p&gt;六月做的游戏Q群都是无一例外做到了以礼包为主题的宣传，进来的人基本上都是为了礼包，其次是交流游戏，最后是找朋友一起玩；而我们的礼包是永远不够的，也从没打算100%的玩家都能领到，因为进来的玩家太多，物以稀为贵，100%都能拿会降低价值和用户动力， 且前期都是以人工手动方式发放，出现用户需要排队几个小时才能拿到礼包的现象；最初的时候我们的退群率很高，负面影响比较高，天天不断被玩家骂，我们不断优化我们的发放流程，从入群的接待、欢迎语，公告、发放规则等，我们最开始几乎每一周都会和用户发邮件有大的沟通，每天很多次小的沟通和解释，我们告诉用户，支持我们的用户、信任我们的用户自然可以得到他们想要的礼包和更多福利，包括返利等，如果不愿意等待、不信我们的用户可以去媒体拿部分礼包，不用浪费时间在我们官方身上，缓解我们官方的压力，还有很多用户等着我们,至于恶意捣乱的用户请自行退群。&lt;/p&gt;

&lt;p&gt;##建立赏罚分明的用户管理制度&lt;/p&gt;

&lt;p&gt;于此同时，我们制定一些易懂精简的制度，赏罚分明，以处罚不是目的只是方式和从轻到重的处理理念，我们告知玩家欢迎举报恶意广告，允许部分合理的广告，比如别的媒体的拿礼包宣传广告等措施，逐渐的获得了用户的理解、体谅和支持，同时我们也不可避免的失去了一部分用户，但最后的结果证明，我们的代价、付出、方向是值得的。我们抓住我们的目标用户、最真实的核心用户，从差口碑到好口碑的转变，从鱼龙混杂什么样的人群都有到真正的认识方向是什么，我们的产品真正想要哪些用户。&lt;/p&gt;

&lt;p&gt;贴吧会有爆吧、Q群会有喷子，公众号的玩家负面消息只是只能在后台看到，堵不如疏。玩家都会有怨言，问题是该怎么处理。&lt;/p&gt;

&lt;p&gt;QQ群正是因为做得太好太即时，会让很多人觉得太吵被屏蔽掉。我们的竞争对手后来做了微信公众号，最初我也想过要去做微信公众号，考虑到花费的精力和大环境并没有去做，不是不想去做，做微信公众号会分流用户，做贴吧也是分流用户，根据不同的属性要做不同的调整，当时没有想到该怎么去做微信公众号，就光Q群就很忙碌。后来逐渐发现，微信公众号还是有必要做的，第一，帮我们分流觉得Q群太吵而屏蔽的用户；第二，有些用户只用Q群，那自然有些用户只会用微信，抓取更细分用户；第三，竞争对手在做，我们可以做的某些方面比他们更好；第四，和贴吧、Q群形成闭环相关的渠道；Q群侧重玩家的即时交流，与我们官方的即时沟通交流，C2C2B。贴吧侧重玩家对玩家的游戏攻略交流、讨论C2C。微信侧重推送消息传播和栏目活动，C2B。第五，小组新增人手。&lt;/p&gt;

&lt;p&gt;这篇文章写了很长，还是有很多重要的细节和故事没有写到，口碑确实很虚，口碑需要一个基数和时间才能形成影响力，很难去评估说口碑能带来多少的影响力、带来多少的用户，也存在一定风险，通过快速的手段可以又省精力和积累更多的用户。如果产品要做长线运营，用户运营和口碑却是最重要和最不可缺的。&lt;/p&gt;

&lt;p&gt;最后用传遍了的一句话结束——品质、口碑、高效。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>【转】SEO经验（四）之工具篇</title>
      <link>http://lilifeng.net/blogs/2015/01/29/Website-SEO-Tools/</link>
      <pubDate>Thu, 29 Jan 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>Web</category>
      
      <category>Website</category>
      
      <category>SEO</category>
      
      
      <category>Internet</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/01/29/Website-SEO-Tools/</guid>
      <description>&lt;p&gt;SEO工作者经常需要一些SEO工具的辅助，比如网站收录查询、PR查询等等，以便节省自己的时间，让SEO变得更加轻松。那么，常用的SEO工具都有哪些呢？月光博客今天就介绍一些常用的SEO工具网址，并将其进行分类，希望对大家的SEO工作有所帮助。&lt;/p&gt;

&lt;p&gt;#网站管理员工具&lt;/p&gt;

&lt;p&gt;网站管理员工具需要对网站域名所有权进行验证，通常是通过上传指定文件、增加META或者修改网站DNS来验证管理员身份，通过验证后，网站管理员可以查询到自己网站的各类统计信息。&lt;/p&gt;

&lt;p&gt;1、 &lt;a href=&quot;http://www.google.com/webmasters/&quot;&gt;Google Webmaster Tools&lt;/a&gt;：谷歌网站管理员工具，可以获取到谷歌抓取、编入索引和搜索流量的数据，同时接收关于用户网站上所存在的问题的通知。&lt;/p&gt;

&lt;p&gt;2、 &lt;a href=&quot;http://www.bing.com/toolbox/webmaster&quot;&gt;Bing Webmaster Tools&lt;/a&gt; ：微软必应网站管理员工具，获取到必应的搜索查询、索引和搜索流量的数据，Yahoo Site Explorer关闭之后，很多功能也整合进了Bing Webmaster Tools里。&lt;/p&gt;

&lt;p&gt;3、 &lt;a href=&quot;http://zhanzhang.baidu.com/&quot;&gt;百度站长平台&lt;/a&gt;：百度站长工具，提供了用户提交Sitemap的功能，Ping服务，并给出了一些URL优化建议、网站安全检测工具。&lt;/p&gt;

&lt;p&gt;4、 &lt;a href=&quot;http://zhanzhang.so.com/&quot;&gt;360站长平台&lt;/a&gt;：360站长工具，提供Sitemap提交、URL收录、索引量查询、关键字分析等功能。&lt;/p&gt;

&lt;p&gt;5、 &lt;a href=&quot;http://zhanzhang.sogou.com/&quot;&gt;搜狗站长平台&lt;/a&gt;：搜狗的站长工具，提供Sitemap提交、死链提交、URL提交、域名变更、抓取压力反馈等功能。&lt;/p&gt;

&lt;p&gt;#外链检查工具&lt;/p&gt;

&lt;p&gt;外链检查工具用于查询各个（特别是竞争对手）网站的外链情况，通常不需要登录即可使用。&lt;/p&gt;

&lt;p&gt;1、 &lt;a href=&quot;http://siteexplorer.search.yahoo.com/&quot;&gt;Yahoo Site Explorer&lt;/a&gt;：Yahoo的外链数据公认是最准确的，所以该工具也有很大参考意义，可惜这个本来很不错的一个工具，却被Yahoo给关闭了。&lt;/p&gt;

&lt;p&gt;2、 &lt;a href=&quot;http://www.opensiteexplorer.org/&quot;&gt;Open Site Explorer&lt;/a&gt;：这个工具和Yahoo Site Explorer非常类似，可以分析出链接网站的域名数，链接按照权重进行排序。不过其分析的链接对中文网站不太准，无法识别百度搜索引擎，费用较高，PRO版每月要99美元。&lt;/p&gt;

&lt;p&gt;3、 &lt;a href=&quot;http://www.majesticseo.com/&quot;&gt;Majestic SEO&lt;/a&gt;：好用的外链查询工具，可以索引相当多的链接，可惜不是免费的。自己管理的网站可以免费查询，不过需要上传一个文件进行校验。竞争对手的网站可以查询出链接总数和头五个链接，更多查询链接需要收费。&lt;/p&gt;

&lt;p&gt;#流量查询工具&lt;/p&gt;

&lt;p&gt;流量查询工具用于粗略估算各个网站的流量情况，通常不需要登录即可使用。&lt;/p&gt;

&lt;p&gt;1、 &lt;a href=&quot;http://www.alexa.com/&quot;&gt;Alexa&lt;/a&gt;：Alexa做为较具权威性的排名统计平台，能够提供各个网站排名信息、网络流量数据、关键词搜索分析、网站用户统计等功能。Alexa提供了简体中文网站服务。&lt;/p&gt;

&lt;p&gt;2、 &lt;a href=&quot;http://trends.google.com/websites&quot;&gt;Google Website Trends&lt;/a&gt;：Google Trends提供的网站流量查询服务，可以分析所有网站的流量和受欢迎程度，还可以用图表的方式比较同类相关网站的流量。和Alexa的界面相比，Google Trends for Websites的界面显得较为简单，提供的数据信息也很少，但Google趋势提供的信息具有较高的权威度，准确度也较高，可以大致比较两个不同网站的流量大小。&lt;/p&gt;

&lt;p&gt;3、 &lt;a href=&quot;http://www.google.com/adplanner/&quot;&gt;DoubleClick Ad Planner&lt;/a&gt; ：DoubleClick Ad Planner的前身是Google Ad Planner，通过DoubleClick Ad Planner这一免费的媒体规划工具可以优化用户的在线广告，该工具提供了各种网站的访问量统计，以便广告商能根据访问量知道投放广告的最佳选择。&lt;/p&gt;

&lt;p&gt;#关键字查询工具&lt;/p&gt;

&lt;p&gt;1、 &lt;a href=&quot;http://trends.google.com/&quot;&gt;Google Trends&lt;/a&gt;：Google Trends(谷歌趋势)是一款基于搜索日志分析的应用产品，通过分析Google数据库中的搜索结果，告诉用户某一搜索关键词在Google中被搜索的频率和相关统计数据。在Google Trends中的每一关键词的趋势记录图形显示分为搜索量和新闻引用量两部分，用户可直观的分别看到每一关键词在Google全球的搜索量和相关新闻的引用情况的变化走势，并有详细的城市、国家/地区、语言柱状图显示。&lt;/p&gt;

&lt;p&gt;2、 &lt;a href=&quot;http://www.google.com/insights/search/&quot;&gt;Google Insights Search&lt;/a&gt;：Google Insights Search（谷歌搜索解析）实际上和Google Trends的功能差不多，但是细节方面比Google Trends多，显得更为专业。Google Insights Search可以比较特定区域、类别、时间范围以及搜索资源之间的搜索量。&lt;/p&gt;

&lt;p&gt;3、 &lt;a href=&quot;http://index.baidu.com/&quot;&gt;百度指数&lt;/a&gt;：百度指数和Google Trends的功能差不多，不过其搜索数据是基于百度搜索引擎的，这个工具是以百度网页搜索和百度新闻搜索为基础的数据分析服务，用来分析不同关键词在过去一段时间里的“用户关注度”和“媒体关注度”，对于中国用户来说，这个关键字分析工具很有用。&lt;/p&gt;

&lt;p&gt;4、 &lt;a href=&quot;https://adwords.google.com/select/KeywordToolExternal&quot;&gt;Google AdWords关键字工具&lt;/a&gt;：Google AdWords关键字工具可以帮助用户选择关键字并跟踪关键字效果。可以根据用户指定的关键字自动生成最常用同义词及相关词组列表，并为用户提供关键字的点击量估算。其“流量估算工具”还可以估算指定关键字的全球每月搜索量以及本地每月搜索量，适合于挖掘信息量很大的垂直型门户网站的长尾关键词。&lt;/p&gt;

&lt;p&gt;#关键字排行工具&lt;/p&gt;

&lt;p&gt;1、&lt;a href=&quot;http://top.baidu.com/&quot;&gt;百度搜索风云榜&lt;/a&gt;：百度发布的每日关键词排行榜，根据前一天的百度搜索量统计自动计算生成，每天早上自动更新，实时更新当前网友最关注，搜索最热门的内容。&lt;/p&gt;

&lt;p&gt;2、 &lt;a href=&quot;http://www.google.com/zeitgeist&quot;&gt;Google Zeitgeist&lt;/a&gt;：Google Zeitgeist是Google发布的年度关键词排行榜，针对每年Google查询进行统计，收集人们最关心的关键词，Google Zeitgeist提供热点关键字的年度列表，还提供不同主题和国家的列表。每日的排行列表目前只有英文版，由Google Trends提供。&lt;/p&gt;

&lt;p&gt;3、 &lt;a href=&quot;http://top.sogou.com/&quot;&gt;搜狗热搜榜&lt;/a&gt;：搜狗发布的每日关键词排行榜，根据搜狗的搜索数据生成。&lt;/p&gt;

&lt;p&gt;#网站统计工具&lt;/p&gt;

&lt;p&gt;1、&lt;a href=&quot;http://www.google.com/analytics/&quot;&gt;Google Analytics&lt;/a&gt;：Google推出的免费分析服务，对市场营销和内容优化上提供很多专业报表。&lt;/p&gt;

&lt;p&gt;2、&lt;a href=&quot;http://tongji.baidu.com/&quot;&gt;百度统计&lt;/a&gt;：百度推出的免费专业网站流量分析工具，功能和Google Analytics差不多。&lt;/p&gt;

&lt;p&gt;3、&lt;a href=&quot;http://www.cnzz.com/&quot;&gt;CNZZ统计&lt;/a&gt;：国内站长用的较多的统计工具，功能简单实用，适合草根站长。&lt;/p&gt;

&lt;p&gt;#网站联盟&lt;/p&gt;

&lt;p&gt;1、&lt;a href=&quot;https://www.google.com/adsense/&quot;&gt;Google Adsense&lt;/a&gt;：谷歌联盟，站长投放最多的联盟广告，单价高，分成高，美元结算，申请方便，管理十分严格，一旦作弊永久封杀帐号。&lt;/p&gt;

&lt;p&gt;2、&lt;a href=&quot;http://union.baidu.com/&quot;&gt;百度联盟&lt;/a&gt;：国内站长使用较多的联盟，审核较严格，需要备案，人民币结算，付款方便，需要扣除个人所得税。&lt;/p&gt;

&lt;p&gt;#网站广告管家&lt;/p&gt;

&lt;p&gt;1、&lt;a href=&quot;https://www.google.com/dfp&quot;&gt;Google DFP 广告管理系统&lt;/a&gt;：功能强大，但使用起来较为复杂，和Google Adsense完美整合。&lt;/p&gt;

&lt;p&gt;2、&lt;a href=&quot;http://adm.baidu.com/&quot;&gt;百度广告管家&lt;/a&gt;：百度的广告管家工具，操作简单、容易上手，和百度联盟完美整合。&lt;/p&gt;

&lt;p&gt;3、&lt;a href=&quot;http://adm.cnzz.com/&quot;&gt;CNZZ广告管家&lt;/a&gt;：免费托管的智能广告管理系统，依托于数据统计，在国内的用户量也不小，功能与百度广告管家差不多。&lt;/p&gt;

&lt;p&gt;#网站安全检测&lt;/p&gt;

&lt;p&gt;1、&lt;a href=&quot;http://www.anquan.org/&quot;&gt;安全联盟&lt;/a&gt;：第三方安全组织，已与百度、腾讯、招商银行等近800家机构、企业等官方网站达成合作。&lt;/p&gt;

&lt;p&gt;2、&lt;a href=&quot;http://webscan.360.cn/&quot;&gt;360网站安全检测&lt;/a&gt;：360网站安全检测，我认为是功能最全的系统了，提供免费的网站漏洞检测、网页挂马检测、网页篡改监控服务。&lt;/p&gt;

&lt;p&gt;3、&lt;a href=&quot;http://zhanzhang.baidu.com/safe&quot;&gt;百度网站安全检测工具&lt;/a&gt;：很重要，引用腾讯、金山、瑞星、小红伞、知道创宇的数据库，如果你的网站已在搜索结果中被标示不安全，可以提交申诉。&lt;/p&gt;

&lt;p&gt;4、&lt;a href=&quot;http://guanjia.qq.com/online_server/webindex.html&quot;&gt;腾讯电脑管家安全检测&lt;/a&gt;：在QQ聊天窗口中发的网址，会调用此数据库，作用较大。&lt;/p&gt;

&lt;p&gt;5、&lt;a href=&quot;http://www.jiankongbao.com/&quot;&gt;监控宝&lt;/a&gt;：监控站点是否可以访问,发送故障通知，深入分析响应时间，生成性能报告，帮助您改善性能。&lt;/p&gt;

&lt;p&gt;6、&lt;a href=&quot;http://union.rising.com.cn/index/index.aspx&quot;&gt;瑞星网站密码安全检测系统&lt;/a&gt;：通过全面的分析报告，为管理员提供快速修复网站密码安全隐患的建议。&lt;/p&gt;

&lt;p&gt;7、&lt;a href=&quot;http://secure.supfree.net/&quot;&gt;诺顿在线网站安全检测&lt;/a&gt;：可以帮您了解网站的真实性与安全性，避免上网中病毒、木马，防止被钓鱼网站欺骗。&lt;/p&gt;

&lt;p&gt;8、&lt;a href=&quot;http://999.anquanbao.com/&quot;&gt;安全宝&lt;/a&gt;：特色功能，修复网站漏洞、免费mini CDN加速、可视化网站报告，创新工场旗下一员。&lt;/p&gt;

&lt;p&gt;9、&lt;a href=&quot;http://www.scanv.com/&quot;&gt;SCANV安全中心&lt;/a&gt;：与百度深入合作的安全检测网站，百度搜索结果的风险提示有部分数据就引用自SCANV，站长值得重视。&lt;/p&gt;

&lt;p&gt;#网站被封申诉通道&lt;/p&gt;

&lt;p&gt;1、&lt;a href=&quot;http://zhanzhang.baidu.com/feedback&quot;&gt;百度网页申诉&lt;/a&gt;：专人处理申诉问题，然后分发到各个小组处理。&lt;/p&gt;

&lt;p&gt;2、&lt;a href=&quot;http://www.google.com/webmasters/&quot;&gt;Google网站申诉&lt;/a&gt;：登陆Google网站管理员工具即可。&lt;/p&gt;

&lt;p&gt;3、&lt;a href=&quot;http://guanjia.qq.com/complaint.html&quot;&gt;腾讯电脑管家网站申诉&lt;/a&gt;：QQ聊天窗口输入网址出现绿色对勾、红色叉（不信任网站）均可以在这里申诉。&lt;/p&gt;

&lt;p&gt;4、&lt;a href=&quot;http://www.anquan.org/seccenter/appeal_verify/&quot;&gt;安全联盟申诉通道&lt;/a&gt;：百度搜索结果中出现的风险提示，均来自SCANV(知道创宇)的网址库。&lt;/p&gt;

&lt;p&gt;5、&lt;a href=&quot;http://wd.360.cn/appeal/appeal.html&quot;&gt;360网盾申诉&lt;/a&gt;：360网盾拦截木马病毒网站，采取自动加人工的审核方法，核实您申诉的网址是否存在欺骗、不健康或者其他恶意信息的行为。&lt;/p&gt;

&lt;p&gt;6、&lt;a href=&quot;http://fish.ijinshan.com/Kws/appeal&quot;&gt;金山云安全网站申诉&lt;/a&gt;：主要通过杀毒软件拦截的网页，如果出现误报可以向金山申诉。&lt;/p&gt;

&lt;p&gt;#社会化工具&lt;/p&gt;

&lt;p&gt;1、&lt;a href=&quot;http://tuijian.baidu.com/&quot;&gt;百度推荐工具&lt;/a&gt;：该工具是通过对用户访问内容和行为的数据分析，向用户相关的文章内容，以此提高网站流量和黏性。&lt;/p&gt;

&lt;p&gt;2、&lt;a href=&quot;http://duoshuo.com/&quot;&gt;多说评论&lt;/a&gt;：目前站长用的最多的插件了，第三方社会化评论系统，功能同上！&lt;/p&gt;

&lt;p&gt;3、&lt;a href=&quot;http://www.denglu.cc/demo.html&quot;&gt;灯鹭社会化评论&lt;/a&gt;：功能最全的一款社会化工具，包含社会化登陆和分享功能，代码简洁、加载速度快，支持二次开发。&lt;/p&gt;

&lt;p&gt;4、&lt;a href=&quot;http://www.jiathis.com/&quot;&gt;JiaThis分享&lt;/a&gt;：国内中小网站使用量最大的分享工具，数据分析强大，代码简洁。&lt;/p&gt;

&lt;p&gt;5、&lt;a href=&quot;http://www.bshare.cn/s&quot;&gt;bShare分享&lt;/a&gt;：社会化分享工具，可把文章一键分享到上百个社会化网站中。优点是与同类工具比后台统计数据全面、专业。&lt;/p&gt;

&lt;p&gt;6、&lt;a href=&quot;http://www.wumii.com/widget/relatedItems&quot;&gt;无觅相关文章插件&lt;/a&gt;：利用数据挖掘的技术，在读者阅读时显示最相关的内容，从而提升访问量，延长读者逗留在您网站的时间。&lt;/p&gt;

&lt;p&gt;7、&lt;a href=&quot;http://www.uyan.cc/&quot;&gt;友言&lt;/a&gt;：一键同步评论留言分享到社交平台，实时采集SNS相关留言评论，迅速提升网站社会化流量。&lt;/p&gt;

&lt;p&gt;8、&lt;a href=&quot;http://www.ujian.cc/&quot;&gt;友荐相关文章推荐工具&lt;/a&gt;：JiaThis旗下网站，与无觅相关文章插件类似，但代码简洁，同时还能在、各自合作网站实现站站互推。&lt;/p&gt;

&lt;p&gt;9、&lt;a href=&quot;http://lz.bshare.cn/&quot;&gt;乐知相关文章插件&lt;/a&gt;：bshare旗下网站，代码简洁，功能同上！&lt;/p&gt;

&lt;p&gt;10、&lt;a href=&quot;http://tui.cnzz.com/&quot;&gt;云推荐&lt;/a&gt;：阿里云旗下面向站长的智能文章推荐工具！基于阿里云先进的云计算系统，支持海量网页数据和用户行为数据的分析计算。&lt;/p&gt;

&lt;p&gt;#站长综合类查询工具&lt;/p&gt;

&lt;p&gt;1、&lt;a href=&quot;http://tool.chinaz.com/&quot;&gt;站长工具&lt;/a&gt;: Chinaz提供的系列SEO工具集，将不少SEO查询集中在一个页面。&lt;/p&gt;

&lt;p&gt;2、&lt;a href=&quot;http://www.aizhan.com/&quot;&gt;爱站&lt;/a&gt;: 爱站网以百度权重查询起家，之后提供了多种站长常用查询工具。&lt;/p&gt;

&lt;p&gt;3、&lt;a href=&quot;http://www.archive.org/&quot;&gt;网站历史查询工具&lt;/a&gt;: 美国互联网档案馆(The Internet Archive)保存了自1996年开始的各类网站的首页截图资料，不过该网站已经被中国屏蔽了。&lt;/p&gt;

</description>
    </item>
    
    <item>
      <title>【转】SEO经验（三）之改版篇</title>
      <link>http://lilifeng.net/blogs/2015/01/28/Website-SEO-Refactor/</link>
      <pubDate>Wed, 28 Jan 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>Web</category>
      
      <category>Website</category>
      
      <category>SEO</category>
      
      
      <category>Internet</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/01/28/Website-SEO-Refactor/</guid>
      <description>&lt;p&gt;当网站运营一段时间后，你想扩大规模或希望获得更好的效果时，我们就会对网站进改版。对现有结构去做任何改动，都有可能会对搜索引擎产生一定的影响，那怎样才能让损失降到最低，在这里给出了以下需要注意的事项，供参考。&lt;/p&gt;

&lt;p&gt;一、持有搜索引擎优化概念&lt;/p&gt;

&lt;p&gt;当网站改版时你可能注意更多的是网站的外观，但是你要记住，网站空有漂亮的外壳是没有用的，所以当外观不利于排名的时候你必须要做好取舍，另外在设计网站时要考虑到搜索引擎优化的一些问题，譬如：标题是否唯一、url做没做静态化、网站是否填写了title、keywords、description三个标签、是否为网站写了robots等等。&lt;/p&gt;

&lt;p&gt;二、重定向与404&lt;/p&gt;

&lt;p&gt;尽量让之前的url网址都能打开，如果确实无法做到，或者涉及到换域名，那么必须把之前的url重定向到新网页。做完重定向之后，还有一项工作是不可缺少的，那就是为新网站制作404页面，无论网站开发者考虑的多么精密和周全，只要涉及到改版肯定有死链接，所以这项工作绝对不能少。&lt;/p&gt;

&lt;p&gt;三、调试分析&lt;/p&gt;

&lt;p&gt;准确的调试和分析对于网站来说非常重要。在网站没有完善之前一旦上线对网站伤害是很大的。首先我们要做的就是分析和调试，确保每个页面的功能，如果你的URL结构发生了改变，你的目标的URL，也有可能改变了，这将需要你去修订。&lt;/p&gt;

&lt;p&gt;四、屏蔽爬虫&lt;/p&gt;

&lt;p&gt;如果你的网站是一点点修改，向新网站过度(在线修改)，你可以短暂屏蔽搜索引擎抓取，采用robots.txt禁止或Meta Robots使用禁止爬虫在源代码上爬行，观察排名是否有波动。&lt;/p&gt;

&lt;p&gt;五、内部连接&lt;/p&gt;

&lt;p&gt;重新设计的网站可能充满内部链接的缺陷。该网站上线后你应该做人工审查或者用站长工具软件等审查。我喜欢使用Chrome插件检查我的链接，快速评估哪些链接可能坏了。以确保他们将链接到真正的页面的URL并不是重定向。&lt;/p&gt;

&lt;p&gt;六、外观及兼容&lt;/p&gt;

&lt;p&gt;新网站看起来真的很不错，但是你必须确保你新设计的网站让所有人在所有的浏览器上看到的内容是一样的。另外，要注意在移动设备上如何看起来更好。在这里你可以使用的工具，如browserstack或跨浏览器测试。&lt;/p&gt;

&lt;p&gt;七、代码审查&lt;/p&gt;

&lt;p&gt;以上，我们提到了一些代码的相关因素如meta robots标签和网站三要素标签，然而，还有其他的一些代码需要我们注意。如：css和js是否规范、网页是否做gzip压缩，MD5加密代码是否正确等等。&lt;/p&gt;

</description>
    </item>
    
    <item>
      <title>【转】SEO经验（二）之PHP技术篇</title>
      <link>http://lilifeng.net/blogs/2015/01/27/Website-SEO-PHPTech/</link>
      <pubDate>Tue, 27 Jan 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>Web</category>
      
      <category>Website</category>
      
      <category>SEO</category>
      
      
      <category>Internet</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/01/27/Website-SEO-PHPTech/</guid>
      <description>&lt;p&gt;现在SEO基本上已经是在广泛的应用了，php程序的企业网站也越来越多，其实我之前一直喜欢用asp的，但是发现很多国外的空间现在不支持asp，所以也就研究了一下php，网站建好，当然也想要有一个好的网站排名，带来流量和销量，本文我和大家总结一下在apache服务器下PHP网站的几个seo建议吧!&lt;/p&gt;

&lt;p&gt;PHP(超文本预处理器)是一种开源脚本语言。它吸收了很多常用语音的语法和特点，是目前大多数网站所采用的WEB开发语言。PHP网站的SEO优化策略包括关键词优化、网站地图优化、URL地址静态化和URL重写优化等。但是在这些优化的时候必须遵循各大搜索引擎公司的搜索原则，否则会被认为在SEO作弊，那样不但不会给网站带来人气和流量，还会影响网站被收录。&lt;/p&gt;

&lt;p&gt;一、PHP网站关键词优化&lt;/p&gt;

&lt;p&gt;根据搜索引擎的工作原理，我们知道用户和搜索引擎都是根据关键词对目标网站进行搜索分析。通过分析这些的关键词和搜索流量，我们发现在网站发展前期关键词是影响网站被搜索引擎收录的一个核心因素，关键词给网站带来了大量用户的同时也带来了大量的流量，其流量比例占网站总流量的绝大部分。由此可见，关键词的优化对于网站的流量至关重要。而关键词的确定必须是和网站内容高度相关的，一般网站需要在以下位置设置关键词:&lt;/p&gt;

&lt;p&gt;(1)关键词需要出现在标签当中，也就是标题当中需要包含关键词，而且还需要保证不同的页面是不一样的;&lt;/p&gt;

&lt;p&gt;(2)关键词应放在网站的标签内的keywords和description里面，并且一般只可出现一次;&lt;/p&gt;

&lt;p&gt;(3)网站logo图片的Alt属性中可以设置于网站主题的关键词，其他图片的Alt应放着与图片相符合的ALT属性，否则会被搜索引擎认为在作弊;&lt;/p&gt;

&lt;p&gt;(4)网站的目录名和文件名可以设置为关键词，会更好的被搜索引擎抓取;&lt;/p&gt;

&lt;p&gt;(5)网页内容的中一般放置一篇文章的标题或者内容提要，这里需要放置关键词，但是整个页面的关键词不易设置过度，一般设置在 标签中，但需与文章内容相关，否则会认为在作弊。&lt;/p&gt;

&lt;p&gt;二、PHP网站地图优化&lt;/p&gt;

&lt;p&gt;网站地图优化又叫网站导航优化俗称sitemap。首先网站地图为网站访问者指明了访问网站的方向和路径，清晰明了的告诉网站访问者网站的布局和内容，给网站访问者友好的体验。用户的体验感觉不错，那么他下次访问网站的几率就会大大提高;其次搜索引擎蜘蛛也非常喜欢网站地图。因此做好网站地图SEO，对于网站非常重要。&lt;/p&gt;

&lt;p&gt;(1)针对PHP网站，一般采用XML格式的网站地图。网站地图保存在根目录下的一个XML文件里，大家在很多网站的底部都会发现有这么一个文件。例如：www.xxx.com/sitemap.xml,它是网站上链接的列表。制作一个简洁明了高效的网站地图，可以为搜索引擎快速浏览整个网站的窗口，并且收录网站的全部内容。&lt;/p&gt;

&lt;p&gt;(2)一般在网站的footer下添加一个关键词，并指向相应的内容页面。&lt;/p&gt;

&lt;p&gt;三、PHP网站 URL地址优化&lt;/p&gt;

&lt;p&gt;URL地址优化包括URL地址静态化(又叫伪静态)和URL地址转向两个方面。根据搜索引擎的搜索原理，静态页面更有利于搜索引擎抓取收录。现在大多数网站都是动态的页面，比如本文所讨论的PHP网站就为动态链接的页面。那么我们就要采取措施把PHP动态生成的页面转化为静态页面。&lt;/p&gt;

&lt;p&gt;四、 url地址静态化&lt;/p&gt;

&lt;p&gt;(1))把网页上带链接的地方，都换上新的静态化链接。搜索引擎和浏览器将通过该链接来发生请求。&lt;/p&gt;

&lt;p&gt;(2)Apache服务器中在httpd.conf或.htaccess使用”/dir/([^./]*).html”来实现新的重写规则，告诉Apache服务执行这个重写规则之后的操作。通过这样一个重写规则使得PHP生成的动态页面转化为静态页面展现给搜索引擎。当搜索引擎蜘蛛爬行到这里页面的时候，就会记录下这个新的页面，从而达到URL地址优化的目的。在执行这样的操作后，要保留原链接只需在httpd.conf中使用Alias指令(仅适用于apache服务器)。&lt;/p&gt;

</description>
    </item>
    
    <item>
      <title>【转】SEO经验（一）之原则篇</title>
      <link>http://lilifeng.net/blogs/2015/01/26/Website-SEO-Principles/</link>
      <pubDate>Mon, 26 Jan 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>Web</category>
      
      <category>Website</category>
      
      <category>SEO</category>
      
      
      <category>Internet</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/01/26/Website-SEO-Principles/</guid>
      <description>&lt;p&gt;#一、域名如何选择对SEO最佳。&lt;/p&gt;

&lt;p&gt;1、选择原则：新站选择域名，千万不要贪图老域名，不要听那些广告吹嘘的老域名有多少多少好处！新站绝对不要有任何历史背景的新域名，也不要选灰色词语、尤其是有黑色历史的旧网站。&lt;/p&gt;

&lt;p&gt;2、识别方法：查找要购买的域名是否有历史背景：用带WWW域名和不带WWW的域名在百度查询，然后再谷歌查询。一定要在两个搜索引擎都搜索过，发现都没有任何相关记录，才能进行确认这个新域名没有问题。&lt;/p&gt;

&lt;p&gt;3、问题回顾：新站开了之后，突然发现有很多外链，或者关键词突然掉了，或者收录突然消失。往往都是这种问题。但你遇到这种问题的时候，建议立即更换一个域名。这样比优化一个有历史问题的网站来的快！百度的这种算法问题，正如人脑海里面的“坏同学“的坏印象一样：一旦印象差，心里总有那么一点的不好感和印象，相处起来总有疙瘩！&lt;/p&gt;

&lt;p&gt;#二、怎么选择最适合SEO的空间/服务器。&lt;/p&gt;

&lt;p&gt;1、判断原则：必须去查空间的IP，查这个空间的IP的共用网站是否有被K历史，或者被降权历史。&lt;/p&gt;

&lt;p&gt;2、检查方法：如何查，就是在站长工具/爱站里面查这个IP是否有其他网站，然后用这些工具进行SEO综合信息查询这些同一个IP共用服务器的所在网站。如果网站有好多，要多查几十个网站。&lt;/p&gt;

&lt;p&gt;3、参考标准：&lt;/p&gt;

&lt;p&gt;（1）、检查是否有被降权的历史或被K的历史，如果都没有，要检查这些网站是否有快照更新、是否网站的权重全是0。如果这些网站都会过类似的的被降权、被K的历史问题的，不要选择这种空间。新站开了之后，死活不收录，怎么都没有排名，就极度有可能是这个问题。&lt;/p&gt;

&lt;p&gt;（2）、检查这些共用服务器空间的网站，都是做什么内容网站的，传奇私服、博彩、弹窗广告、黑客服务、红客联盟、软件下载站之类的。如果网站突然降权、突然被K、突然被攻击，很有可能就是被的网站受到攻击，而殃及了自己的网站。&lt;/p&gt;

&lt;p&gt;（3）检查同一个IP的这个服务器的网站数量。如果网站数量超过100个甚至有几千个，那么你必须要考虑放弃这个空间了。有时候自己的网站经常突然打不开，过了一段时间就好了，就是这种网站数量提案多问题导致的。数量太多的，还有可能是小规模的站群网站，要特别注意。&lt;/p&gt;

&lt;p&gt;#三、程序选择不可马虎大意。&lt;/p&gt;

&lt;p&gt;1、选择标准：不要复制别人的程序，不要下载网上的源码，不要购买非官方的淘宝店上的源码。&lt;/p&gt;

&lt;p&gt;特别提醒：黑客、广告、弹窗、网赚等都是靠这些赚钱。往往是留一点点代码放在程序里面作为漏洞，有的知识一个大小写字母的差异，有的以图片格式植入木马。受到攻击无法检查，被人挂黑链，往往就是这些。别不要相信，这就是真正的现实，这就是为什么说“免费的东西是最贵的”的道理所在！&lt;/p&gt;

&lt;p&gt;2、网站后台程序：最好使用WordPress、DEDE、DZ等。现在重点推荐WordPress或DZ，DZ在国内的架构优化做的最好，充分考虑了SEO的各种需求，而且在简单易用的用户体验方面做了很好的设计。而WordPress因为简单易用的插件式使用方法，也受到国内SEOer的热捧，而其实WordPress早在国外闻名世界！&lt;/p&gt;

&lt;p&gt;3、网站模板：最好自己开发或自己到官方的网站进行购买。官方网站模板一般都比较便宜，几十块到几百块不等。购买之后的网站模板，还必须要修改下，调整为适合自己的，以避免跟别人的网站代码结构“雷同”问题。&lt;/p&gt;

&lt;p&gt;4、网站后台和模板程序必须精简修改。按照SEO的最简单原则，大大幅度的精简网站，把不要的广告链接、文字、不合理的代码方式、代码结构、图片等全部杀毒检查，全部修改或删除。&lt;/p&gt;

&lt;p&gt;案例分析：网站刚开始有排名，但过了一段时间，排名却掉下去了，快照倒退，或者被K了。文章原创、外链原创、友链正常…一切符合SEO白帽要求，但结果却是先有排名，后慢慢的掉下去排名。百度在深入爬取之后，会发现很多累赘的程序，发现很多没用的代码，就会被百度识别。当然，百度识别之后，还会给你20天时间进行更改。但这个过程，往往是很多SEOer不知道的，等到排名下降，或被K，已经晚了，要重新来过，要一个月，甚至更久！这个时间差，就是为什么新站现有排名后排名下降的常规问题，请大家好好参悟！千万别学“王林气功”，SEO像王林气功的那样“洒杂”式浑水摸鱼，SEO无能的水平，终究会败露的！&lt;/p&gt;

&lt;p&gt;#四、文章必须原创和数量充足。&lt;/p&gt;

&lt;p&gt;原创文章是老掉牙的问题了。新站开站的文章必须准备好几篇的，也要符合如下要求：&lt;/p&gt;

&lt;p&gt;1、一般的小网站，企业站之类的，原创创文章5-10篇，600-800字，最好1000字以上。文章必须写的比较好，不要拖泥带水，写出真感觉，真感情！简单的说，就是对用户有用的文章，用户舍得花时间看的文章，对用户感情有触动的文章！&lt;/p&gt;

&lt;p&gt;2、如果你是大网站，你必须准备10-20篇文章。其中3篇5000字以上文章，1篇1万字以上的文章，尤其是后15天的新站优化，必须使用到两三篇1万字以上的原创文章！&lt;/p&gt;

&lt;p&gt;3、文章标题和内容必须覆盖一定的长尾词，而且每篇文章的长尾词不同。这个是专门为新站获得排名而准备的。&lt;/p&gt;

&lt;p&gt;特别说明：当新站开了之后，发现有了排名之后，30分钟之内，蜘蛛还会再爬一次网站的。这个时候，必须在蜘蛛再来爬的前10分钟内，再发一篇新文章。这样会直接带来新文章的收录，新文章很容易获得排名。这个规律，一般SEO新手都不知道的！&lt;/p&gt;

&lt;p&gt;文章秒收的必要条件：三张以上的图片，三段以上的文字。&lt;/p&gt;

&lt;p&gt;4、在上述步骤之后，立即去爱站检查排名，那个文章有排名，就把其相关的所有的文章发布完。这个剩余的刚发布的文章不用发外链哦，不要贪快，这个过程叫作弊，懂了吧！&lt;/p&gt;

&lt;p&gt;#五、外链要原创要在高权重网站发布。&lt;/p&gt;

&lt;p&gt;1、 网站上传之后，去高权重网站发表原创外链！&lt;/p&gt;

&lt;p&gt;特别注意：必须是高权重的，能带网址的网站，最好是论坛类的，例如360论坛等。要事先准备好账号，不要临时才注册新账号，那要搞半天的。其实，外链资源的积累，也是新站能否做到秒收的一个重要基础！&lt;/p&gt;

&lt;p&gt;关键之处：就是网站上传完到网站空间，数据库、基本结构等搭建好之后。第一篇文章一发完，立即去高权重网发外链，或者去爱站查网站（也是高权重外链）。这个步骤很重要，非常关键。千万不要搞错！&lt;/p&gt;

&lt;p&gt;2、外链千万不要停贪多，当天只发一条，就够了。外链要广，不在于多。这个问题，不再多说。&lt;/p&gt;

&lt;p&gt;3、外链内容，必须要原创，即使是那么200文字。这个必须要事先准备好的。&lt;/p&gt;

&lt;p&gt;4、后续第二天起的优化一旦有文章发布，也是每篇文章发1条外链。这个外链，必须配合网站已经有排名的关键词/长尾关键词。这样才可以保证继续快速提升网站排名。这一点也是非常重要的。&lt;/p&gt;

&lt;p&gt;5、另外每天还要发一条外链，就是指向网站首页的网址，千万不能多！能锚文本，指向已经有排名的关键词/长尾关键词；没有锚文本，就用赤裸裸的文本加网址的方式！&lt;/p&gt;

&lt;p&gt;#六、时间把握必须准确。&lt;/p&gt;

&lt;p&gt;最佳开站时间如下：&lt;/p&gt;

&lt;p&gt;早上：10:00——11：00。&lt;/p&gt;

&lt;p&gt;晚上：下午15:00——20:00。&lt;/p&gt;

&lt;p&gt;为什么要这样选择新网站开站的时间段呢？因为蜘蛛最频繁的时间段，也是有经验的站长、有道行的SEO才知道的规律。现在公布出来，你有福了！也不用再乱折腾，像买福利彩票那样坐等上帝恋上你！&lt;/p&gt;

&lt;p&gt;特别时刻：在利用空间商提供的超长二级域名网址给空间上传完程序并部署好数据库和后台信息之后，再去购买域名来解析空间IP。千万不要提前购买域名，因为你购买了，蜘蛛很快就来爬这个域名了，如果蜘蛛来了发现网站是空的，那你惨了，被蜘蛛定了不被信任的否定信用，那么开新站就很有难度了。为什么有些网站死活不收录，也会是这个原因啊。这个步骤也是很重要的。&lt;/p&gt;

&lt;p&gt;#15天之后的后续优化策略：&lt;/p&gt;

&lt;p&gt;1、一般网站：文章增加1，对应文章网址的外链增加1。每个网站最多发2条外链，不要在同一个网站发过多的外链！那也是作弊。&lt;/p&gt;

&lt;p&gt;2、大型网站：文章加2，外链加2.。当然，文章和外链数量也可以递增，但要考虑后续的人力物力。例如我们说说SEO论坛，就是典型的15人同时开展的大型网站了，每天15篇文章到每天30篇文章，你也可以研究下。&lt;/p&gt;

&lt;p&gt;3、继续集中做已经有排名的关键词/长尾关键词的外链。如果关键词已经到了首页第一名，那就要改做其他没有达到第一名的关键词或者长尾关键词。&lt;/p&gt;

&lt;p&gt;4、文章的编写要特别注意，不要再是直接在标题中包括已经有排名的关键词，而是在文章中包括10-15个这样的关键词即可。否则，又是作弊了！再次强调，15天后SEO优化，标题中不要出现已经有排名的关键词，只要在文章中和外链中体现即可！&lt;/p&gt;

&lt;p&gt;我在SEO百科前面的《5.3、关键词竞争度分析标准》一文中谈到了200一下的小指数，最快七天可以到首页。有人相信，也有人怀疑，也有人求所有的流程技巧。其实，我告诉你，为了保留意见，我肯定是放大了结果的，2000多指数到首页，2小时到首页的，4天到权4的，大有案例！这些案例，不但是在本篇文章的重要基础之上去做的，更加重要的是，她是白帽SEO，不是什么所谓的灰帽，更加不是黑帽！更为令你惊奇的是，在说说SEO论坛的所有版主中，在所有天荒老师的徒弟中，实现了超多的这样新站快速排名上首页的SEO优化案例！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hadoop1.2.1系统分布式配置</title>
      <link>http://lilifeng.net/blogs/2015/01/20/Hadoop-Setup/</link>
      <pubDate>Tue, 20 Jan 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>原生</category>
      
      <category>Web</category>
      
      <category>Hadoop</category>
      
      
      <category>Internet</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/01/20/Hadoop-Setup/</guid>
      <description>&lt;p&gt;环境：CentOS6.5、hadoop1.2.1、jdk1.8.0&lt;/p&gt;

&lt;p&gt;namenode:centos1(ip:172.16.26.129)&lt;/p&gt;

&lt;p&gt;datanode:centos2(ip:172.16.26.130)、centos3(ip:172.16.26.131)&lt;/p&gt;

&lt;p&gt;配置步骤：&lt;/p&gt;

&lt;p&gt;（1）在所有机器上安装所需软件&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;root@centos1 ~] &lt;span class=&quot;c&quot;&gt;# yum -y install wget, java-1.8.0-openjdk-devel, ssh&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;（2）在所有机器上配置NameNode和DataNode&lt;/p&gt;

&lt;p&gt;在所有机器上修改/etc/hosts&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;root@centos1 ~] &lt;span class=&quot;c&quot;&gt;# vi /etc/hosts&lt;/span&gt;

127.0.0.1               localhost.localdomain localhost centos1
172.16.26.129             centos1
172.16.26.130             centos2
172.16.26.131             centos3
::1             localhost6.localdomain6 localhost6 centos1&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;在所有机器上修改hostname&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;root@centos1 ~] &lt;span class=&quot;c&quot;&gt;# hostname centos1&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;root@centos1 ~] &lt;span class=&quot;c&quot;&gt;# hostname&lt;/span&gt;
centos1&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;在所有机器上修改network配置&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;root@centos1 ~] &lt;span class=&quot;c&quot;&gt;# vi /etc/sysconfig/network			//修改HOSTNAME＝XXX&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;在所有机器上关闭防火墙&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;root@centos1 ~] &lt;span class=&quot;c&quot;&gt;# service iptables stop&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;root@centos1 ~] &lt;span class=&quot;c&quot;&gt;# service iptables status&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;(3)在所有机器上建立相同的用户&lt;/p&gt;

&lt;p&gt;在所有机器上成功建立grid用户后，设置用户密码&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;root@centos1 ~] &lt;span class=&quot;c&quot;&gt;# useradd grid&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;root@centos1 ~] &lt;span class=&quot;c&quot;&gt;# passwd grid&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;（4）在namenode上设置SSH无密码访问&lt;/p&gt;

&lt;p&gt;在所有机器上使用grid用户登录&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;root@centos1 ~] &lt;span class=&quot;c&quot;&gt;# su grid&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;在所有机器上/home/grid下创建ssh文件夹&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;grid@centos2 ~] &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mkdir .ssh&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;在namenode上生成密钥对&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;grid@centos1 ~] &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ssh-keygen -t dsa -P &lt;span class=&quot;s1&quot;&gt;&#39;&#39;&lt;/span&gt; -f ~/.ssh/id_dsa
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;grid@centos1 ~] &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;cat ~/.ssh/id_dsa.pub &amp;gt;&amp;gt; ~/.ssh/authorized_keys&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;blockquote&gt;
  &lt;p&gt;注意点：&lt;/p&gt;

  &lt;p&gt;不进行以下步骤SSH免密码登录设置会不成功&lt;/p&gt;

  &lt;p&gt;.ssh目录要设成700 有执行权限
authorized_keys要设成600 否则会出错
还有ssh 登陆要加入用户名的 比如
ssh root@localhost&lt;/p&gt;

  &lt;p&gt;这时从centos1向其他机器发起SSH连接，只有第一次登录时需要输入密码，以后则不需要&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;(5)在所有机器上安装配置hadoop1.2.1&lt;/p&gt;

&lt;p&gt;首先在namenode上配置，配置后在分发到datanode上&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;grid@centos1 ~] &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;wget http://mirror.bit.edu.cn/apache/hadoop/common/hadoop-1.2.1/hadoop-1.2.1.tar.gz
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;grid@centos1 ~] &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;tar -xf hadoop-1.2.1.tar.gz 
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;grid@centos1 ~] &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;hadoop-1.2.1&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;接下来需要修改hadoop的conf文件夹下的配置信息：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;grid@centos1 hadoop-1.2.1] &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;vi conf/hadoop-env.sh
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;JAVA_HOME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/java/jvm/java&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;修改core-site.xml，如下：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;grid@centos1 hadoop-1.2.1] &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;vi conf/core-site.xml
&amp;lt;configuration&amp;gt;
&amp;lt;property&amp;gt;
&amp;lt;name&amp;gt;fs.default.name&amp;lt;/name&amp;gt;
&amp;lt;value&amp;gt;hdfs://centos1:9000&amp;lt;/value&amp;gt;
&amp;lt;/property&amp;gt;
&amp;lt;property&amp;gt;
&amp;lt;name&amp;gt;hadoop.tmp.dir&amp;lt;/name&amp;gt;
&amp;lt;value&amp;gt;/home/grid/tmp&amp;lt;/value&amp;gt;
&amp;lt;/property&amp;gt;
&amp;lt;/configuration&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;blockquote&gt;
  &lt;p&gt;注意：hadoop.tmp.dir是hadoop文件系统依赖的基础配置，很多路径都依赖它。它默认的位置是在/tmp/{$user}下面，在local和hdfs都会建有相同的目录，但是在/tmp路径下的存储是不安全的，因为linux一次重启，文件就可能被删除。导致namenode启动不起来。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;修改hdfs-site.xml，如下&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;grid@centos1 hadoop-1.2.1] &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;vi conf/hdfs-site.xml
&amp;lt;configuration&amp;gt;
&amp;lt;property&amp;gt;
&amp;lt;name&amp;gt;dfs.replication&amp;lt;/name&amp;gt;
&amp;lt;value&amp;gt;1&amp;lt;/value&amp;gt;
&amp;lt;/property&amp;gt;
&amp;lt;/configuration&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;修改mapred-site.xml，如下（保险起见这里写centos1对应的IP地址）：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;grid@centos1 hadoop-1.2.1] &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;vi conf/mapred-site.xml
&amp;lt;configuration&amp;gt;
&amp;lt;property&amp;gt;
&amp;lt;name&amp;gt;mapred.job.tracker&amp;lt;/name&amp;gt;
&amp;lt;value&amp;gt;172.16.26.129:9001&amp;lt;/value&amp;gt;
&amp;lt;/property&amp;gt;
&amp;lt;/configuration&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;masters里写入作为namenode节点机器的IP&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;grid@centos1 hadoop-1.2.1] &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;vi conf/masters
172.16.26.129&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;slaves里写入作为datanode节点的机器的IP&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;grid@centos1 hadoop-1.2.1] &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;vi conf/slaves
172.16.26.130
172.16.26.131&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;修改bin下的hadoop中Jvm的调用方式&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;grid@centos1 hadoop-1.2.1] &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;vi bin/hadoop&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;查找 –jvm . vi 下的命令模式： :/-jvm，将-jvm server改成 –server .&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;因为JDK1.6已经废除了一个参数-jvm,如果不修改的话，无法启动数据节点。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;到此，hadoop的有关配置已经完成，namenode端通过如下命令把配置好的hadoop发送到各个datanode处：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;grid@centos1 hadoop-1.2.1] &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;scp -r ~/hadoop-1.2.1 centos2:/home/grid
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;grid@centos1 hadoop-1.2.1] &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;scp -r ~/hadoop-1.2.1 centos3:/home/grid&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;（6）启动服务&lt;/p&gt;

&lt;p&gt;在namenode端格式化分布式文件系统：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;grid@centos1 hadoop-1.2.1] &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;bin/hadoop namenode -format&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;如果没有任何error字样的信息，下面接着在namenode端启动hadoop进程：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;grid@centos1 hadoop-1.2.1] &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;bin/start-all.sh&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;如果没有其它差错的话，hadoop可以正常启动，并能够在各个机器上得到验证：&lt;/p&gt;

&lt;p&gt;在namenode端用jps命令查看启动情况，如下：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;grid@centos1 ~] &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;jps
xxxx Jps
xxxx Namenode
xxxx Secondarynamenode
xxxx JobTracker&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;在datanode端用jps查看启动情况，如下：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;grid@centos2 ~] &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;jps
xxxx Jps
xxxx DataNode
xxxx TaskTracker&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;然后可以通过如下地址来查看集群运行状况：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;    http://172.16.26.129:50030
    http://172.16.26.129:50070
    http://172.16.26.130:50060
    http://172.16.26.131:50060&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;————————————-我是分割线——————————-&lt;/p&gt;

&lt;p&gt;跑hadoop自带的wordcount程序&lt;/p&gt;

&lt;p&gt;1、通过hadoop的命令在HDFS上创建/tmp/workcount目录，命令如下：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;grid@centos1 hadoop-1.2.1] &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;bin/hadoop fs -mkdir /tmp/wordcount&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;2、通过copyFromLocal命令把本地的word.txt复制到HDFS上，命令如下：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;grid@centos1 hadoop-1.2.1] &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;bin/hadoop fs -copyFromLocal /home/grid/word.txt  /tmp/wordcount/word.txt&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;3、通过命令运行例子，使用命令如下：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;grid@centos1 hadoop-1.2.1] &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;bin/hadoop jar hadoop-examples-1.2.1.jar wordcount /tmp/wordcount/word.txt  /tmp/wordcount/out&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;4、查看运行结果，查看例子的输出结果使用命令：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;grid@centos1 hadoop-1.2.1] &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;bin/hadoop fs -ls /tmp/wordcount/out&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;发现有两个文件夹和一个文件，使用命令查看part-r-00000文件：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;grid@centos1 hadoop-1.2.1] &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;bin/hadoop fs -cat /tmp/wordcount/out/part-r-00000&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;————————————-我是分割线——————————-&lt;/p&gt;

&lt;p&gt;问题1：&lt;/p&gt;

&lt;p&gt;namenode无法启动，启动显示host = java.net.UnknownHostException&lt;/p&gt;

&lt;p&gt;应对：&lt;/p&gt;

&lt;p&gt;针对每台机器需要设置正确的hostname，方法如下：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;grid@centos1 hadoop-1.2.1] &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;su
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;root@centos1 hadoop-1.2.1] &lt;span class=&quot;c&quot;&gt;# vi /etc/sysconfig/network			//修改HOSTNAME＝XXX&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;root@centos1 hadoop-1.2.1] &lt;span class=&quot;c&quot;&gt;# vi /etc/hosts						//修改映射关系从跟本机有关的IP映射到XXX&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;root@centos1 hadoop-1.2.1] &lt;span class=&quot;c&quot;&gt;# hostname XXX&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;root@centos1 hadoop-1.2.1] &lt;span class=&quot;c&quot;&gt;# service network restart&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;root@centos1 hadoop-1.2.1] &lt;span class=&quot;c&quot;&gt;# su grid&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;grid@centos1 hadoop-1.2.1] &lt;span class=&quot;c&quot;&gt;# bin/start-all.sh&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;问题2：&lt;/p&gt;

&lt;p&gt;datanode无法启动，报错NoRouteToHostException: No route to host&lt;/p&gt;

&lt;p&gt;应对：&lt;/p&gt;

&lt;p&gt;关闭master的防火墙。&lt;/p&gt;

&lt;p&gt;问题3：&lt;/p&gt;

&lt;p&gt;ssh无法无密码访问，每次都需要输入密码&lt;/p&gt;

&lt;p&gt;应对：&lt;/p&gt;

&lt;p&gt;重启机器；设置权限为600；
暂时还没有更好的解决方法！&lt;/p&gt;

&lt;p&gt;问题4：&lt;/p&gt;

&lt;p&gt;查看log发现错误：Incompatible namespaceIDs&lt;/p&gt;

&lt;p&gt;应对：&lt;/p&gt;

&lt;p&gt;(1)停掉集群服务&lt;/p&gt;

&lt;p&gt;(2)在出问题的datanode节点上删除data目录，data目录即是在hdfs-site.xml文件中配置的dfs.data.dir目录，本机器上那个是/var/lib/hadoop-0.20/cache/hdfs/dfs/data/ (注：我们当时在所有的datanode和namenode节点上均执行了该步骤。以防删掉后不成功，可以先把data目录保存一个副本).&lt;/p&gt;

&lt;p&gt;(3)格式化namenode.&lt;/p&gt;

&lt;p&gt;(4)重新启动集群。&lt;/p&gt;

&lt;p&gt;问题5：&lt;/p&gt;

&lt;p&gt;Cannot lock storage /tmp/hadoop-root/dfs/name. The directory is already locked.&lt;/p&gt;

&lt;p&gt;应对：&lt;/p&gt;

&lt;p&gt;./hadoop namenode -format 命令是格式化命名空间，一定是在未启动  hadoop 服务的时候才能执行。出现这个错误提示是因为 hadoop 的服务是子运行状态。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2015年移动广告投放攻略 解析广告主亲睐的广告投放形式</title>
      <link>http://lilifeng.net/blogs/2015/01/16/mobile-ad-delivery-approach/</link>
      <pubDate>Fri, 16 Jan 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>市场</category>
      
      
      <category>广告平台</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/01/16/mobile-ad-delivery-approach/</guid>
      <description>&lt;p&gt;##移动广告已然成营销利器&lt;/p&gt;

&lt;p&gt;2014年，在大环境的持续发酵下，移动互联网广告市场规模井喷式增长，市场规模飙升至125亿元，相较2013年的102亿增长23%，2015年预计可达175亿元。在125亿的市场中，有50亿的市场规模来自于移动广告平台，营收占据半壁江山；除此之外，精准营销为导向，技术优势明显、精细化运营专业、广告形式多样、系统平台稳定、汇聚大量优质媒介等多方优势，促使移动广告平台成为广告主移动营销的最佳利器。&lt;/p&gt;

&lt;p&gt;##为广告主支招，无底线&lt;/p&gt;

&lt;p&gt;移动互联网广告市场中，对于实力雄厚的大品牌广告主来说，BAT网络联盟、以点入广告为代表的专业移动广告平台、以及流量大佬是其投放移动广告的最佳渠道；效果型、专业型广告主例如手游、移动新媒体更喜欢应用市场以及专业的移动广告平台，投放比例约为4：3；传统互联网客户青睐移动广告平台、BAT网络联盟、应用市场以及特定的单一优质渠道；而对于二三四线城市的广告主来说，细分明显的本地移动广告代理资源、本地移动广告业务供应商和特定的1手资源是其首选；大多数中小广告主主要以尝试性的投放为主，市场价值有待持续开发。&lt;/p&gt;

&lt;p&gt;##说到底，做移动营销，就该利用专业的平台做专业的事。&lt;/p&gt;

&lt;p&gt;从市场份额来看，40%的移动互联网广告投放来自于移动广告平台，对于广告主而言，选择移动广告平台就是选择了兼具超强资源整合能力和精准营销效果的“干爹”。在国内，专业的移动广告平台以腾讯广点通、百度无线联盟领军，瓜分1/3的市场份额。&lt;/p&gt;

&lt;p&gt;##品牌广告主的移动元年来到&lt;/p&gt;

&lt;p&gt;早期，移动广告主以效果类客户为主，投放占比80%以上；2012-2014年，智能机的快速普及，品牌广告主加速布局移动营销，在所有广告主中占比25%。移动广告平台品牌广告主投放数量增速15%-20%，点入广告平台的增速达到了30%。以点入为例，科勒卫浴、东风悦达起亚等品牌客户自2011年既已入驻。2014年，移动广告平台的客户类型已经超过15类，既有游戏、互联网类的专业客户，也有影视娱乐、生活健康、电商金融、汽车、日化、快消类的传统广告主。通过国内移动广告平台的数据以及第三方咨询机构公开的数据显示，2013年，移动营销的广告主约有3.6万家，2014年已达5万家，增长39%，预计2015年增幅可达42%。2014年品牌广告主投放预算占比移动广告平台全部营收的30%；2015年，品牌类广告主数量将持续增长，预计占比全部移动广告主数量的40%，投放预算占比全部营收的50%左右。多位业内人士预测，2015年，将是品牌广告主的爆发元年。&lt;/p&gt;

&lt;p&gt;有业内资深人士曾表示，自2014年开始，传统互联网的广告主已经开始对预算进行了重新分配，将原本投向PC端的预算转投到移动端，而且品牌广告主对移动端的投入以及重视程度都在逐渐加大。有调研公司的调研报告曾显示，73%的广告主愿意在未来两年内增加对移动广告的投放。&lt;/p&gt;

&lt;p&gt;##广告主青睐的移动广告形式&lt;/p&gt;

&lt;p&gt;2014年，BAT巨头的强势加入给整个移动互联网广告带来新的竞争气象，广告平台遂将深耕细作作为应对策略。除了Banner、插屏、积分墙等广告形式外，更加多样化的广告形式陆续面世，包括开屏、移动视频以及原生广告等。目前，市场仍以效果取胜的积分墙广告、插屏和Banner广告为主，整体占比达到85%，视频富媒体类快速上涨。此外，现有技术被广泛应用到移动应用广告上，包括LBS定位、二维码、图像识别等，使得移动端的互动广告形式提速迅猛，未来互动及原生类广告会逐渐增多，更多适合移动端的独特广告模式将陆续出现。&lt;/p&gt;

&lt;p&gt;##广告主青睐的投放时间和地域&lt;/p&gt;

&lt;p&gt;广告主的投放时间一定是根据受众的使用习惯进行专业时间设定，借助点入广告DSP技术平台深度挖掘用户数据信息，汇总整理后我们发现，用户在上下班途中、午间休息以及睡前是智能终端设备的使用高峰期。截止2014年，大部分移动广告平台的业务区域主要集中在一二线城市。根据智能终端设备的保有量以及地域受众的使用习惯，广告投放主要集中在6大经济区，包含以北京、天津为首的华北，以上海、杭州、南京为首的华东，以沈阳、长春、哈尔滨为首的东北，以武汉、长沙为首的华中，以广州、深圳、福州、厦门、三亚为首的华南以及以成都、重庆、西安为首的西南。但对于腾讯广点通、点入广告这样的专业移动广告平台，既可以定向投放时间和地域，也可以做到“全面撒网、择优录取”，受众互动数据量级早已达到惊人的数字。&lt;/p&gt;

&lt;p&gt;##广告主青睐的操作系统和终端类型&lt;/p&gt;

&lt;p&gt;目前，IOS和Android操作系统独揽大局，共占全额的95%以上。iOS的CTR和eCPM均领先于Android，IOS操作系统应用内广告CTR比Android高21%，iOS的eCPM比Android高出50%；在流量方面，Android领先于iOS，Android占57.6%，iOS则占30.2%。虽然Android位居流量大佬，但IOS系统的广告更被广告主所青睐。&lt;/p&gt;

&lt;p&gt;从产品关注度来看，苹果iPhone5S是2014年度最受关注的机型，且遥遥领先于其他上榜机型。三星GALAXYNote3、华为排在紧随其后。前十位受关注榜单中苹果共有六款产品入围，优势显著。客观来看，苹果机型目前还是广告主首选的投放终端类型。另外，平板机型的市场价值有待深挖。&lt;/p&gt;

&lt;p&gt;##推荐广告主使用的媒介类型和计费方式&lt;/p&gt;

&lt;p&gt;2014年，社交类APP以21.8%的展现量继续引领移动展现量市场份额。游戏、音乐、视频类APP同样保持他们的收入高潮，占移动收入的23.1%。拥有强大的展现量就是抢占广告流量的尖端利器，目前，游戏、社交、音乐、视频、工具及阅读类APP是广告主首选的投放媒体类型。&lt;/p&gt;

&lt;p&gt;广告主投放需求不同，采用的广告形式不同，计费的方式也就各不相同，如按照千次展示付费的CPM，轮播广告经常使用；按照点击次数付费的CPC，插屏及全屏广告经常使用；按行为计价的CPA，积分墙广告常用，类似的计费方式还有CPE（即按互动计价）、CPS（按销售量计费），按观看计费的CPV方式。&lt;/p&gt;

&lt;p&gt;目前，据多家业内移动广告平台的统计数据显示，广告主青睐的计费方式仍以CPC、CPA为主，CPC、CPA比例为3:7。行业内CPC的投放平均转化率大体为1%-3%，CPA的投放平均转化率为40%-50%。&lt;/p&gt;

&lt;p&gt;结语：2015，中国移动互联网广告的爆发之年。移动广告服务商、提供商之间的竞争将进入白热化阶段，行业洗牌将加剧。归根结底，技术导向型的营销模式建设迫在眉睫，以及如何汇聚更多优质的媒介资源并争取更多的广告主尤其是品牌广告主的预算成为非常硬性的KPI。与此同时，2015，也将是品牌广告主移动投放的元年。如何制定营销策略、如何增加ROI？其实，选择以技术驱动营销为核心的移动广告平台是最现实的选择。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>iOS研发工程师面试题及答案</title>
      <link>http://lilifeng.net/blogs/2015/01/15/iOS-Test/</link>
      <pubDate>Thu, 15 Jan 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>原生</category>
      
      <category>iOS</category>
      
      <category>Objective-C</category>
      
      <category>XCode</category>
      
      <category>试题</category>
      
      
      <category>Mobile</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/01/15/iOS-Test/</guid>
      <description>&lt;p&gt;1.Difference between shallow copy and deep copy?
浅复制和深复制的区别？&lt;/p&gt;

&lt;p&gt;答案：浅层复制：只复制指向对象的指针，而不复制引用对象本身。
深层复制：复制引用对象本身。
意思就是说我有个A对象，复制一份后得到A_copy对象后，对于浅复制来说，A和A_copy指向的是同一个内存资源，复制的只不过是是一个指针，对象本身资源
还是只有一份，那如果我们对A_copy执行了修改操作,那么发现A引用的对象同样被修改，这其实违背了我们复制拷贝的一个思想。深复制就好理解了,内存中存在了
两份独立对象本身。
用网上一哥们通俗的话将就是：
浅复制好比你和你的影子，你完蛋，你的影子也完蛋
深复制好比你和你的克隆人，你完蛋，你的克隆人还活着。&lt;/p&gt;

&lt;p&gt;2.What is advantage of categories? What is difference between implementing a category and inheritance?
类别的作用？继承和类别在实现中有何区别？
答案：category 可以在不获悉，不改变原来代码的情况下往里面添加新的方法，只能添加，不能删除修改。
并且如果类别和原来类中的方法产生名称冲突，则类别将覆盖原来的方法，因为类别具有更高的优先级。
类别主要有3个作用：
(1)将类的实现分散到多个不同文件或多个不同框架中。
(2)创建对私有方法的前向引用。 
(3)向对象添加非正式协议。
 继承可以增加，修改或者删除方法，并且可以增加属性。&lt;/p&gt;

&lt;p&gt;3.Difference between categories and extensions?
类别和类扩展的区别。
答案：category和extensions的不同在于 后者可以添加属性。另外后者添加的方法是必须要实现的。
extensions可以认为是一个私有的Category。&lt;/p&gt;

&lt;p&gt;4.Difference between protocol in objective c and interfaces in java?
obc中的协议和java中的接口概念有何不同？&lt;/p&gt;

&lt;p&gt;答案：OBC中的代理有2层含义，官方定义为 formal和informal protocol。前者和Java接口一样。
informal protocol中的方法属于设计模式考虑范畴，不是必须实现的，但是如果有实现，就会改变类的属性。
其实关于正式协议，类别和非正式协议我很早前学习的时候大致看过，也写在了学习教程里
“非正式协议概念其实就是类别的另一种表达方式“这里有一些你可能希望实现的方法，你可以使用他们更好的完成工作”。
这个意思是，这些是可选的。比如我门要一个更好的方法，我们就会申明一个这样的类别去实现。然后你在后期可以直接使用这些更好的方法。
这么看，总觉得类别这玩意儿有点像协议的可选协议。”
现在来看，其实protocal已经开始对两者都统一和规范起来操作，因为资料中说“非正式协议使用 interface修饰“，
现在我们看到协议中两个修饰词：“必须实现(@requied)”和“可选实现(@optional)”。&lt;/p&gt;

&lt;p&gt;5.What are KVO and KVC?&lt;/p&gt;

&lt;p&gt;答案：kvc:键 - 值编码是一种间接访问对象的属性使用字符串来标识属性，而不是通过调用存取方法，直接或通过实例变量访问的机制。
很多情况下可以简化程序代码。 apple文档其实给了一个很好的例子。
kvo:键值观察机制，他提供了观察某一属性变化的方法，极大的简化了代码。
具体用看到嗯哼用到过的一个地方是对于按钮点击变化状态的的监控。
比如我自定义的一个button
[cpp] 
[self addObserver:self forKeyPath:@”highlighted” options:0 context:nil];&lt;/p&gt;

&lt;p&gt;#pragma mark KVO&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;(void)observeValueForKeyPath:(NSString *)keyPath ofObject:(id)object change:(NSDictionary *)change context:(void *)context 
{ 
 if ([keyPath isEqualToString:@”highlighted”] ) { 
 [self setNeedsDisplay]; 
 } 
}
对于系统是根据keypath去取的到相应的值发生改变，理论上来说是和kvc机制的道理是一样的。
对于kvc机制如何通过key寻找到value：
 “当通过KVC调用对象时，比如：[self valueForKey:@”someKey”]时，程序会自动试图通过几种不同的方式解析这个调用。首先查找对象是否带有 someKey 这个方法，如果没找到，会继续查找对象是否带有someKey这个实例变量（iVar），如果还没有找到，程序会继续试图调用 -(id) valueForUndefinedKey:这个方法。如果这个方法还是没有被实现的话，程序会抛出一个NSUndefinedKeyException 异常错误。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;(cocoachina.com注：Key-Value Coding查找方法的时候，不仅仅会查找someKey这个方法，还会查找getsomeKey这个方法，前面加一个get，或者_someKey以及 _getsomeKey这几种形式。同时，查找实例变量的时候也会不仅仅查找someKey这个变量，也会查找_someKey这个变量是否存在。）&lt;/p&gt;

&lt;p&gt;设计valueForUndefinedKey:方法的主要目的是当你使用-(id)valueForKey方法从对象中请求值时，对象能够在错误发生前，有最后的机会响应这个请求。这样做有很多好处，下面的两个例子说明了这样做的好处。“
来至cocoa，这个说法应该挺有道理。
因为我们知道 button却是存在一个highlighted实例变量.因此为何上面我们只是add一个相关的keypath就行了，
可以按照kvc查找的逻辑理解，就说的过去了。&lt;/p&gt;

&lt;p&gt;6.What is purpose of delegates?
代理的作用？
答案：代理的目的是改变或传递控制链。允许一个类在某些特定时刻通知到其他类，而不需要获取到那些类的指针。可以减少框架复杂度。
另外一点，代理可以理解为java中的回调监听机制的一种类似。&lt;/p&gt;

&lt;p&gt;7.What are mutable and immutable types in Objective C?
obc中可修改和不可以修改类型。&lt;/p&gt;

&lt;p&gt;答案：可修改不可修改的集合类。这个我个人简单理解就是可动态添加修改和不可动态添加修改一样。
比如NSArray和NSMutableArray。前者在初始化后的内存控件就是固定不可变的，后者可以添加等，可以动态申请新的内存空间。&lt;/p&gt;

&lt;p&gt;8.When we call objective c is runtime language what does it mean?
我们说的obc是动态运行时语言是什么意思？&lt;/p&gt;

&lt;p&gt;答案：多态。 主要是将数据类型的确定由编译时，推迟到了运行时。
这个问题其实浅涉及到两个概念，运行时和多态。
简单来说，运行时机制使我们直到运行时才去决定一个对象的类别，以及调用该类别对象指定方法。
多态：不同对象以自己的方式响应相同的消息的能力叫做多态。意思就是假设生物类（life）都用有一个相同的方法-eat;
那人类属于生物，猪也属于生物，都继承了life后，实现各自的eat，但是调用是我们只需调用各自的eat方法。
也就是不同的对象以自己的方式响应了相同的消息（响应了eat这个选择器）。
因此也可以说，运行时机制是多态的基础？~~~&lt;/p&gt;

&lt;p&gt;9.what is difference between NSNotification and protocol?
通知和协议的不同之处？&lt;/p&gt;

&lt;p&gt;答案：协议有控制链(has-a)的关系，通知没有。
首先我一开始也不太明白，什么叫控制链（专业术语了~）。但是简单分析下通知和代理的行为模式，我们大致可以有自己的理解
简单来说，通知的话，它可以一对多，一条消息可以发送给多个消息接受者。
代理按我们的理解，到不是直接说不能一对多，比如我们知道的明星经济代理人，很多时候一个经济人负责好几个明星的事务。
只是对于不同明星间，代理的事物对象都是不一样的，一一对应，不可能说明天要处理A明星要一个发布会，代理人发出处理发布会的消息后，别称B的
发布会了。但是通知就不一样，他只关心发出通知，而不关心多少接收到感兴趣要处理。
因此控制链（has-a从英语单词大致可以看出，单一拥有和可控制的对应关系。&lt;/p&gt;

&lt;p&gt;10.What is push notification?
什么是推送消息？&lt;/p&gt;

&lt;p&gt;11.Polymorphism？
关于多态性&lt;/p&gt;

&lt;p&gt;答案：多态，子类指针可以赋值给父类。
这个题目其实可以出到一切面向对象语言中，
因此关于多态，继承和封装基本最好都有个自我意识的理解，也并非一定要把书上资料上写的能背出来。
最重要的是转化成自我理解。&lt;/p&gt;

&lt;p&gt;12.Singleton?
对于单例的理解&lt;/p&gt;

&lt;p&gt;答案：11，12题目其实出的有点泛泛的感觉了，可能说是编程语言需要或是必备的基础。
基本能用熟悉的语言写出一个单例，以及可以运用到的场景或是你编程中碰到过运用的此种模式的框架类等。
进一步点，考虑下如何在多线程访问单例时的安全性。&lt;/p&gt;

&lt;p&gt;13.What is responder chain?
说说响应链&lt;/p&gt;

&lt;p&gt;答案： 事件响应链。包括点击事件，画面刷新事件等。在视图栈内从上至下，或者从下之上传播。
可以说点事件的分发，传递以及处理。具体可以去看下touch事件这块。因为问的太抽象化了
严重怀疑题目出到越后面就越笼统。&lt;/p&gt;

&lt;p&gt;14.Difference between frame and bounds?
frame和bounds有什么不同？&lt;/p&gt;

&lt;p&gt;答案:frame指的是：该view在父view坐标系统中的位置和大小。（参照点是父亲的坐标系统）
bounds指的是：该view在本身坐标系统中 的位置和大小。（参照点是本身坐标系统）&lt;/p&gt;

&lt;p&gt;15.Difference between method and selector?
方法和选择器有何不同？&lt;/p&gt;

&lt;p&gt;答案：selector是一个方法的名字，method是一个组合体，包含了名字和实现.
详情可以看apple文档。&lt;/p&gt;

&lt;p&gt;16.Is there any garbage collection mechanism in Objective C.?
OBC的垃圾回收机制？&lt;/p&gt;

&lt;p&gt;答案： OBC2.0有Garbage collection，但是iOS平台不提供。
一般我们了解的objective-c对于内存管理都是手动操作的，但是也有自动释放池。
但是差了大部分资料，貌似不要和arc机制搞混就好了。
求更多~~&lt;/p&gt;

&lt;p&gt;17.NSOperation queue?&lt;/p&gt;

&lt;p&gt;答案：存放NSOperation的集合类。
操作和操作队列，基本可以看成java中的线程和线程池的概念。用于处理ios多线程开发的问题。
网上部分资料提到一点是，虽然是queue，但是却并不是带有队列的概念，放入的操作并非是按照严格的先进现出。
这边又有个疑点是，对于队列来说，先进先出的概念是Afunc添加进队列，Bfunc紧跟着也进入队列，Afunc先执行这个是必然的，
但是Bfunc是等Afunc完全操作完以后，B才开始启动并且执行，因此队列的概念离乱上有点违背了多线程处理这个概念。
但是转念一想其实可以参考银行的取票和叫号系统。
因此对于A比B先排队取票但是B率先执行完操作，我们亦然可以感性认为这还是一个队列。
但是后来看到一票关于这操作队列话题的文章，其中有一句提到
“因为两个操作提交的时间间隔很近，线程池中的线程，谁先启动是不定的。”
瞬间觉得这个queue名字有点忽悠人了，还不如pool~
综合一点，我们知道他可以比较大的用处在于可以帮组多线程编程就好了。&lt;/p&gt;

&lt;p&gt;18.What is lazy loading?&lt;/p&gt;

&lt;p&gt;答案：懒汉模式，只在用到的时候才去初始化。
也可以理解成延时加载。
我觉得最好也最简单的一个列子就是tableView中图片的加载显示了。
一个延时载，避免内存过高，一个异步加载，避免线程堵塞。&lt;/p&gt;

&lt;p&gt;19.Can we use two tableview controllers on one viewcontroller?
是否在一个视图控制器中嵌入两个tableview控制器？&lt;/p&gt;

&lt;p&gt;答案：一个视图控制只提供了一个View视图，理论上一个tableViewController也不能放吧，
只能说可以嵌入一个tableview视图。当然，题目本身也有歧义，如果不是我们定性思维认为的UIViewController，
而是宏观的表示视图控制者，那我们倒是可以把其看成一个视图控制者，它可以控制多个视图控制器，比如TabbarController
那样的感觉。&lt;/p&gt;

&lt;p&gt;20.Can we use one tableview with two different datasources? How you will achieve this?
一个tableView是否可以关联两个不同的数据源？你会怎么处理？&lt;/p&gt;

&lt;p&gt;答案：首先我们从代码来看，数据源如何关联上的，其实是在数据源关联的代理方法里实现的。
因此我们并不关心如何去关联他，他怎么关联上，方法只是让我返回根据自己的需要去设置如相关的数据源。
因此，我觉得可以设置多个数据源啊，但是有个问题是，你这是想干嘛呢？想让列表如何显示，不同的数据源分区块显示？&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>APP运营推广超级攻略（2015新版）</title>
      <link>http://lilifeng.net/blogs/2015/01/15/app-operation-approach/</link>
      <pubDate>Thu, 15 Jan 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>市场</category>
      
      
      <category>mobile</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/01/15/app-operation-approach/</guid>
      <description>&lt;p&gt;进入2015年，移动互联网创业产品面临更多机会也面临更多挑战，中小团队高效能的生存和发展依旧是本年度的主题，用最小的投入获取最多用户，用最小杠杆使品牌效应最大化。在想到的100种战略战术里，不断试错几种最有效的方法，剔除掉大多数，集中人财物把手里的资源集中在一个最有可能爆发的点上，不断分析，不断优化，不断放大，等待爆发。最终吸引更多的用户，提高自己的市场份额。&lt;/p&gt;

&lt;p&gt;APP运营推广战略基本定调为：线上导流量、新媒体做品牌、线下做扩展。&lt;/p&gt;

&lt;p&gt;#一、线上渠道&lt;/p&gt;

&lt;p&gt;##1.基础上线&lt;/p&gt;

&lt;p&gt;各大手机厂商市场、第三方应用商店、大平台、PC下载站、手机WAP站、收录站、移动互联网应用推荐媒体等等基本可以覆盖Android版本发布渠道：推广的第一步是要上线，这是最基础的。无需砸钱，只需最大范围的覆盖。笔者多年以来一直认同铺的越广产品推的越好这个死理。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;安卓AppStore渠道：百度、腾讯、360、阿里系、华为、小米、联想、酷派、OPPO、VIVO、金立、魅族、Google Play、其他互联网手机品牌、豌豆荚、机锋、安智、PP助手、刷机助手、手机管家等等&lt;/p&gt;

  &lt;p&gt;运营商渠道：MM社区、沃商店、天翼空间、华为智汇云、腾讯应用中心等；&lt;/p&gt;

  &lt;p&gt;PC端：百度应用、手机助手、软件管家等；&lt;/p&gt;

  &lt;p&gt;Wap站：泡椒、天网、乐讯、宜搜等；&lt;/p&gt;

  &lt;p&gt;Web下载站：天空、华军、非凡、绿软等；&lt;/p&gt;

  &lt;p&gt;iOS版本发布渠道：AppStore、91助手、PP助手、同步推、快用苹果助手、iTools、限时免费大全、爱思助手等等。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;##2、运营商渠道推广&lt;/p&gt;

&lt;p&gt;中国移动，中国电信，中国联通的用户基数较大，可以将产品预装到运营商商店，借力于第三方没有的能力，如果是好的产品，还可以得到其补助和扶植。市场部门要有专门的渠道专员负责与运营商沟通合作，出方案进行项目跟踪。&lt;/p&gt;

&lt;p&gt;##3、第三方商店&lt;/p&gt;

&lt;p&gt;由于进入早，用户积累多，第三方商店成为了很多APP流量入口，全国有近百家第三方应用商店。渠道专员要准备大量素材，测试等与应用市场对接。各应用市场规则不一，如何与应用市场负责人沟通，积累经验与技巧至关重要。资金充足的情况下，可以投放一些广告位及推荐等。&lt;/p&gt;

&lt;p&gt;##4、手机厂商商店&lt;/p&gt;

&lt;p&gt;大厂家都在自己品牌的手机里预装商店，如联想乐商店，HTC市场，opponearme,魅族市场，moto智件园等。渠道部门需要较多运营专员来跟手机厂商商店接触。&lt;/p&gt;

&lt;p&gt;##5、积分墙推广&lt;/p&gt;

&lt;p&gt;“积分墙”是在一个应用内展示各种积分任务(下载安装推荐的优质应用、注册、填表等)，以供用户完成任务获得积分的页面。用户在嵌入积分墙的应用内完成任务，该应用的开发者就能得到相应的收入。积分墙起量快，效果显而易见。&lt;/p&gt;

&lt;p&gt;大部分是采用CPA形式，价格1-3元不等。但以活跃用户等综合成本考量，成本偏高，用户留存率低。业内公司有tapjoy,微云，有米，万普等。积分墙适合大型有资金，需要尽快发展用户的团队。&lt;/p&gt;

&lt;p&gt;##6、刷榜推广&lt;/p&gt;

&lt;p&gt;这种推广乃非正规手段，但是在国内非常的受欢迎，毕竟绝大部分苹果手机用户都会实用APPStore去下载APP。如果你的APP直接都在前几名的位置，当然可以快速获得用户的关注，同时获得较高的真实下载量。&lt;/p&gt;

&lt;p&gt;不过，刷榜的价格是比较高的，国内榜top25名的价格在每天1万元左右，top5的价格每天需要两万多。由于这种推广成本比较高，所以一般会配合新闻炒作一起搞，这样容易快速的出名。&lt;/p&gt;

&lt;p&gt;##7、社交平台推广&lt;/p&gt;

&lt;p&gt;目前主流的智能手机社交平台，潜在用户明确，能很快的推广产品。这类推广基本采用合作分成方式，合作方法多样。业内公司有微云，九城，腾讯，新浪等。&lt;/p&gt;

&lt;p&gt;##8、广告平台&lt;/p&gt;

&lt;p&gt;起量快，效果显而易见。成本较高，以目前主流平台为例，CPC价格在0.3-0.8元，CPA在1.5元-3元之间。不利于创业融资前的团队推广使用。业内公司有admob,多盟，微云，有米，点入等。&lt;/p&gt;

&lt;p&gt;##9、换量&lt;/p&gt;

&lt;p&gt;换量主要有两种方式：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;应用内互相推荐：这种方式可以充分利用流量，增加曝光度和下载量，量级不大，但曝光度不错，有内置推荐位的应用可以相互进行换量，但这需要以一定的用户量作为基础。&lt;/p&gt;

  &lt;p&gt;买量换量：如果自身无法给某一应用带量或者量很小，可以找网盟跑量，以换取应用商店优质的资源位或者折算成钱进行推广。这种方式也是比较实用的方式，包括应用宝、小米等在内的商店都可以换量，通过某些代理，还能跟360等进行换量，可能会比直接在360做CPT有更好的效果。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;##10、AppStore搜索榜&lt;/p&gt;

&lt;p&gt;现在多盟等公司已经可以做到保上榜了，一般这种噱头比较大， 如果产品不行最终还是会走下榜单。&lt;/p&gt;

&lt;p&gt;#二、线下渠道&lt;/p&gt;

&lt;p&gt;##1、手机厂商预装&lt;/p&gt;

&lt;p&gt;出厂就存在，用户转化率高，最直接发展用户的一种方式。用户起量周期长，从提交测试包测试-过测试-试产-量产-销售到用户手中需要3-5个月时间。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;推广成本：应用类产品预装量付费价格在3元左右不等，CPA方式价格在1.5-5元不等。游戏类产品，采取免费预装，后续分成模式，CPA价格在2-3元之间，通常为小包单机产品；&lt;/p&gt;

  &lt;p&gt;业内公司：华为，中兴，酷派，TCL，波导，OPPO，魅族，海信等；&lt;/p&gt;

  &lt;p&gt;操作难点：品牌众多，人员层级多，产品项目多，需要有专业的团队进行针对性的推荐与维护关系。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;##2、水货刷机&lt;/p&gt;

&lt;p&gt;起量快，基本上2-4天就可以看到刷机用户，数量大，基本上一天可以刷几万台。重刷现象严重，基本上一部手机从总批到渠道到店面会被刷3-5次，推广成本剧增，用户质量差，不好监控。基本上刷机单一软件CPA在1-2元，包机一部机器价格在5-10元之间。&lt;/p&gt;

&lt;p&gt;业内公司：各大国包省包，地级市零售连锁渠道、酷乐无限，乐酷，XDA、刷机精灵、爱施德、天音通讯、斯凯、金玉满堂、鼎开互联等等。&lt;/p&gt;

&lt;p&gt;##3、行货店面&lt;/p&gt;

&lt;p&gt;用户质量高，粘度高，用户付费转化率高，见用户速度快。店面多，店员培训复杂，需要完善的考核及奖励机制。基本上CPA价格在1.5-3元之间，预装价格在0.5-1元之间。业内公司：乐语，中复，天音，中邮，苏宁、国美、恒波、中域电讯等。&lt;/p&gt;

&lt;p&gt;#三、新媒体营销&lt;/p&gt;

&lt;p&gt;##1、内容策划&lt;/p&gt;

&lt;p&gt;内容策划前需做好受众定位，分析得出核心用户特征，坚持原创内容的产出，在内容更新上保持一天三条左右有趣的内容。抓住当周或当天的热点跟进。创意，还是创意，让你的产品讲故事，拟人化。&lt;/p&gt;

&lt;p&gt;##2、品牌基础推广&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;百科类推广：在百度百科建立品牌词条，建立SEO体系和百度指数；&lt;/p&gt;

  &lt;p&gt;问答类推广：在百度知道，搜搜问答，新浪爱问，百度经验等网站建立问答。&lt;/p&gt;

  &lt;p&gt;垂直社区：在知乎，豆瓣，微博等社交网络，要有相应的内容存在。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;##3、论坛，贴吧推广&lt;/p&gt;

&lt;p&gt;机锋、安卓、安智….在手机相关网站的底端都可以看到很多的行业内论坛。建议推广者以官方贴、用户贴两种方式发帖推广，同时可联系论坛管理员做一些活动推广。发完贴后，应当定期维护好自己的帖子，及时回答用户提出的问题，搜集用户反馈的信息，以便下个版本更新改进。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;第一阵容：机锋论坛、安卓论坛、安智论坛等；&lt;/p&gt;

  &lt;p&gt;第二阵容：魔趣网、安卓论坛、魅族论等；&lt;/p&gt;

  &lt;p&gt;第三阵容：风暴论坛、木蚂蚁论坛、DOSPY论坛。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;##4、微博推广&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;内容：将产品拟人化，讲故事，定位微博特性，坚持原创内容的产出。在微博上抓住当周或当天的热点跟进，保持一定的持续创新力；&lt;/p&gt;

  &lt;p&gt;互动：关注业内相关微博账号，保持互动，提高品牌曝光率；&lt;/p&gt;

  &lt;p&gt;活动：必要时候可以策划活动，微博转发等。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;##5、微信推广&lt;/p&gt;

&lt;p&gt;微信公众号的运营推广需要一定时间沉淀，这里可以参考几步曲：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;内容定位：结合产品做内容聚合推荐，内容不一定要多，但是一定要精并且符合微信号的定位；&lt;/p&gt;

  &lt;p&gt;种子用户积累：初期可以给定个KPI指标，500个粉丝一个门槛，种子用户可以通过同事好友，合作伙伴推荐，微博引流，官网引流等；&lt;/p&gt;

  &lt;p&gt;小号积累：开通微信小号，每天导入目标客户群；&lt;/p&gt;

  &lt;p&gt;小号导大号：通过小号的粉丝积累推荐微信公众号，将粉丝导入到微信公众号；&lt;/p&gt;

  &lt;p&gt;微信互推：当粉丝量达到一定预期后，可以加入一些微信互推群。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;##6、PR传播&lt;/p&gt;

&lt;p&gt;PR不是硬广告，学会给你的投资人、员工、用户讲一个感动人的故事非常重要。互联网时代人人都是他妈的媒体，无论微博、微信公众号、媒体网站的专栏或各大社交网站，我得去研究如何利用这些平台来讲述一个好的品牌的故事，反之，这些平台也会是用户对品牌产生UGC的最好渠道。&lt;/p&gt;

&lt;p&gt;在初创公司，作为PR需要把公司每一个阶段的方向都了解透彻，然后学会向市场、投资人、用户传递一个有力的声音，这个声音并不是生硬的广而告之，而是抛出一个话题让大家对你的故事所感兴趣，并带动大家如何把兴趣引到你的产品上来，最好形成行业的热议话题。&lt;/p&gt;

&lt;p&gt;以下有几个策略：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;用日常稿件保持稳定的曝光&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;我们会定期做一张传播规划表，每个月要根据公司和产品的变化来决定该向外界传递什么声音，恰当的表达和持续的内容产出会让公司的曝光度及行业的关注度逐渐提高。&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;维护好已有的媒体资源，积极扩展新资源&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;对于自己原来熟识的记者和媒体，我仍会保持续的沟通和交流，告诉他们，我们的团队在做怎么样的一件事。深信只有反复的沟通，才会把故事的闪光点打磨得抓住人心。而作为PR也更能及时嗅到媒体关注的兴趣点，为下一次的报道梳理做好充分准备。在创业公司对PR的经费并不是非常充足的情况下，我们需要仔细去分析，在什么样的发展阶段和进度，需要利用的什么样的途径和资源去支撑公司的发声和观点。所以我们对自己的要求是每周都有计划的去拓展一些新的媒体资源，这样能为之后做事件输出时能有合适的渠道的进行支撑。&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;选择的渠道决定了传播的效果&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;说什么故事，用哪种方式呈现传播效果会最佳，这对于渠道的选择就显得尤为重要。比如对于公司创始人的一些采访，我们可能更倾向于行业及财经相关的权重高的纸媒，有利于大面积的带动传播;对于产品的发声，我们更倾向于科技类的新媒体，在行业内能引起更快速的关注力;而对于事件话题性的新闻，我们更青睐于选择大型门户类网站。&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;对于自媒体这领域，实力参差不齐，选择有中立观点和实力派的自媒体发声，不失为好的选择。但是成本对创业公司来说，并不是性价比最高的。而对于电视媒体，选择对和你潜在用户相吻合的节目，是一个能快速让产品呈爆发式增长的途径.&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;做好对营销传播效果的评估&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;这些可能包括人群的覆盖率、点击量、阅读量，点赞量等。每一次的数据，都会告诉你下一次的内容应该怎样做得更赞。而PR作为连接内外的桥梁，最好也要藏身于用户中间，在深度沟通中突出品牌的个性。&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;##7、事件营销&lt;/p&gt;

&lt;p&gt;事件营销绝对是个体力活和脑力活，这需要整个团队保持敏锐的市场嗅觉，此外还需要有强大的执行力，配合一定的媒体资源，事件才得以在最快的速度推出去。&lt;/p&gt;

&lt;p&gt;事件营销的前提必须是团队成员需要每天接触大量新鲜的资讯，把这些信息整合，也需要养成随时记录下一些闪现的灵感创意并和成员们及时分享碰撞。对于能贴上产品的创意点结合点，我们会马上进行头脑风暴，对事件的始终进行推理，若确定方案可行，那么马上做出与之匹配的传播计划，开始做项目预算并一边准备好渠道资源。&lt;/p&gt;

&lt;p&gt;##8、数据分析&lt;/p&gt;

&lt;p&gt;每周花一些时间去认真分析每一条微博、微信、每一个渠道背后的数据，你一定会发现传播度高的内容背后的契合点和关联性。这样非常有利于自己官方微博、微信内容质量的提升，运营起来也更接地气。&lt;/p&gt;

&lt;p&gt;##9、“牛皮癣式营销”&lt;/p&gt;

&lt;p&gt;线下推广不建议做浪费人力物力的发传单等等。了解当地情况，在有把握的前提下，建议在热点区域放置可移动的广告位，或者在地面上刷二维码，并且以人民群众喜闻乐见的形式比如下载APP送礼品等形式搞噱头营销，最好是被城管给赶走，这样效果会更好。&lt;/p&gt;

&lt;p&gt;##10、撕逼营销&lt;/p&gt;

&lt;p&gt;###撕逼前：&lt;/p&gt;

&lt;p&gt;找一家你的竞争对手，公司成立五人小组，从互联网、人脉圈里海量寻找和归纳总结对方公司和产品的弱点，找到一个最有可能爆发的点，制定一个作战方案出来，这个方案一定要具有传播性、话题性、撕逼性方可，最后设置执行组，专职负责撕逼，事前可简单通知关系要好的媒体做放风，并准备好相应的产品推广方案。&lt;/p&gt;

&lt;p&gt;###撕逼中：&lt;/p&gt;

&lt;p&gt;不管对方说什么，你不断重复五人小组数日研究出来的对方软肋即可，并时不时把目光引导自己产品上来。&lt;/p&gt;

&lt;p&gt;###撕逼后：&lt;/p&gt;

&lt;p&gt;顺势推出之前就做好的推广方案，线上线下渠道媒体一起帮你口水，同时开始推量，事可能就成了。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Web前端研发工程师面试题及答案</title>
      <link>http://lilifeng.net/blogs/2015/01/15/WEB-Test/</link>
      <pubDate>Thu, 15 Jan 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>原生</category>
      
      <category>Web</category>
      
      <category>HTML</category>
      
      <category>HTML5</category>
      
      <category>CSS</category>
      
      <category>CSS3</category>
      
      <category>Javascript</category>
      
      <category>Ajax</category>
      
      <category>试题</category>
      
      
      <category>Internet</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/01/15/WEB-Test/</guid>
      <description>&lt;p&gt;##HTML+CSS&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;1.对WEB标准以及W3C的理解与认识&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;标签闭合、标签小写、不乱嵌套、提高搜索机器人搜索几率、使用外链css和js脚本、结构行为表现的分离、文件下载与页面速度更快、内容能被更多的用户所访问、内容能被更广泛的设备所访问、更少的代码和组件，容易维护、改版方便，不需要变动页面内容、提供打印版本而不需要复制内容、提高网站易用性；&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;2.xhtml和html有什么区别&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;HTML是一种基本的WEB网页设计语言，XHTML是一个基于XML的置标语言&lt;/p&gt;

&lt;p&gt;最主要的不同：&lt;/p&gt;

&lt;p&gt;XHTML 元素必须被正确地嵌套。&lt;/p&gt;

&lt;p&gt;XHTML 元素必须被关闭。&lt;/p&gt;

&lt;p&gt;标签名必须用小写字母。&lt;/p&gt;

&lt;p&gt;XHTML 文档必须拥有根元素。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;3.Doctype? 严格模式与混杂模式-如何触发这两种模式，区分它们有何意义?&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;用于声明文档使用那种规范（html/Xhtml）一般为 严格 过度 基于框架的html文档&lt;/p&gt;

&lt;p&gt;加入XMl声明可触发，解析方式更改为IE5.5 拥有IE5.5的bug&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;4.行内元素有哪些？块级元素有哪些？CSS的盒模型？&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;块级元素：div p h1 h2 h3 h4 form ul&lt;/p&gt;

&lt;p&gt;行内元素: a b br i span input select&lt;/p&gt;

&lt;p&gt;Css盒模型:内容，border ,margin，padding&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;5.CSS引入的方式有哪些? link和@import的区别是?&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;内联 内嵌 外链 导入&lt;/p&gt;

&lt;p&gt;区别 ：同时加载&lt;/p&gt;

&lt;p&gt;前者无兼容性，后者CSS2.1以下浏览器不支持&lt;/p&gt;

&lt;p&gt;Link 支持使用javascript改变样式，后者不可&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;6.CSS选择符有哪些？哪些属性可以继承？优先级算法如何计算？内联和important哪个优先级高？&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;标签选择符  类选择符 id选择符&lt;/p&gt;

&lt;p&gt;继承不如指定   Id&amp;gt;class&amp;gt;标签选择&lt;/p&gt;

&lt;p&gt;后者优先级高&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;7.前端页面有哪三层构成，分别是什么？作用是什么？&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;结构层 Html 表示层 CSS 行为层 js&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;8.css的基本语句构成是？&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;选择器{属性1:值1;属性2:值2;……}&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;9.你做的页面在哪些流览器测试过？这些浏览器的内核分别是什么?&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Ie(Ie内核)  火狐（Gecko） 谷歌（webkit） opear(Presto)&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;10.写出几种IE6 BUG的解决方法&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;1.双边距BUG float引起的  使用display&lt;/p&gt;

&lt;p&gt;2.3像素问题 使用float引起的 使用dislpay:inline -3px&lt;/p&gt;

&lt;p&gt;3.超链接hover 点击后失效  使用正确的书写顺序 link visited hover active&lt;/p&gt;

&lt;p&gt;4.Ie z-index问题 给父级添加position:relative&lt;/p&gt;

&lt;p&gt;5.Png 透明 使用js代码 改&lt;/p&gt;

&lt;p&gt;6.Min-height 最小高度 ！Important 解决’&lt;/p&gt;

&lt;p&gt;7.select 在ie6下遮盖 使用iframe嵌套&lt;/p&gt;

&lt;p&gt;8.为什么没有办法定义1px左右的宽度容器（IE6默认的行高造成的，使用over:hidden,zoom:0.08 line-height:1px）&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;11.web前端面试题标签上title与alt属性的区别是什么？&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Alt 当图片不显示是 用文字代表。
Title 为该属性提供信息&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;12.描述css reset的作用和用途。&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Reset重置浏览器的css默认属性        浏览器的品种不同，样式不同，然后重置，让他们统一&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;13.解释css sprites，如何使用。&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Css 精灵 把一堆小的图片整合到一张大的图片上，减轻服务器对图片的请求数量&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;14.浏览器标准模式和怪异模式之间的区别是什么？&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;盒子模型 渲染模式的不同&lt;/p&gt;

&lt;p&gt;使用 window.top.document.compatMode 可显示为什么模式&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;15.你如何对网站的文件和资源进行优化？&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;期待的解决方案包括：&lt;/p&gt;

&lt;p&gt;文件合并&lt;/p&gt;

&lt;p&gt;文件最小化/文件压缩&lt;/p&gt;

&lt;p&gt;使用CDN托管&lt;/p&gt;

&lt;p&gt;缓存的使用&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;16.什么是语义化的HTML？&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;直观的认识标签  对于搜索引擎的抓取有好处&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;17.清除浮动的几种方式，各自的优缺点&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;1.使用空标签清除浮动 clear:both（理论上能清楚任何标签，，，增加无意义的标签）&lt;/p&gt;

&lt;p&gt;2.使用overflow:auto（空标签元素清除浮动而不得不增加无意代码的弊端,,使用zoom:1用于兼容IE）&lt;/p&gt;

&lt;p&gt;3.是用afert伪元素清除浮动(用于非IE浏览器)&lt;/p&gt;

&lt;p&gt;##Javascript&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;1.javascript的typeof返回哪些数据类型&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Object number function boolean underfind&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;2.例举3种强制类型转换和2种隐式类型转换？&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;强制（parseInt,parseFloat,number）&lt;/p&gt;

&lt;p&gt;隐式（== - ===）&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;3.split() join() 的区别&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;前者是切割成数组的形式，后者是将数组转换成字符串&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;4.数组方法pop() push() unshift() shift()&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Push()尾部添加 pop()尾部删除&lt;/p&gt;

&lt;p&gt;Unshift()头部添加  shift()头部删除&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;5.事件绑定和普通事件有什么区别&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;6.IE和DOM事件流的区别&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;1.执行顺序不一样&lt;/p&gt;

&lt;p&gt;2.参数不一样&lt;/p&gt;

&lt;p&gt;3.事件加不加on&lt;/p&gt;

&lt;p&gt;4.this指向问题&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;7.IE和标准下有哪些兼容性的写法&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ev&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ev&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;documentElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clientWidth&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clientWidth&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;srcElement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;||&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;8.ajax请求的时候get 和post方式的区别&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;一个在url后面 一个放在虚拟载体里面&lt;/p&gt;

&lt;p&gt;有大小限制&lt;/p&gt;

&lt;p&gt;安全问题&lt;/p&gt;

&lt;p&gt;应用不同 一个是论坛等只需要请求的，一个是类似修改密码的&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;9.call和apply的区别&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;apply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arguments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;10.ajax请求时，如何解释json数据&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;使用eval parse 鉴于安全性考虑 使用parse更靠谱&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;11.b继承a的方法&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;12.写一个获取非行间样式的函数&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getStyle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;currentStyle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;currentStyle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getComputedStyle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;13.事件委托是什么&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;让利用事件冒泡的原理，让自己的所触发的事件，让他的父元素代替执行！&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;14.闭包是什么，有什么特性，对页面有什么影响&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;闭包就是能够读取其他函数内部变量的函数。&lt;/p&gt;

&lt;p&gt;http://blog.csdn.net/gaoshanwudi/article/details/7355794 此链接可查看（问这个问题的不是一个公司）&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;15.如何阻止事件冒泡和默认事件&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;canceBubble   return false&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;16.添加 删除 替换 插入到某个接点的方法&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChidl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innersetBefore&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replaceChild&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;removeChild&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;17.解释jsonp的原理，以及为什么不是真正的ajax&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;动态创建script标签，回调函数&lt;/p&gt;

&lt;p&gt;Ajax是页面无刷新请求数据操作&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;18.javascript的本地对象，内置对象和宿主对象&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;本地对象为array obj regexp等可以new实例化&lt;/p&gt;

&lt;p&gt;内置对象为gload Math 等不可以实例化的&lt;/p&gt;

&lt;p&gt;宿主为浏览器自带的document,window 等&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;19.document load 和document ready的区别&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Document.onload 是在结构和样式加载完才执行js&lt;/p&gt;

&lt;p&gt;Document.ready原生种没有这个方法，jquery中有 $().ready(function)&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;20.”==”和“===”的不同&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;前者会自动转换类型&lt;/p&gt;

&lt;p&gt;后者不会&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;21.javascript的同源策略&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;一段脚本只能读取来自于同一来源的窗口和文档的属性，这里的同一来源指的是主机名、协议和端口号的组合&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;22.编写一个数组去重的方法&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;oSort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;newArr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;nx&quot;&gt;newArr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
                    &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;newArr&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;23.排序算法&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;oSort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;oNum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;floor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;oNumVode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;splice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;oNum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;nx&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;nx&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;oSort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;oNumVode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;oSort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
    </item>
    
    <item>
      <title>GithubPages+Jekyll模板中各类型对象的方法介绍</title>
      <link>http://lilifeng.net/blogs/2015/01/07/Jekyll-Date/</link>
      <pubDate>Wed, 07 Jan 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>原生</category>
      
      <category>Jekyll</category>
      
      <category>Liquid</category>
      
      
      <category>Internet</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/01/07/Jekyll-Date/</guid>
      <description>&lt;p&gt;Jekyll 使用Liquid来处理模板数据。在建立中文博客的过程中，常常会苦于无法在文章中显示中文或阿拉伯数字形式日期的问题，而网上绝大多数给出的方案都只是官方的文档给出的 07 Jan 2015。为了能够了解Jekyll模板中不同对象究竟有哪些可以使用的方法，写下此文。&lt;/p&gt;

&lt;p&gt;在Liquid中，以上面的语句为例，page为object对象，page.date为attribute属性，后面的date_to_string叫做filter过滤器。请参考Liquid官网&lt;a href=&quot;http://docs.shopify.com/themes/liquid-documentation/objects&quot;&gt;关于Objects的介绍&lt;/a&gt;。而在Jekyll中page被叫做Global Variables全局变量，而每个全局变量拥有的多个属性被称为子变量，如Site全局变量的子变量为Site Variables。 请参考官网的&lt;a href=&quot;http://jekyllrb.com/docs/variables/&quot;&gt;变量介绍一页&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;不同的属性拥有不同的类型，有的属于数组，有的属于字符，有的属于日期时间等等，下面分别介绍不同类型属性的过滤器：&lt;/p&gt;

&lt;p&gt;#数组过滤器&lt;/p&gt;

&lt;p&gt;主要包括以下对象：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;site.pages&lt;/li&gt;
    &lt;li&gt;site.posts&lt;/li&gt;
    &lt;li&gt;site.related_posts&lt;/li&gt;
    &lt;li&gt;site.static_files&lt;/li&gt;
    &lt;li&gt;site.html_pages&lt;/li&gt;
    &lt;li&gt;site.collections&lt;/li&gt;
    &lt;li&gt;site.data&lt;/li&gt;
    &lt;li&gt;site.documents&lt;/li&gt;
    &lt;li&gt;site.categories&lt;/li&gt;
    &lt;li&gt;site.categories.CATEGORY&lt;/li&gt;
    &lt;li&gt;site.tags&lt;/li&gt;
    &lt;li&gt;site.tags.TAG&lt;/li&gt;
    &lt;li&gt;site.[CONFIGURATION_DATA]&lt;/li&gt;
    &lt;li&gt;page.categories&lt;/li&gt;
    &lt;li&gt;page.tags&lt;/li&gt;
    &lt;li&gt;paginator.posts&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;###join&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;tags&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;join: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;, &#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;tag1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tag2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tag3&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###first&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;tags&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;sale&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;mens&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;womens&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;awesome&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;tags&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;first&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;sale&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;% if &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;first&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;sale&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;This&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;product&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sale!&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;% endif &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###last&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;tags&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;sale&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;mens&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;womens&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;awesome&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;tags&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;last&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;awesome&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;% if &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;last&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;sale&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;This&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;product&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sale!&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;% endif &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###map&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Spring&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Summer&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Fall&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Winter&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;% assign &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;collection_titles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;collections&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;map: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;title&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;collection_titles&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;SpringSummerFallWinter&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###size&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;is this a 30 character string?&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###sort&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;products&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;b&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;A&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;B&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;% assign &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;products&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;products&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;sort: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;title&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;% for &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;product&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;products&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%}
   {{ product.title }&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;% endfor &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;B&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;#HTML标签过滤器&lt;/p&gt;

&lt;p&gt;###img_tag&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;smirking_gnome.gif&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;asset_url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;img_tag: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;Smirking Gnome&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;cssclass1 cssclass2&#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;//cdn.shopify.com/s/files/1/0147/8382/t/15/assets/smirking_gnome.gif?v=1384022871&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Smirking Gnome&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;cssclass1 cssclass2&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###script_tag&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;shop.js&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;asset_url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;script_tag&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;//cdn.shopify.com/s/files/1/0087/0462/t/394/assets/shop.js?28178&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###stylesheet_tag&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;shop.css&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;asset_url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stylesheet_tag&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;//cdn.shopify.com/s/files/1/0087/0462/t/394/assets/shop.css?28178&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;text/css&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;media&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;all&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;#数学函数过滤器&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;主要包括以下对象：
* paginator.per_page
* paginator.total_posts
* paginator.total_pages
* paginator.page
* paginator.previous_page
* paginator.previous_page_path
* paginator.next_page
* paginator.next_page_path&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;###ceil&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ceil&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ceil&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###divided_by&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;price&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;price&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;divided_by: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###floor&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;floor&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;floor&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###minus&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;price&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;price&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;minus: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;mi&quot;&gt;185&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###plus&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;price&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;price&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;plus: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;mi&quot;&gt;215&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###round&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;round&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;round&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5612&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;round: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;56&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###times&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;price&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;price&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;times: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;mi&quot;&gt;230&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###modulo&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modulo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;#货币函数过滤器&lt;/p&gt;

&lt;p&gt;###money&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;145&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;money&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;HTML without currency&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;amount&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;vg&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;45&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;HTML without currency&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;€&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;amount_no_decimals&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;€&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###money_with_currency&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;45&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;money_with_currency&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;HTML with currency&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;amount&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;CAD&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;vg&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;45&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;CAD&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###money_without_currency&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;145&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;money_without_currency&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;45&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;#字符串过滤器&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;主要包括以下对象：
* page.content
* page.title
* page.excerpt
* page.url
* page.id
* page.path&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;###append&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;sales&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;append: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;.jpg&#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;sales&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;jpg&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###camelcase&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;coming-soon&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;camelcase&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;ComingSoon&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###capitalize&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;capitalize me&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;capitalize&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;Capitalize&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;me&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###downcase&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;UPPERCASE&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;downcase&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;uppercase&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###escape&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;p&amp;gt;test&amp;lt;/p&amp;gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;escape&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;The&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tags&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;are&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rendered&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/p&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###handle/handleize&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;100% M &amp;amp; Ms!!!&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;handleize&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ms&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###md5&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://www.gravatar.com/avatar/{{ comment.email | remove: &#39; &#39; | strip_newlines | downcase | md5 }}&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://www.gravatar.com/avatar/2a95ab7c950db9693c2ceb767784c201&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###newline_to_br&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;% capture &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%}
One 
Two
Three
{% endcapture %}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newline_to_br&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;One&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Two&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Three&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###pluralize&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;item_count&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;item_count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;pluralize: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;item&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;items&#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###prepend&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;sale&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;prepend: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;Made a great &#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;Made&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;great&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sale&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###remove&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hello, world. Goodbye, world.&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;remove: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;world&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;Made&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;great&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;saleHello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Goodbye&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###remove_first&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hello, world. Goodbye, world.&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;remove_first: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;world&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;Hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Goodbye&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;world&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###replace&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Awesome Shoes&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;replace: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;Awesome&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;Mega&#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;Mega&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Shoes&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###replace_first&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Awesome Awesome Shoes&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;replace_first: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;Awesome&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;Mega&#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;Mega&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Awesome&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Shoes&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###slice&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;hello&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;slice: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;hello&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;slice: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ell&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;hello&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;slice: &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;el&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###split&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;% assign &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;words&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Uses cheat codes, calls the game boring.&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;split: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39; &#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;First&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;word: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;words&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;first&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;First&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;word: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;words&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Second&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;word: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;words&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Last&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;word: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;words&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;last&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;All&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;words: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;words&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;join: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;, &#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;% for &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;words&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%}
{{ word }&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;% endfor &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;First&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;word: &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Uses&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;First&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;word: &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Uses&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Second&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;word: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cheat&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Last&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;word: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;boring&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;All&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;words: &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Uses&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cheat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;codes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;calls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;game&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;boring&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;Uses&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cheat&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;codes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;calls&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;game&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;boring&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###strip&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;   too many spaces      &#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;strip&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;too&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;many&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spaces&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###lstrip&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;   too many spaces           &#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lstrip&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Notice&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;empty&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spaces&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;right&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;too&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;many&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spaces&lt;/span&gt;           &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###rstrip&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;   too many spaces      &#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rstrip&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;                 &lt;span class=&quot;n&quot;&gt;too&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;many&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spaces&lt;/span&gt;     &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###strip_html&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;h1&amp;gt;Hello&amp;lt;/h1&amp;gt; World&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;strip_html&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;Hello&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;World&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###strip_newlines&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;description&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;strip_newlines&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###truncate&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;The cat came back the very next day&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;truncate: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;The&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###truncatewords&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;The cat came back the very next day&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;truncatewords: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;The&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;came&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;back&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###uniq&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;% assign &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fruits&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;orange apple banana apple orange&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fruits&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;split: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39; &#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uniq&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;join: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39; &#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;orange&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;apple&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;banana&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###upcase&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;i want this to be uppercase&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;upcase&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;I&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;WANT&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;THIS&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;TO&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;BE&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;UPPERCASE&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###url_escape&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;hello&amp;gt; &amp;amp; &amp;lt;shopify&amp;gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url_escape&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Chello&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;E&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;%&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Cshopify&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;E&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###url_param_escape&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;hello&amp;gt; &amp;amp; &amp;lt;shopify&amp;gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url_param_escape&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Chello&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;E&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;26&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Cshopify&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;E&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###number_of_words&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;content&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;number_of_words&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;mi&quot;&gt;1337&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###array_to_sentence_string&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;tags&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;array_to_sentence_string&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;baz&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;#日期过滤器&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;主要包括以下对象：
* site.time
* page.date&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;article&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;published_at&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;date: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%a, %b %d, %y&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;Tue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Apr&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;22&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###%a:Abbreviated weekday.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;article&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;published_at&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;date: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%a&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Sat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###%A:Full weekday name.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;article&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;published_at&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;date: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%A&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Tuesday&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###%b:Abbreviated month name.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;article&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;published_at&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;date: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%b&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Jan&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###%B:Full month name&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;article&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;published_at&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;date: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%B&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;January&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###%c:Preferred local date and time representation&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;article&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;published_at&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;date: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%c&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Tue&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Apr&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;22&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;09&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2014&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###%d:Day of the month, zero-padded (01, 02, 03, etc.).&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;article&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;published_at&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;date: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%d&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;04&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###%-d:Day of the month, not zero-padded (1,2,3, etc.).&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;article&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;published_at&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;date: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%-d&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###%D:Formats the date (dd/mm/yy).&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;article&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;published_at&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;date: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%D&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;22&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###%e:Day of the month, blank-padded ( 1, 2, 3, etc.).&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;article&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;published_at&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;date: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%e&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###%F:Returns the date in ISO 8601 format (yyyy-mm-dd).&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;article&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;published_at&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;date: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%F&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2014&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;22&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###%H:Hour of the day, 24-hour clock (00 - 23).&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;article&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;published_at&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;date: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%H&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###%I:Hour of the day, 12-hour clock (1 - 12).&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;article&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;published_at&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;date: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%I&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###%j:Day of the year (001 - 366).&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;article&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;published_at&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;date: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%j&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;245&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###%k:Hour of the day, 24-hour clock (1 - 24).&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;article&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;published_at&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;date: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%k&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###%m:Month of the year (01 - 12).&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;article&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;published_at&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;date: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%m&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;04&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###%M:Minute of the hour (00 - 59).&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;article&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;published_at&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;date: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%M&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;!--&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;53&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###%p:Meridian indicator (AM/PM).&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;article&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;published_at&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;date: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%p&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;PM&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###%r:12-hour time (%I:%M:%S %p)&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;article&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;published_at&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;date: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%r&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;03&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;07&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;PM&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###%R:24-hour time (%H:%M)&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;article&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;published_at&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;date: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%R&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;21&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###%T:24-hour time (%H:%M:%S)&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;article&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;published_at&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;date: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%T&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;22&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###%U:The number of the week in the current year, starting with the first Sunday as the first day of the first week.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;article&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;published_at&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;date: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%U&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###%W:The number of the week in the current year, starting with the first Monday as the first day of the first week.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;article&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;published_at&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;date: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%W&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###%w:Day of the week (0 - 6, with Sunday being 0).&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;article&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;published_at&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;date: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%w&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###%x:Preferred representation for the date alone, no time. (mm/dd/yy).&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;article&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;published_at&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;date: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%x&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;22&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###%X:Preferred representation for the time. (hh:mm:ss).&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;article&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;published_at&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;date: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%X&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;17&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;24&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###%y:Year without a century (00.99).&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;article&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;published_at&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;date: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%y&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###%Y:Year with a century.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;article&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;published_at&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;date: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%Y&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2014&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###%Z:Time zone name.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;article&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;published_at&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;date: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%Z&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;EDT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###date_to_xmlschema&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date_to_xmlschema&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;mi&quot;&gt;2008&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;17&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;07&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;54&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;08&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###date_to_string&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date_to_string&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;mi&quot;&gt;17&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Nov&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2008&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###date_to_long_string&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date_to_long_string&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;mi&quot;&gt;17&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;November&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2008&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;#其他过滤器&lt;/p&gt;

&lt;p&gt;###default&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;Dear&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;customer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;default: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;customer&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;customer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Dear&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;customer&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###default_errors&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;% if &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;errors&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%}
      {{ form.errors | default_errors }&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;% endif &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;errors&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;returned&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;email&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Please&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;enter&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;valid&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###default_pagination&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;paginate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;default_pagination&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;page current&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/span&amp;gt;
&amp;lt;span class=&quot;page&quot;&amp;gt;&amp;lt;a href=&quot;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;collections&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;all?page&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot; title=&quot;&quot;&amp;gt;2&amp;lt;/a&amp;gt;&amp;lt;/span&amp;gt;
&amp;lt;span class=&quot;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;gt;&amp;lt;a href=&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;collections&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;all?page&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot; title=&quot;&quot;&amp;gt;3&amp;lt;/a&amp;gt;&amp;lt;/span&amp;gt; 
&amp;lt;span class=&quot;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;deco&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;gt;&amp;amp;hellip;&amp;lt;/span&amp;gt;
&amp;lt;span class=&quot;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;gt;&amp;lt;a href=&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;collections&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;all?page&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;17&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot; title=&quot;&quot;&amp;gt;17&amp;lt;/a&amp;gt;&amp;lt;/span&amp;gt;
&amp;lt;span class=&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;gt;&amp;lt;a href=&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;collections&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;all?page&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot; title=&quot;&quot;&amp;gt;Next &amp;amp;raquo;&amp;lt;/a&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###highlight&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;content&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;highlight: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;terms&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;If&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;search&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;term&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;was&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Yellow&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strong&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;highlight&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Yellow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/strong&amp;gt; shirts are the best! &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###highlight_active_tag&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;tags&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Cotton&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Crew Neck&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Jersey&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;% for &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;tags&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%}
    {{ tag | highlight_active | link_to_tag: tag }&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;% endfor &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Show products matching tag Cotton&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/collections/all/cotton&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;active&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Cotton&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/span&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Show products matching tag Crew Neck&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/collections/all/crew-neck&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Crew&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Neck&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/a&amp;gt;
&amp;lt;a title=&quot;Show products matching tag Jersey&quot; href=&quot;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;collections&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jersey&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;gt;Jersey&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###json&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;content&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;handle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;content&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;content&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\u&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;003Cp&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\u&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;003E&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\u&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;003Cstrong&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\u&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;003EYou made it! Congratulations on starting your own e-commerce store!&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\u&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;003C/strong&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\u&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;003E&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\u&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;003C/p&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\u&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;003E&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n\u&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;003Cp&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\u&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;003EThis is your shop&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\u&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;0026#8217;s &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\u&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;003Cstrong&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\u&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;003Efrontpage&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\u&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;003C/strong&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\u&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;003E, and it&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\u&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;0026#8217;s the first thing your customers will see when they arrive. You&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\u&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;0026#8217;ll be able to organize and style this page however you like.&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\u&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;003C/p&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\u&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;003E&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n\u&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;003Cp&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\u&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;003E&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\u&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;003Cstrong&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\u&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;003ETo get started adding products to your shop, head over to the &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\u&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;003Ca href=&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/admin&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;\u&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;003EAdmin Area&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\u&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;003C/a&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\u&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;003E.&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\u&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;003C/strong&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\u&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;003E&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\u&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;003C/p&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\u&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;003E&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n\u&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;003Cp&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\u&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;003EEnjoy the software,  &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\u&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;003Cbr /&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\u&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;003E&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Your Shopify Team.&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\u&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;003C/p&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\u&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;003E&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###weight_with_unit&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;variants&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;weight&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;weight_with_unit&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;=&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;mi&quot;&gt;24&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kg&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
    </item>
    
    <item>
      <title>2014中国移动广告大事记</title>
      <link>http://lilifeng.net/blogs/2015/01/04/mobile-events-2014/</link>
      <pubDate>Sun, 04 Jan 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>市场</category>
      
      
      <category>广告平台</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/01/04/mobile-events-2014/</guid>
      <description>&lt;p&gt;2014年已经过去，回顾这一年移动广告行业爆点一茬接着一茬，融资、绿色联盟、Appstore规则调整、ChinaJoy大战、海外市场布局等等，这些关键词都证明了移动广告市场的火爆。&lt;/p&gt;

&lt;p&gt;##多强、群雄格局形成&lt;/p&gt;

&lt;p&gt;经过2013年的行业大洗牌，2014年从年初开始移动广告的认可度持续增高，移动广告业务进入了一个小高潮期。除了草根创业起家的点入（亿起联旗下）、多盟、有米以及转型过来的易传媒、MediaV之外，原本不看好移动广告的互联网巨头也加紧了移动广告领域的布局。2014年5月，广点通发布移动广告联盟，腾讯正式进军移动广告；360宣布入股MediaV。2014年8月，百视通收购艾德思奇。中国移动广告行业格局逐渐形成了“多强+群雄”格局。&lt;/p&gt;

&lt;p&gt;##积分墙成移动广告新贵&lt;/p&gt;

&lt;p&gt;积分墙目前是全球性的主流广告形式。积分墙在欧美、日本、台湾等地也广受欢迎。积分墙之所以成为apps主流的推广渠道，原因在于通过低成本代价冲榜带来的榜位变化获取更多自然用户，自然用户都是优质用户。尽管积分墙带来的直接用户不多，但通过榜位的变化带来的间接用户却远远超过直接用户的数量。在国内，第三方应用商店是主流，目前占据了61.3%市场份额，其次为广告平台21.5%和积分墙17.2%。国外则完全相反，广告平台市场份额达53%，第三方应用商店份额最小为12%，积分墙占据35%。国内外对比来看，积分墙广告市场仍有较大发展空间。此外目前积分墙除了适应app store打榜及冲榜的基本需求以外，积分墙上的广告形式又有了更加有趣的互动形式，例如为广告主的汽车品牌完成一次线下试驾活动；为电商类的广告主完成一次线上促销预定；为品牌广告主完成一次品牌试用等。还可以创造积分墙广告圈子概念的互动性传播，墙内接入广告主的微信、微博等内容，用户可将内容分  享到自己的朋友圈、个人微博，实现精准、互动的圈子传播效果。因此积分墙作为移动广告的新贵，名副其实。&lt;/p&gt;

&lt;p&gt;##行业绿色联盟诞生&lt;/p&gt;

&lt;p&gt;随着移动广告业务快速发展，行业中也些许出现了不规范操作，在整个行业规则不健全的情况下，整个移动广告生态体系无法可持续发展。移动广告如何能够欣欣向荣的发展成为重要“课题”。2014年5月，点入、多盟、有米、力美在内的4家广告平台结成行业绿色联盟，倡导行业绿色、健康、可持续发展，以此让广告主的投放环境更绿色，让开发者获得更多的实惠。&lt;/p&gt;

&lt;p&gt;##各家平台“密谋出海”&lt;/p&gt;

&lt;p&gt;随着中国移动互联网的进一步发展，越来越多的开发者准备扬帆“出海”，点入、有米纷纷瞄准这一时机，积极推动海外市场布局。据了解，尽管2014年上半年国内移动广告市场增长率非常强劲，但移动广告平台仍积极布局海外市场，足见境外市场需求和机会的强劲。广告平台出海主要是通过对海外开发者资源的整合和海外优质媒体合作的加强以及对数据的把控和利用，有效嫁接起中外市场，以帮助品牌广告主实现全球范围内获取用户的宏伟目标，适应并满足更多客户的需求。&lt;/p&gt;

&lt;p&gt;##借助ChinaJoy移动广告“大战”全面升级&lt;/p&gt;

&lt;p&gt;2014年7月30日，一年一度的ChinaJoy游戏大会盛大开幕，点入、多盟、有米、安沃等移动广告明星纷纷亮相，虽未见刀光剑影，却分明地感受到战火硝烟的弥漫，各家广告平台拼展台、拼干货、拼礼品、拼妹子、拼酒会等各种“拼杀”。多盟以帆船的展台造型来吸引眼球。有米展台仅36平米，但简约时尚的风格有着让人眼前一亮的感觉。隔邻相望的点入以科技蓝为主色调的54平米大展台以开放的姿态迎接各方宾客，俄罗斯美女迎宾展示点入开放的合作态度。力美则节约了展台的费用，以高端酒会的形式参与客户争夺战。移动广告平台在移动游戏领域的争夺战全面升级。&lt;/p&gt;

&lt;p&gt;##融资、上市再成潮流&lt;/p&gt;

&lt;p&gt;移动广告经过上半年的飞速发展，第三季度倍受投资方青睐，各家移动广告平台开始借资本做引擎。例如9月份多盟完成C轮融资；迪派无线旗下迷迪移动广告平台完成A轮融资；而亿起联旗下点入移动广告平台则另辟蹊径，直接A股上市。10月，东信时代信息技术有限公司旗下点媒获3000万美金B轮融资。&lt;/p&gt;

&lt;p&gt;##移动营销成行业时尚话题&lt;/p&gt;

&lt;p&gt;随着移动互联网以及移动设备的普及，2104年移动营销继续风生水起，第六届金鼎创意传播国际大奖高峰论坛、广东互联网大会、全球移动游戏大会、移动游戏开发者大会、TMA移动营销峰会、2014梅花网传播业大展、2014移动开发者大会、第十二届中国互联网经济年会等国内颇具影响力的互联网营销活动纷纷将移动互联网作为一项重要的互动版块来进行。移动互联网营销已成为各行各业高度关注的时尚热点话题和时下最潮流的营销方式。而正是由于无数企业在移动营销领域的不断探索与优秀营销案例的沉淀才迎来了2014移动营销的骄人成绩。&lt;/p&gt;

&lt;p&gt;##积分墙广告，热捧与唱衰，路在前方&lt;/p&gt;

&lt;p&gt;今年，积分墙行业风声鹤唳，外有苹果各种打压，内有假量虚量问题，还有财团涉足于国内积分墙业务，积分墙领域硝烟弥漫，在这场拼资金、流水、人脉、技术的战争里，谁都清楚，最终的裁定者就是：苹果。而苹果2014年做了哪些调整呢?&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;1月严查APPS获得用户的IDFA&lt;/p&gt;

  &lt;p&gt;2月警告关键词涉及品牌或商标侵权的应用&lt;/p&gt;

  &lt;p&gt;3月开始陆续下架长标题应用&lt;/p&gt;

  &lt;p&gt;4月开放关键词举报邮箱&lt;/p&gt;

  &lt;p&gt;5月紧急锁榜&lt;/p&gt;

  &lt;p&gt;7月推出自动还款&lt;/p&gt;

  &lt;p&gt;8月封杀视频广告和禁止推销非自家应用&lt;/p&gt;

  &lt;p&gt;9月调整搜索算法同时调整排名算法&lt;/p&gt;

  &lt;p&gt;11月疑似算法调整&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;纵观全年，针对每次恶意刷榜，苹果最常见的做法就是每隔一段时间修改一次算法，或人工清剿刷榜行为及刷评论行为。目前来看苹果的一些动态只是站在行业角度来绿化市场环境，尽可能的平衡规则和资源之间的权重，为打造绿色移动生态系统开刀阔斧。&lt;/p&gt;

&lt;p&gt;##让我们回顾一下行业大佬都是怎么说？&lt;/p&gt;

&lt;p&gt;畅思广告李健：“虽然现在整个市场积分墙广告的存量和新增量都在下跌，积分墙确实遇到了问题，但这是短期的波动，现在“积分墙失效”等结论都言之尚早。”&lt;/p&gt;

&lt;p&gt;亿起联创始人王新：“移动广告未来的潜力是无限的，特别是手游行业的方兴未艾，积分墙广告仍蕴藏较大发展空间。对于整个大行业而言，移动互联网处于高速发展期，还未进入成熟期，关键是如何满足广告主和用户需求的平衡。”游戏茶馆：“积分墙被苹果封杀，言过其实！”&lt;/p&gt;

&lt;p&gt;游戏葡萄：“媒体对苹果调整AppStore榜单排名规则的臆测不排除炒作嫌疑。”&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2014年移动广告平台界投融资整理</title>
      <link>http://lilifeng.net/blogs/2015/01/02/Advertise-Mobile-Platform-Market/</link>
      <pubDate>Fri, 02 Jan 2015 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>原生</category>
      
      <category>市场</category>
      
      
      <category>广告平台</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2015/01/02/Advertise-Mobile-Platform-Market/</guid>
      <description>&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;domob多盟
    2014.09.16已完成C轮
    2011.07.09 B轮 启明创投、红点投资投资超1000万美元

mobSage-艾德思奇
    2014.08.21百视通1亿美元收购51%股权

inMobi邑盟
    2011.09 日本软银投资2亿美元
    2014.05.06 GMIC上宣布接下来几年投入1亿美元在原生广告平台上
    2010.07 已获得来自KPCB等1560万美元投资

limei力美科技
    2012年IDG、KPCB等多家知名海外投资机构共2000多万美元的风险投资

youmi有米-广州优蜜
    2013.08.16深圳同创伟业领投，广州的润都资本和北京的华扬联众共同出资1亿融资

adwo安沃-北京掌阔移动
    2012.06.26获得美国和日本资金的B轮投资1200万美元

点入-北京亿起联
    2014.09.10久其软件4.8亿收购100%

kuguo酷果-广州谷果
    2013.10.07星辉车模7300万收购51%

TEAMTOP天拓-广州天拓
    2013.10.18星辉车模8.12亿收购100%

miidi米迪
    2014.09.22德丰杰龙脉领投北京朗玛峰创投、北京叠金华麒跟投数千万元

momark东信
    2011.05 德丰杰龙脉基金400万美元A轮

aduu优友-深圳优友传媒

smartmad亿动智道
    2013.04.10 高通风险投资领投C轮。ABC共融资3000万美元

vpon威朋
    2014.07.03由多家机构投资B轮千万美金

appflood木瓜
    2014.04 之前已经完成北极光创投B轮融资。AB轮共计2200万美元

WQmobile帷千动媒
    2014.11.05 A轮融资，不祥

casee架势无线
    2008.05.09 Velti投资600万美元

wooboo哇棒
    2013.11.07新文化传媒投资1000万占10%

智盟
    可能与1mob合并了？

1mob易盟

doumob豆盟-掌上云景
    2014.12.05 蓝色光标 4800万24%股权

nextad指智-指点传媒
    2014.09.26电广传媒投资1.673亿收购51%股权

dianjin点金-福建博动

lonark点媒

adjumi聚米
    2013年投资1000万

iDian道有道
    2014.12.09与凤凰移动建立平台战略合作
    2013.07完成A轮融资

mopub
    2013.09.10 Twitter 3.5亿美元收购

Max传漾
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>网络广告术语之平台类型</title>
      <link>http://lilifeng.net/blogs/2014/12/30/Advertise-glossary-platform/</link>
      <pubDate>Tue, 30 Dec 2014 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>术语</category>
      
      
      <category>广告平台</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2014/12/30/Advertise-glossary-platform/</guid>
      <description>&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;RTB(Real Time Bidding): 实时竞价&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;是一种利用第三方技术在数以百万计的网站上针对每一个用户展示行为进行评估以及出价的竞价技术。实时竞价允许广告买家根据活动目标、目标人群以及费用门槛等因素对每一个广告及每次广告展示的费用进行竞价。一旦竞价成功，广告就会立刻出现在出版商的网站中。这种允许进行动态交易的技术被业内称为 “投标人”，而且可以嵌入相关平台中。
RTB模式与传统的展示型广告市场购买方式相区别，传统的展示型广告购买方式有CPM（cost per 1000 impressions - 按照每1000个展示曝光进行付费）、CPC（cost perclick - 按照每个点击进行付费）、Monthly Flat（广告位包月）、Daily Flat（广告位包天），而RTB就是在每一个广告展示曝光的基础上进行竞价。&lt;/p&gt;

&lt;p&gt;RTB面向DSP、SSP，专注于流量交易，平台完善和生态系统的构建；提高流量交换效率，定价机制，信息聚合。以技术为驱动。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/141230_1.jpg&quot; alt=&quot;RTB&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/141230_7.gif&quot; alt=&quot;RTB&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;DSP(Demand Side Platform): 需求方平台&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;需方平台允许广告客户和广告机构更方便地访问，以及更有效地购买广告库存，因为该平台汇集了各种广告交易平台的库存。有了这一平台，就不需要再出现另一个繁琐的购买步骤——购买请求。它服务于广告主，帮助广告主在互联网或者移动互联网上进行广告投放，DSP可以使广告主更简单便捷地遵循统一的竞价和反馈方式，对位于多家广告交易平台的在线广告,以合理的价格实时购买高质量的广告库存。一个真正意义的DSP，必须拥有两个核心特征，一是拥有强大的RTB(Real-Time Bidding)的基础设施和能力，二是拥有先进的用户定向(AudienceTargeting)技术。&lt;/p&gt;

&lt;p&gt;DSP面向广告主、广告代理，专注于定向技术、自动优化、动态出价及创意优化。以服务为驱动。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/141230_2.jpg&quot; alt=&quot;DSP&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SSP(Sell-SidePlatform): 供应方平台&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;供应方平台能够让出版商也介入广告交易，从而使它们的库存广告可用。通过这一平台，出版商希望他们的库存广告可以获得最高的有效每千次展示费用，而不必以低价销售出去。&lt;/p&gt;

&lt;p&gt;SSP面向网站主、网站代理，专注于广告位优化、展示有效性优化、展示竞价优化。以服务为驱动。&lt;/p&gt;

&lt;p&gt;DSP和SSP的对比图如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/141230_3.jpg&quot; alt=&quot;SSP&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;AdExchange: 广告交易平台&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;广告交易平台是一个开放的、能够将出版商和广告商联系在一起的在线广告市场（类似于证券交易所）。交易平台里的广告存货并不一定都是溢价库存，只要出版商想要提供的，都可以在里面找到。Ad Exchange在互联网展示广告的高速发展创新中扮演了极其重要角色，它可以使互联网展示广告市场更加透明，高效，和可控。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/141230_4.jpg&quot; alt=&quot;Ad Exchange&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/141230_5.jpg&quot; alt=&quot;Ad Exchange&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;DMP(Data-Management Platform): 数据管理平台&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;是把分散的数据进行整合纳入统一的技术平台。数据管理平台能够帮助所有涉及广告库存购买和出售的各方管理其数据、更方便地使用第三方数据、增强他们对所有这些数据的理解、传回数据或将定制数据传入某一平台，以进行更好地定位。&lt;/p&gt;

&lt;p&gt;DMP面向广告交易中的各方，专注于数据管理、数据分析、数据调用。以技术为驱动。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/141230_6.jpg&quot; alt=&quot;DMP&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;AdNetwork: 广告网络平台&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;广告网络是一个封闭的网络广告市场，网络业主作为中间环节先向出版商采购广告库存，然后再转售给买家，虽然有时候出版商也可以创建自己的广告网络。在广告业内，这是一个较为广泛的概念。是一种介于想出售广告空间的网站与想在网站上刊登广告的广告主之间的平台. 比较知名的大型广告网络公司如Google的AdSense。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;补一张互联网广告各主流平台图&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/141230_8.png&quot; alt=&quot;互联网广告各主流平台图&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;补一张互联网广告交易发展历史图&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/141230_9.jpg&quot; alt=&quot;互联网广告交易发展历史图&quot; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>网络广告术语之付费模式</title>
      <link>http://lilifeng.net/blogs/2014/12/29/Advertise-glossary-pay-form/</link>
      <pubDate>Mon, 29 Dec 2014 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>术语</category>
      
      
      <category>广告平台</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2014/12/29/Advertise-glossary-pay-form/</guid>
      <description>&lt;p&gt;##PBI(Pay By Impressions): 按展现计费&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CPM(Cost Per Mille): 千次展现费用&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;CPM更多是一种费用清算方式，表明按照展现收费。网上广告收费最科学的办法是按照有多少人看到你的广告来收费。按访问人次收费已经成为网络广告的惯例。CPM(千人成本)指的是广告投放过程中，听到或者看到某广告的每一人平均分担到多少广告成本。传统媒介多采用这种计价方式。在网上广告，CPM取决于“印象”尺度，通常理解为一个人的眼睛在一段固定的时间内注视一个广告的次数。比如说一个广告横幅的单价是1元/CPM的话，意味着每一千个人次看到这个Banner的话就收1元，如此类推，10，000人次访问的主页就是10元。至于每CPM的收费究竟是多少，要根据以主页的热门程度(即浏览人数)划分价格等级，采取固定费率。国际惯例是每CPM收费从5美元至200美元不等。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;eCPM(effective Cost Per Mille): 有效千次展现费用&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;eCPM是一种指标和数量，表明千次展现成本。
eCPM = 收入/网页展示次数×1000&lt;/p&gt;

&lt;p&gt;##PBE(Pay By Engagements): 按参与计费&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CPC(Cost Per Click): 每次点击费用&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;以每点击一次计费。这样的方法加上点击率限制可以加强作弊的难度，而且是宣传网站站点的最优方式。但是，此类方法就有不少经营广告的网站觉得不公平，比如，虽然浏览者没有点击，但是他已经看到了广告，对于这些看到广告却没有点击的流量来说，网站成了白忙活。有很多网站不愿意做这样的广告，据说，是因为传统媒体从来都没有这样干过。目前Google Adsense就采用此方式。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CPA(Cost Per Acquisition/Action): 每次行动费用&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;CPA计价方式是指按广告投放实际效果，即按回应的有效问卷或定单来计费，而不限广告投放量。CPA的计价方式对于网站而言有一定的风险，但若广告投放成功，其收益也比CPM的计价方式要大得多。广告主为规避广告费用风险，只有当网络用户点击旗帜广告，链接广告主网页后，才按点击次数付给广告站点费用。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CPI(Cost Per Install): 每次安装费用&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;网络广告模式，每成功安装的一个应用程序，开发者/发行商就要支付一定费用。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CPT(Cost Per Try): 每次试玩费用&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;这种模式主要是移动应用渠道营销平台以试玩为付费标准，而不仅仅以应用的显示次数或者联网激活付费;这种方式的特点是按用户使用时长或使用周期计费，可以从根本上杜绝刷流量、激活作弊，是最真实的、有效的营销方式之一。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CPL(Cost Per Leads): 每次引导费用&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;即每次通过特定链接，注册成功后付费的一个常见广告模式。这是我们通常称谓的引导注册，比如“亚洲交友”。一个网络媒体(网站)会包含有数十个甚至成千上万个页面，站点为获得生存，一般都需要在站点投放网络广告。网络广告所投放的位置和价格就牵涉到特定的页面以及浏览人数的多寡。这好比平面媒体(如报纸)的“版位”、“发行量”，或者电波媒体(如电视)的“时段”、“收视率”的概念。&lt;/p&gt;

&lt;p&gt;##PBP(Pay By Purchases): 按购买计费&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CPS(Cost Per Sales): 以实际销售产品数量来换算广告刊登金额&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;即根据每个订单/每次交易来收费的方式。用户每成功达成一笔交易,网站主可获得佣金。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CPP(Cost Per Purchase): 每笔购买费用&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;每购买成本广告主为规避广告费用风险，只有在网络用户点击旗帜广告并进行在线交易后，才按销售笔数付给广告站点费用。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CPO(Cost Per Order): 每笔交易费用&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;即根据每个订单/每次交易来收费的方式。&lt;/p&gt;

&lt;p&gt;##PBT(Pay By Time): 按时间计费&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CPT(Cost Per Time): 按时长计费&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;按时长计费是包时段投放广告的一种形式，广告主选择广告位和投放时间，费用与广告点击量无关。采用这种方式出售广告，网站主决定每一个广告位的价格，广告主自行选择购买时间段，目前可按周或按天购买，成交价就是网站主标定的价格。&lt;/p&gt;

</description>
    </item>
    
    <item>
      <title>网络广告术语之广告形式</title>
      <link>http://lilifeng.net/blogs/2014/12/28/Advertise-glossary-adform/</link>
      <pubDate>Sun, 28 Dec 2014 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>术语</category>
      
      
      <category>广告平台</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2014/12/28/Advertise-glossary-adform/</guid>
      <description>&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Banner: 横幅广告&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;最早的网络广告形式。横幅广告，一个表现商家广告内容的图片，放置在广告商的页面上，是互联网广告中最基本的广告形式。按照互动广告局（Interactive Advertising Bureau）的规范，468×60像素的称为全横幅广告（Full Banner），234×60像素的称为半横幅广告（Half Banner），120×240像素的称为垂直旗帜广告（Vertical Banner）。一般位于页面的最上方，具有较强的视觉冲击力 。现在很多网站都把banner也叫做顶部通栏，或者是顶部小通栏。但是目前横幅/旗帜已经在网站中投放的位置比较随意了，不局限于顶部。&lt;/p&gt;

&lt;p&gt;banner广告在移动平台上是目前最普遍的一种广告模式，通常以横幅形式出现在手机屏幕的上方。开发者在应用中加入一个或多个“互动广告位”代码，即可自动播放平台提供的各种广告，获得额外的广告收益。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/141228_1.png&quot; alt=&quot;横幅广告&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Button\LOGO: 标识广告&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;在网页上出现的企业和产品的标识(商标，C1)等，规格多为120X60Pixies，投放位置常出现在网站首页或二级主页面上。与按钮广告相比，两种广告在表现形式和效果上区别不大，都是引导浏览者与企业沟通的途径。标识广告形象、生动，标识性强，有利于塑造商家晶牌形象。同时点击标识，可链接商家的有关信息或网站。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/141228_2.png&quot; alt=&quot;标识广告&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Full Column: 通栏广告&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;通栏广告是一种具有唯一性的多媒体推广方式，通栏广告展示区在搜索结果列表的上方，企业可以根据需要购买通栏广告，当买家搜索时，购买了通栏广告的企业广告会显示在展示区中。占据主要页面宽度的图片广告，具有极强的视觉效果，是展示品牌形象的非常好的广告形式。目前有贯穿屏幕的通栏，也有半通栏形式。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/141228_3.png&quot; alt=&quot;通栏广告&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Text Link: 文字链广告&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;将这段文字链接的企业网站放置在各大门户网站的相应版块，使浏览者看到并点击则可进入到企业的网站上的一种广告营销方式。文字链接是一种对浏览者干扰最少，但却最有效果的网络广告形式之一。文字链广告的安排位置灵活，它可以出现在页面的任何位置，可以竖排也可以横排，每一行就是一个广告，点击每一行就可以进入相应的广告页面。&lt;/p&gt;

&lt;p&gt;文字链广告相对于图片、动画等广告，不但文件体积小，而且传输速率快。文字链广告由于只是文本，所以广告受众更容易捕捉广告内容。特别是信息量很大的页面，文字链广告直截了当，开门见山，使浏览者一目了然。&lt;/p&gt;

&lt;p&gt;极具成本效益的推广方式，精彩的文字创意同样会收到意想不到的效果固定。对于某些广告主来说，有时文字的表述比图片更能表达广告诉求的内容，而且同样以时间计费，价格相比于其他广告形式较低。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/141228_5.png&quot; alt=&quot;文字链广告&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Picture &amp;amp; Text Link: 图文广告/图文混排&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;静态图片和文字相结合的一种广告形式。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/141228_6.png&quot; alt=&quot;图文广告&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Sky Scraper / Tower Board /Vertical Banner: 摩天轮广告/擎天柱广告&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;擎天柱广告是利用网站页面左右两侧的竖式广告位置而设计的广告形式。这种广告形式可以直接将客户的产品和产品特点详细的说明，并可以进行特定的数据调查、有奖活动。广告特点：它会在浏览全过程中吸引用户的注意力，促使其点击广告。同时，由于其广告面积较大，而且制作成互动格式，因此，可以广泛应用于品牌宣传、产品促销或者市场调查等领域。既满足大曝光量的要求，又不会影响用户的使用习惯。出现在文章页面的两侧，竖型的广告幅面。起到超大LOGO的效果，视觉冲击力极强。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/141228_7.png&quot; alt=&quot;擎天柱广告&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Bi-Sky Scraper: 对联广告&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;对联广告是指利用网站页面左右两侧的竖式广告位置而设计的广告形式。这种广告形式可以直接将客户的产品和产品特点详细的说明，并可以进行特定的数据调查、有奖活动。不干涉使用者浏览页面， 注目焦点集中，有助于吸引访问者点阅，有效地传播广告相关讯息。对联广告的特色是广告页面得以充分伸展，同时不干涉使用者浏览，注目焦点集中。显示时随页面浏览而跟随移动，提供可关闭标志。对联为广告的形式，为各行各业推销产品和服务，传播企业文化和经营理念，树立企业形象。此种形式广告因版面所限，一般表现于1024&lt;em&gt;768及以上分辨率的屏幕上，800&lt;/em&gt;600分辨率下有些用户无法观看。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/141228_8.png&quot; alt=&quot;对联广告&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Picture In Picture/TV-Screen: 大屏幕广告/画中画广告/巨幅广告&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;画中画广告是指在文章里强制加入广告图片，比如在新闻里加入FLASH广告，这些广告和文章混杂在一起，读者有时无法辨认是新闻图片还是广告。即使会辨认，也会分散注意力。该广告将配合客户需要，链接至为客户量身订作的迷你网站。大大增强广告的命中率。
新闻内容页面中出现的大尺寸图片广告，该投放形式使得用户在关注某一类新闻时会看到所投放广告，从而加强广告在用户心目中的印象。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/141228_9.png&quot; alt=&quot;画中画广告&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Full Screen: 全屏广告&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;在用户打开当前网页时强制插入一个广告页面或弹出广告窗口。它们有点类似电视广告，都是打断正常节目的播放，强迫观看。插播式广告有各种尺寸，有全屏的也有小窗口的，而且互动的程序也不同，从静态的到全部动态的都有。浏览者可以通过关闭窗口不看广告(电视广告是无法做到的)，但是它们的出现没有任何征兆，保证您的目标客户群体可以看到您定向投放的全屏幕广告宣传页。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/141228_10.png&quot; alt=&quot;全屏广告&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Moving Icon /Floating: 悬停/漂浮/浮动广告&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;指的是会随鼠标或光标移动的网络广告。最常看到的是所谓浮水印广告，会随着网页拉上拉下，在页面左边或是右边跟着上下移动，吸引浏览者的注意。有些网站会直接在光标后有一段文字或图像跟着鼠标移动，这也属于浮动式广告。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/141228_11.png&quot; alt=&quot;全屏广告&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Crazy Ad/Streaming Ad: 疯狂广告/流媒体广告&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;流媒体广告通过编写流媒体的同步多媒体集成语言，将播放的广告时间、次数、播出形式等参数设定为与播放内容相关，从而实现流式传播。&lt;a href=&quot;http://www.doc88.com/p-692583305816.html&quot;&gt;论文：流媒体广告发展现状及策略分析&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Crazy Ad是雅虎取的名称，其实也就是流媒体这种广告形式。在频道首页下载后出现几秒的大尺寸图片广告，第一时间吸引用户的注意力 ，然后慢慢收缩成一个button，或者是消失。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/141228_4.png&quot; alt=&quot;流媒体广告&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;iCast: 多媒体视窗广告/网视广告&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;是一种不需要受众安装任何插件就可以播放的整合视频、音频、动画图像、双向信息通信和用户交互功能的新一代网络广告解决方案。iCast广告突破了传统Internet广告带宽瓶颈对内容容量的限制，采用了独创的“Transparent Download”（透明下载）技术，利用带宽空闲时在后台进行广告下载，对于用户正常浏览网页的行为没有任何影响。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/141228_12.png&quot; alt=&quot;网视广告&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Video Ad: 视频广告&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;视频广告，分为传统视频广告和移动视频广告两类。传统视频广告是在视频内的广告进行设置和投放，而移动视频广告分为传统贴片广告和In-App视频广告，是指在移动设备内进行的插播视频的模式。
移动视频广告，则主要通过移动互联网在移动设备中（手机、PSP、平板电脑等）所展现的一种方式，其技术主要采用数码及HTML5技术，融合视频、音频、图像及动画，在手机用户开启或退出移动应用等“碎片时间” 来插播视频。移动视频广告主要应用于移动互联网，在移动设备中展示，作为一种新的展示模式，用户正处于慢慢接受的过程，因此，过度频繁的移动视频展示，不仅不能树立品牌效果，还可能导致用户体验受损。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/141228_18.png&quot; alt=&quot;视频广告&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Pre-movie Adverts: 贴片广告/随片广告&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;将企业产品广告或企业形象广告与影片一同拷贝，在电影放映前播出的广告。广告的运营商与电影的制作方、发行方、放映方合作，在每部电影放映前播放客户的品牌广告，它是电影广告最明显最外在的形式，属于电影中的“硬广告”。尽管这种广告形式常常在播放前引起大量观众的唏嘘声，但是调查显示它的传达效果较电视广告有更深刻的观众记忆度。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/141228_19.png&quot; alt=&quot;贴片广告&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;product placement: 植入广告&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;把产品及其服务具有代表性的视听品牌符号融入影视或舞台产品中的一种广告方式，给观众留下相当的印象，以达到营销目的。“植入式广告”是随着电影、电视、游戏等的发展而兴起的一种广告形式，它是指在影视剧情、游戏中刻意插入商家的产品或表示，以达到潜移默化的宣传效果。由于受众对广告有天生的抵触心理，把商品融入这些娱乐方式的做法往往比硬性推销的效果好得多。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/141228_20.png&quot; alt=&quot;植入广告&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Sponserships: 赞助式广告&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;赞助式广告赞助有三种形式：内容赞助，节目赞助，节日赞助。广告主可对自己感兴趣的网站内容或节目进行赞助，或在特别时期（如澳门回归、世界杯）赞助网站的推广活动。赞助式广告一般放置时间较长且无需和其他广告轮流滚动，故有利于扩大页面知名度。广告主若有明确的品牌宣传目标，赞助式广告将是一种低廉而颇有成效的选择。&lt;/p&gt;

&lt;p&gt;赞助式广告确切的说是一种广告投放传播的方式，而不仅仅是一种网络广告的形式．它可能是通栏式广告，弹出式广告等等形式中的一种，也可能是包含很多广告形式的打包计划，甚至是以冠名等方式出现的一种广告形式。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/141228_13.png&quot; alt=&quot;赞助式广告&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Search Engine Ad: 搜索引擎广告&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;搜索引擎广告是指广告主根据自己的产品或服务的内容、特点等，确定相关的关键词，撰写广告内容并自主定价投放的广告。当用户搜索到广告主投放的关键词时，相应的广告就会展示（关键词有多个用户购买时，根据竞价排名原则展示），并在用户点击后按照广告主对该关键词的出价收费，无点击不收费。搜索引擎广告包括关键词广告、竞价排名广告、地址栏搜索广告和网站登陆广告等形式。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/141228_14.png&quot; alt=&quot;搜索引擎广告&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Interstitial Ad: 插屏广告&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;在功能开启、暂停、退出时以半屏或全屏的形式弹出，展示时机巧妙避开用户对应用的正常体验。插屏广告采用了自动广告适配和缓存优化技术，可支持炫酷广告特效，视觉冲击力强，是目前比较有效的精准广告推广形式，比起推送广告，用户可以选择点击或者忽略，不会强制看广告，而且是通过cpa来计费，对开发者来说这是一种比较好的形式，对于广告主来说这种精准的广告推送形式更加有效!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/141228_15.png&quot; alt=&quot;插屏广告&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Splash Ad: 开屏广告&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;开屏广告出现在应用启动时，一般会全屏展现 3～5秒，广告内容无法点击跳转，主要适用于品牌广告。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/141228_21.png&quot; alt=&quot;开屏广告&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Offer Wall: 积分墙广告&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;“积分墙”是在一个应用内展示各种积分任务（下载安装推荐的优质应用、注册、填表等），以供用户完成任务获得积分的页面。是除“广告条”、“插屏广告”外，第三方移动广告平台提供给应用开发者的另一新型移动广告盈利模式。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/141228_16.png&quot; alt=&quot;积分墙广告&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Notification Push: 推送广告&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;通知栏推送技术，是一种通过移动互联网的新型技术，利用碎片时间向智能手机用户通知栏发送广告（碎片时间：包括手机用户非手机操作时间，以及工作、生活、学习之余的闲散、零碎的时间）的技术。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/141228_17.png&quot; alt=&quot;推送广告&quot; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>网络广告术语之一般术语</title>
      <link>http://lilifeng.net/blogs/2014/12/27/Advertise-glossary-general/</link>
      <pubDate>Sat, 27 Dec 2014 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>术语</category>
      
      
      <category>广告平台</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2014/12/27/Advertise-glossary-general/</guid>
      <description>&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Campaign: 广告活动&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Advertising Campaign(广告活动) 指在某一特定市场上为实现某一目标所集中进行的大规模的广告活动, 可以是通过平面印刷品、电视电台、落地活动、互联网及社交平台、移动端等作为载体进行传播更可以是组合, 是广告策略的一种体现。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;impression: 展现或印象&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;放置广告图像的网页每一次显示，就是一次印象。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;PV(Page View): 页面展现&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;页面浏览量，用户每次刷新即被计算一次。一般与Impression展现同意。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;UV(Unique View): 独立访客&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;访问网站或看到广告的一台电脑客户端为一个访客。24小时内相同的客户端只被计算一次。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;IP(Individual IP): 独立IP&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;24小时内相同IP地址之被计算一次。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CTR(Click-Through Rate): 点击率&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;网络广告被点击的次数与访问次数的比例，即Clicks/ Impressions。如果这个页面被访问了100次，而页面上的广告被点击了20次，那么CTR为20%。CTR是评估广告效果的指标之一。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;IO(Insertion Order): 广告订单（加插刊登通知）&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;广告主发交媒体刊登广告的订单，也称”发稿单”。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;MFC(Media Flow Chart): 媒介排期表&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;在4A中指粗略的排期，只规定对每个媒体的预算、总体时间段等粗略的信息&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;MP(Media Plan): 媒介排期表（详）&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;在4A中指详细的排期&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;IGA(In-Game Advertising): 游戏内广告&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;是指在游戏中的嵌入式商业广告. 通常分为内嵌式、外挂式和独立交互式三种.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Landing Site: 点击跳转网站&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;广告点击跳转到的目标站点。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Tracking pixel: 监测像素&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;通常是 1x1 的透明像素图片,通常在 html 上下文中配合JavaScript 使用,可以灵活实现各类数据监测。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;UA(User Agent): 用户代理&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;一个特殊字符串头,使得服务器能够识别客户使用的操作系统及版本、CPU 类型、浏览器及版本、浏览器渲染引擎、浏览器语言、浏览器插件等。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;IMEI(International Mobile Equipment Identity): 国际移动设备身份码&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Android上通用的设备唯一标识符。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;UDID(Unique Device Identifier): 苹果 iOS 操作系统唯一设备身份识别码&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;IDFA(Identifier for Advertisers): 广告主识别码&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;苹果对 iOS 6 以上版本的设备随机分配的匿名识别码。&lt;/p&gt;

&lt;p&gt;`DUID(Device_Unique_ Identifier): 微软 WP 操作系统唯一设备身份识别码。&lt;/p&gt;

</description>
    </item>
    
    <item>
      <title>PubNative发布世界上首个满足专业需求的“原生广告适配器”</title>
      <link>http://lilifeng.net/blogs/2014/12/23/adnews-pubnative/</link>
      <pubDate>Tue, 23 Dec 2014 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>市场</category>
      
      
      <category>广告平台</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2014/12/23/adnews-pubnative/</guid>
      <description>&lt;p&gt;原文  &lt;a href=&quot;http://www.adexchanger.cn/tech-company/9903.html&quot;&gt;http://www.adexchanger.cn/tech-company/9903.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;前Motility Ads GM 兼Co-Founder 加入原生 SSP 管理团队&lt;/p&gt;

&lt;p&gt;柏林/旧金山/首尔- PubNative,总部位于柏林的原生广告供应方平台，今天发布世界上首个移动原生广告适配器，使所有的移动广告网络以及需求方平台可以访问原生流量。另外，PubNative正式宣布前 Motility Ads 总经理Eddie de Guia作为联合创始人兼总经理加入本公司，负责公司策略制定，PubNative 正在经历快速发展并居于移动原生广告创新的前沿。&lt;/p&gt;

&lt;p&gt;PubNative 的移动原生适配器技术使用应用商店的信息和额外的定制化素材，使广告内容更丰富，并制定适合广告载体的广告单元。通过这种技术，PubNative 成为了首个通过API 将完全定制化的广告单元和可拓展性专业需求以及视频广告结合在一起的供应方平台。该技术完全支持IAB的OpenRTB V2.3的原生广告标准，同时也使任何暂时不满足该标准的需求方可以访问原生流量。&lt;/p&gt;

&lt;p&gt;“市面上有90%以上的移动流量需求方不支持原生广告形式 ”，PubNative 联合创始人 Ionut Ciobotaru指出。“我们的技术通过使所有的需求方能轻易的访问原生流量而解决了这一难题”。同时，开发者更大范围的从多样化以及相关的原生广告中获利，从而提高广告的相关性以及eCPMs。&lt;/p&gt;

&lt;p&gt;Elad Natanson, 应用程序分发平台Appnext创始人证实：“PubNative 的适配器技术可以让我们的广告客户通过必要的资源丰富他们的广告以扩大全球分销量，从而获得更广阔的优质移动原生流量。&lt;/p&gt;

&lt;p&gt;据相关报道，PubNative已经宣布Eddie de Guia 作为联合创始人兼总经理。Eddie de Guia带来了超过10年的广告技术行业工作经验;他曾在各种广告技术公司担任领导角色，目前是移动营销协会的董事会成员。他之前在被 Freenet收购的Motility Ads担任联合创始人和总经理。Eddie de Guia 将通过自己的行业专业知识，强烈的商业嗅觉和丰富的管理经验结合Ciobotaru的产品理念，来共同推动公司的发展。&lt;/p&gt;

&lt;p&gt;“在不到半年的时间，PubNative的技术已经设立了移动原生广告的标准，并处于行业领先地位，”DeGuia说。 “我很高兴能成为我们高效，创新和有趣的团队的一部分。&lt;/p&gt;

&lt;p&gt;关于PubNative:&lt;/p&gt;

&lt;p&gt;PubNative是移动发行商平台，通过 API为应用和移动网页提供可扩展的，灵活的原生广告。该平台的程序交换系统使开发者可以访问全球超过400家的需求方合作伙伴。PubNative正在申请专利的eCPM最大化算法通过机器学习模式和预测行为分析来优化收益率。该平台还为额外为开发者提供了广告投放和定位功能，以及丰富的流量管理工具。其开发者优先的策略将关注各个行业的每个开发者具体需求，并帮助他们创建无缝的，非侵入性的和高效的广告解决方案。该公司总部设在柏林，在旧金山和首尔设有办事处。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mac+GithubPages+Jekyll配置个人网站</title>
      <link>http://lilifeng.net/blogs/2014/12/17/Mac+GithubPages+Jekyll-site/</link>
      <pubDate>Wed, 17 Dec 2014 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>原生</category>
      
      <category>Mac</category>
      
      <category>Github</category>
      
      <category>Jekyll</category>
      
      <category>WebSite</category>
      
      
      <category>Internet</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2014/12/17/Mac+GithubPages+Jekyll-site/</guid>
      <description>&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;1 Github官网注册账号&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/&quot;&gt;Github.com官网&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;2 下载Github For Mac并登录&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://mac.github.com/&quot;&gt;Mac版Github下载页面&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;3 设置Git方式同步并使用SSH Keys&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://segmentfault.com/q/1010000002169878&quot;&gt;前往此贴查看changsj的回答&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;4 使用Jekyll&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.365dw.cn/616.html&quot;&gt;首先更换GEM源&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jekyllrb.com/&quot;&gt;按照Jekyll首页所列的代码指令开始吧&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;5 从Jekyll建立主页&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Fork Jekyll并clone到桌面吧&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://pages.github.com/&quot;&gt;创建Pages代码库&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;然后通过Github For Mac将&lt;username&gt;.github.io和jekyll代码库下载到你的电脑上，把Jekyll代码库中的sites文件夹内所有文件拷贝到&lt;username&gt;.github.io代码库根目录下&lt;/username&gt;&lt;/username&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;6 绑定域名&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://help.github.com/articles/setting-up-a-custom-domain-with-github-pages/&quot;&gt;官方绑定攻略&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;要(很)注(坑)意(爹)的是，在&lt;a href=&quot;https://help.github.com/articles/tips-for-configuring-an-a-record-with-your-dns-provider/&quot;&gt;绑定根域名&lt;/a&gt;时, 网页上列出的两个IP地址(192.30.252.XXX)都不是你的IP，你需要在命令行知道你自己的http://&lt;username&gt;.github.io的IP是多少，ping之吧。&lt;/username&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;7 编写网站吧&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jekyllrb.com/docs/home/&quot;&gt;Jekyll官方文档&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;8 提交网站&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;由于在Jekyll体系中，_site文件夹是本地服务器Jekyll生成最终html的地方，.sass-cache文件夹是本地的sass缓存文件，都不需要作为代码文件上传到服务器上，因此可以在Github For Mac中设置ignored files为&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;_site/
.sass-cache/&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;9 Enjoy(Painful)!&lt;/code&gt;&lt;/p&gt;

</description>
    </item>
    
    <item>
      <title>易传媒：嵌入式DSP才是主流</title>
      <link>http://lilifeng.net/blogs/2013/09/02/news-emedia-dsp/</link>
      <pubDate>Mon, 02 Sep 2013 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>DSP</category>
      
      <category>News</category>
      
      <category>GPB</category>
      
      <category>RTB</category>
      
      
      <category>广告平台</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2013/09/02/news-emedia-dsp/</guid>
      <description>&lt;blockquote&gt;
  &lt;p&gt;来源：《成功营销》记者 李颖 发布日期 2013-09-02&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;平台角色：DSP、SSP、DMP；&lt;/p&gt;

&lt;p&gt;平台搭建时间：2009年8月推出SSP、2010年6月推出DSP；&lt;/p&gt;

&lt;p&gt;平台对接资源：对接垂直、视频媒体，广告交易平台，主流App及移动网站等优质媒体资源&lt;/p&gt;

&lt;p&gt;平台差异化：多屏整合数字广告平台，覆盖海量优质多屏媒体资源，3年多DSP投放经验&lt;/p&gt;

&lt;p&gt;平台样本客户：品牌客户&lt;/p&gt;

&lt;p&gt;易传媒走以技术及数据为核心的程序化售卖或购买模式，通过建立互联网广告端到端的生态系统，实现供需数据网络化，满足了广告主和媒体主的需求。&lt;/p&gt;

&lt;p&gt;对于互联网广告而言，嵌入式DSP或许还是一个陌生的概念，但在讨论目前为数字广告的供给端和需求端创造价值时，这可能是迄今最清晰有力的一个广告平台，因为它改变了精准营销的表现形式。&lt;/p&gt;

&lt;p&gt;在用嵌入式DSP找到了提升公司价值评估一剂良方之后，易传媒创始人兼CEO闫方军和他所创立的易传媒也顺着这个思路又找到了互联网广告发展的方向：程序化购买。&lt;/p&gt;

&lt;p&gt;##建立端到端生态系统&lt;/p&gt;

&lt;p&gt;真正导致闫方军在观念和实践层面产生突破的，是对易传媒端到端生态链的构建。&lt;/p&gt;

&lt;p&gt;随着数字展示广告的发展，相较三五年前，CPD模式的主导地位正在大幅削弱。闫方军看到了市场正在迅速向CPM/CPC/CPA/CPS发展，广告技术及数据开始发挥关键作用。闫方军对市场的预判是，以技术及数据为核心的程序化售卖或购买平台将重塑整个行业。&lt;/p&gt;

&lt;p&gt;其实，2007年初创的易传媒就已经有竞价购买模式，而且比今天还先进。闫方军回忆道，“我们的竞价购买不只是去竞争CPM价格或者CPC价格。举例，今天假设我有十个客户要来购买这个广告资源，就这个广告位本身有的客户要CPM购买，有的客户要CPC购买，有的客户要CPA购买，甚至有的要CPD购买，我们能判断出不同的出价到底给谁才能使这个广告位的价值得到最大化。”&lt;/p&gt;

&lt;p&gt;后来闫方军自己反思，当时的做法严重脱离市场，这是他创业以来最大的经验教训。但是，闫方军认为，“这个做法未来会有用，这个系统重大的责任是怎么分配资源，满足不同的KPI。”&lt;/p&gt;

&lt;p&gt;2010年9月，闫方军开始部署支持购买模式的基石——DSP。&lt;/p&gt;

&lt;p&gt;作为需求方购买平台，首要任务就是找到自己的“需求方”。在数字广告交易平台上，“需求方”指的就是广告主和代理公司。闫方军决定先从大型4A媒体代理公司入手。闫方军解释道，大型4A媒体代理公司有很多客户资源，在很长的一段时间里，大型4A媒体代理公司没有技术基础。他们要服务客户，要有规模效应，所以他们比广告主更有急迫性。&lt;/p&gt;

&lt;p&gt;“在媒体供给端，我们从2009年开始每年投入800-1000万元的预算给媒体免费使用SSP平台。我们希望把自己的技术平台变成媒体的技术平台。”闫方军说，“而我们也为4A媒体代理公司提供定制式的DSP或ATD（Agency Trading Desk，代理商交易平台）平台。现在我们有一两千个大的品牌广告主，截止到今年2季度全球前五大的广告代理公司中一多半在用易传媒的系统。”&lt;/p&gt;

&lt;p&gt;经过三年多的市场历练，闫方军已经为易传媒构筑了一条由SSP（供应方平台）、DSP（需求方平台）、DMP（数据管理平台）组成的产业生态链。&lt;/p&gt;

&lt;p&gt;“举例来说，我们通过DSP平台与服装品牌电商网站合作，采用包括内容、行为、关键字定向等多种定向手段，多渠道收集用户Cookies,积累第一方数据，细分人群以区隔受众，科学算法多维度优化，为他们提升了50-60%的网站流量和65%的网站注册量。”闫方军说。&lt;/p&gt;

&lt;p&gt;对于超大型、大型、中型、长尾这些不同层次的媒体资源，闫方军采取的策略是不一样的。闫方军举例说，“针对长尾我们就采取跟exchange合作的方式。而大中型的广告资源是我们的核心战场。”&lt;/p&gt;

&lt;p&gt;“比如，媒体端现在用的最基础的部分，这部分在2012年年底每天有8Tb的流量，我们不收钱。但是媒体卖不出去的资源，通过易传媒卖掉的部分，我们要收钱，同样对代理公司或者广告主，当业务开始运转起来的时候，我们会根据合作模式来收取费用。今年5月底，我们开始大范围地推动广告主的需求。”闫方军说。&lt;/p&gt;

&lt;p&gt;在两年半以前，闫方军开始涉足移动互联网广告业务。闫方军说，“如今，易传媒在品牌广告移动方面是全国最大的，到今年二季度末，每天在我们移动平台上推送的广告大概有5.2亿次，今年年底我们希望能够做到8亿次，比去年增长一倍。”&lt;/p&gt;

&lt;p&gt;2012年，易传媒开始程序化购买。闫方军认为，“程序化购买等于‘RTB+GPB’，它才是发展方向，但是不能拔苗助长，互联网广告应该像电子商务卖东西那样卖广告，就像eBay和亚马逊。而我们的目标是专注于品牌。我们要做网络广告里的亚马逊。换句话说，纯粹的效果以及长尾的媒体资源不是我们现在的兴趣所在，如果真要做纯粹效果导向的广告我们宁可在移动互联网上做。”&lt;/p&gt;

&lt;p&gt;根据闫方军的判断，“2016年，1/4的展示广告预算将通过程序化购买。而数字广告程序化购买模式中RTB占10%，GPB占15%，其余75%是人工化购买。三年之内互联网广告市场就会重新洗牌。嵌入式DSP是核心，必须从媒体端到客户端双向嵌入。独立的第三方的DSP不做嵌入式发展，只能沦为技术化的买手角色，很难做大。”&lt;/p&gt;

&lt;p&gt;##供需数据实现网络化&lt;/p&gt;

&lt;p&gt;如果数据是营销者的现金，那么DMP就是银行。&lt;/p&gt;

&lt;p&gt;现在市场中大型的互联网公司，如阿里巴巴、百度、腾讯、新浪都有数据平台DMP。闫方军断言，“未来市场上会看到更多的DMP公司问世。”&lt;/p&gt;

&lt;p&gt;“如今，许多中型网站自己没能力或者没有意愿做DMP，他们要依靠DMP赚钱还不太现实。易传媒的目标很简单，与做SSP的想法一样，先培育市场，DMP让客户免费使用。我们的DMP在媒体端，无论在互联网还是在移动互联网上，我们专注于大型及中型媒体不做的部分。例如，我们跟一些汽车网站做数据交换、分析，以及提供数据管理系统。而对广告主和代理公司投放的数据，在DSP平台上就有积累。在这方面，我们也有跟大型网站合作。”闫方军说。&lt;/p&gt;

&lt;p&gt;大型广告主都有自己的CRM系统，这里面包括个人手机号码、电子邮箱等信息。互联网或者移动互联网上有很多平台，他们有大量的用户注册。“我们要帮助广告主或者代理公司将他们的CRM系统网络化，将需求端和供给端的数据对接起来。”闫方军如是说。&lt;/p&gt;

&lt;p&gt;怎么网络化呢？闫方军举例说，“其中的做法是我们把用户的电子邮箱跟互联网或者移动互联网平台上注册的邮箱进行匹配，这样广告主或者代理公司就知道客户通过哪些渠道购买了他们的产品，而互联网或者移动互联网平台也知道在其网站上购物的是哪些广告主的客户。大的数据不重要，活的数据才重要。我们经过匹配的数据为双方创造了更大的价值。”&lt;/p&gt;

&lt;p&gt;闫方军举例加以说明，“如我们曾经为奥迪做过的案例。一汽奥迪A6L优惠方案利用易传媒DSP整合第三方数据，有效降低54%单位到站受众成本。其中推广的挑战是，如何高效整合并管理海量的人群数据，提升投放效率。我们将第三方数据传输到易传媒DMP，与易传媒平台数据进行整合，并利用DSP，跨平台进行策划，购买及投放，实现了一站式程序化购买流程。”&lt;/p&gt;

&lt;p&gt;闫方军呼吁，“未来第三方数据市场机会巨大。我们希望，像淘宝、腾讯、百度、新浪微博等平台真正逐步开放数据。”闫方军说。&lt;/p&gt;

&lt;p&gt;“RTB市场不会自然变大，需要有一股力量来推动。在供给端能够撬动的中国的公司并不多。像阿里巴巴的天猫有这个能量。就电商而言，电商首选的一定不是去做RTB的展示广告，因为搜索、导航是最大的。如果电商做RTB展示广告也只是补充。”闫方军如是说。&lt;/p&gt;

&lt;p&gt;闫方军充满自信地说，“其实易传媒在做这个事，虽然我们没有阿里巴巴那么大的能量，但是我们有自己的优势。在网游、电商上数以千亿计的品牌广告预算怎么走，这一块还没被撬动。他们有没有需求？有。如果易传媒针对大中型广告主和大中型优质网站广告资源的SSP系统开放变成RTB，我们就有希望撬动RTB购买模式在中国的发展。”&lt;/p&gt;

&lt;p&gt;#（受访者：易传媒创始人兼CEO闫方军）&lt;/p&gt;

&lt;p&gt;##我们平台的差异化优势在哪里？&lt;/p&gt;

&lt;p&gt;易传媒的平台全面实现了产品化，能为客户进行高效率的广告投放，帮助数字广告产业链上的互联网和移动互联网媒体、广告代理公司和广告主自动化管理广告运营。&lt;/p&gt;

&lt;p&gt;##对RTB这两年的发展情况如何看待？&lt;/p&gt;

&lt;p&gt;RTB本身是一种购买的模式，市场规模还不大。对网络广告而言，无论RTB还是GPB，将来可能还有其他购买模式。对数字广告发展至关重要的是好的网络平台应该能支持不同的购买模式，覆盖几乎所有的网络资源，并能实现跨平台购买任何资源。如果平台只做RTB，你会发现中型的或者垂直领域的优质的广告资源不会跟你RTB。&lt;/p&gt;

&lt;p&gt;##对RTB的发展有怎样的预期？&lt;/p&gt;

&lt;p&gt;从技术上，RTB要发展必须提升至DRTB（Dynamic Real Time Bidding，跨不同的出价模式及不同购买平台）才能对应品牌客户；从资源上，不同的资源对应了不同的售卖模式或者购买模式，RTB要想真正发展起来，一定要能够在媒体资源端有所突破。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>在国内配置Yum源的方法</title>
      <link>http://lilifeng.net/blogs/2013/01/15/Configure-YUM-In-China/</link>
      <pubDate>Tue, 15 Jan 2013 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>原生</category>
      
      <category>Linux</category>
      
      
      <category>Internet</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2013/01/15/Configure-YUM-In-China/</guid>
      <description>&lt;p&gt;系统默认的yum 源速度往往不尽人意，为了达到快速安装的目的，在这里修改yum源为国内源。&lt;/p&gt;

&lt;p&gt;上海交通大学yum源&lt;/p&gt;

&lt;p&gt;a. 修改/etc/yum.repos.d/CentOS-Base.repo为：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;# CentOS-Base.repo&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# The mirror system uses the connecting IP address of the client and the&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# update status of each mirror to pick mirrors that are updated to and&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# geographically close to the client.  You should use this for CentOS updates&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# unless you are manually picking other mirrors.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# If the mirrorlist= does not work for you, as a fall back you can try the &lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# remarked out baseurl= line instead.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CentOS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;releasever&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Base&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;amp;arch=$basearch&amp;amp;repo=os&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;baseurl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ftp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sjtu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;edu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;centos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;releasever&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;basearch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gpgcheck&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gpgkey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;///&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;etc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pki&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rpm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gpg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RPM&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;KEY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CentOS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#released updates &lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;updates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CentOS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;releasever&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Updates&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;amp;arch=$basearch&amp;amp;repo=updates&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;baseurl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ftp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sjtu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;edu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;centos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;releasever&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;updates&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;basearch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gpgcheck&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gpgkey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;///&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;etc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pki&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rpm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gpg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RPM&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;KEY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CentOS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#additional packages that may be useful&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extras&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CentOS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;releasever&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Extras&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;amp;arch=$basearch&amp;amp;repo=extras&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;baseurl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ftp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sjtu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;edu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;centos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;releasever&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extras&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;basearch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gpgcheck&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gpgkey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;///&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;etc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pki&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rpm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gpg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RPM&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;KEY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CentOS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#additional packages that extend functionality of existing packages&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;centosplus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CentOS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;releasever&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Plus&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;amp;arch=$basearch&amp;amp;repo=centosplus&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;baseurl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ftp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sjtu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;edu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;centos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;releasever&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;centosplus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;basearch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gpgcheck&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;enabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gpgkey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;///&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;etc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pki&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rpm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gpg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RPM&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;KEY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CentOS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#contrib - packages by Centos Users&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;contrib&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CentOS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;releasever&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Contrib&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;amp;arch=$basearch&amp;amp;repo=contrib&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;baseurl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ftp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sjtu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;edu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;centos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;releasever&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;contrib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;basearch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gpgcheck&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;enabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gpgkey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;///&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;etc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pki&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rpm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gpg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RPM&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;KEY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CentOS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;或者可以到这个链接下载：
&lt;a href=&quot;/file/CentOS-Base.repo&quot;&gt;CentOS-Base.repo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;关于变量&lt;/p&gt;

&lt;p&gt;$releasever：代表发行版的版本，从[main]部分的distroverpkg获取，如果没有，则根据redhat-release包进行判断。&lt;/p&gt;

&lt;p&gt;$arch：cpu体系，如i686,athlon等&lt;/p&gt;

&lt;p&gt;$basearch：cpu的基本体系组，如i686和athlon同属i386，alpha和alphaev6同属alpha。&lt;/p&gt;

&lt;p&gt;b. 导入GPG KEY&lt;/p&gt;

&lt;p&gt;yum 可以使用gpg 对包进行校验，确保下载包的完整性，所以我们先要到各个repository 站点找到gpg key，一般都会放在首页的醒目位置，一些名字诸如RPM-GPG-KEY-CentOS-5 之类的纯文本文件，把它们下载下来，然后用rpm –import RPM-GPG-KEY-CentOS-5 命令将key 导入。&lt;/p&gt;

&lt;p&gt;c. 执行yum 命令&lt;/p&gt;

&lt;p&gt;其他国内yum源列表如下：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;企业贡献：&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;搜狐开源镜像站：http://mirrors.sohu.com/&lt;/p&gt;

&lt;p&gt;网易开源镜像站：http://mirrors.163.com/&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;大学教学：&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;北京理工大学：&lt;/p&gt;

&lt;p&gt;http://mirror.bit.edu.cn (IPv4 only)&lt;/p&gt;

&lt;p&gt;http://mirror.bit6.edu.cn (IPv6 only)&lt;/p&gt;

&lt;p&gt;北京交通大学：&lt;/p&gt;

&lt;p&gt;http://mirror.bjtu.edu.cn (IPv4 only)&lt;/p&gt;

&lt;p&gt;http://mirror6.bjtu.edu.cn (IPv6 only)&lt;/p&gt;

&lt;p&gt;http://debian.bjtu.edu.cn (IPv4+IPv6)&lt;/p&gt;

&lt;p&gt;兰州大学：http://mirror.lzu.edu.cn/&lt;/p&gt;

&lt;p&gt;厦门大学：http://mirrors.xmu.edu.cn/&lt;/p&gt;

&lt;p&gt;清华大学：&lt;/p&gt;

&lt;p&gt;http://mirrors.tuna.tsinghua.edu.cn/ (IPv4+IPv6)&lt;/p&gt;

&lt;p&gt;http://mirrors.6.tuna.tsinghua.edu.cn/ (IPv6 only)&lt;/p&gt;

&lt;p&gt;http://mirrors.4.tuna.tsinghua.edu.cn/ (IPv4 only)&lt;/p&gt;

&lt;p&gt;天津大学：http://mirror.tju.edu.cn/&lt;/p&gt;

&lt;p&gt;中国科学技术大学：&lt;/p&gt;

&lt;p&gt;http://mirrors.ustc.edu.cn/ (IPv4+IPv6)&lt;/p&gt;

&lt;p&gt;http://mirrors4.ustc.edu.cn/&lt;/p&gt;

&lt;p&gt;http://mirrors6.ustc.edu.cn/&lt;/p&gt;

&lt;p&gt;东北大学：&lt;/p&gt;

&lt;p&gt;http://mirror.neu.edu.cn/ (IPv4 only)&lt;/p&gt;

&lt;p&gt;http://mirror.neu6.edu.cn/ (IPv6 only)&lt;/p&gt;

&lt;p&gt;电子科技大学：http://ubuntu.uestc.edu.cn/&lt;/p&gt;

</description>
    </item>
    
    <item>
      <title>HTTP头字段简介</title>
      <link>http://lilifeng.net/blogs/2012/06/03/http-headers/</link>
      <pubDate>Sun, 03 Jun 2012 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>http</category>
      
      
      <category>Internet</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2012/06/03/http-headers/</guid>
      <description>&lt;ul&gt;
  &lt;li&gt;Accept：告诉WEB服务器自己接受什么介质类型，&lt;em&gt;/&lt;/em&gt; 表示任何类型，type/* 表示该类型下的所有子类型，type/sub-type。&lt;/li&gt;
  &lt;li&gt;Accept-Charset： 浏览器申明自己接收的字符集&lt;/li&gt;
  &lt;li&gt;Accept-Encoding： 浏览器申明自己接收的编码方法，通常指定压缩方法，是否支持压缩，支持什么压缩方法（gzip，deflate）&lt;/li&gt;
  &lt;li&gt;Accept-Language：浏览器申明自己接收的语言&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;语言跟字符集的区别：中文是语言，中文有多种字符集，比如big5，gb2312，gbk等等。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;Accept-Ranges：WEB服务器表明自己是否接受获取其某个实体的一部分（比如文件的一部分）的请求。bytes：表示接受，none：表示不接受。&lt;/li&gt;
  &lt;li&gt;Age：当代理服务器用自己缓存的实体去响应请求时，用该头部表明该实体从产生到现在经过多长时间了。&lt;/li&gt;
  &lt;li&gt;Authorization：当客户端接收到来自WEB服务器的 WWW-Authenticate 响应时，用该头部来回应自己的身份验证信息给WEB服务器。&lt;/li&gt;
  &lt;li&gt;Cache-Control：请求：no-cache（不要缓存的实体，要求现在从WEB服务器去取）&lt;/li&gt;
  &lt;li&gt;max-age：（只接受 Age 值小于 max-age 值，并且没有过期的对象）&lt;/li&gt;
  &lt;li&gt;max-stale：（可以接受过去的对象，但是过期时间必须小于 max-stale 值）&lt;/li&gt;
  &lt;li&gt;min-fresh：（接受其新鲜生命期大于其当前 Age 跟 min-fresh 值之和的缓存对象）&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;响应：public(可以用 Cached 内容回应任何用户)&lt;/p&gt;

  &lt;p&gt;private（只能用缓存内容回应先前请求该内容的那个用户）&lt;/p&gt;

  &lt;p&gt;no-cache（可以缓存，但是只有在跟WEB服务器验证了其有效后，才能返回给客户端）&lt;/p&gt;

  &lt;p&gt;max-age：（本响应包含的对象的过期时间）&lt;/p&gt;

  &lt;p&gt;ALL: no-store（不允许缓存）&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;Connection：请求：close（告诉WEB服务器或者代理服务器，在完成本次请求的响应后，断开连接，不要等待本次连接的后续请求了）。&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;keepalive（告诉WEB服务器或者代理服务器，在完成本次请求的响应后，保持连接，等待本次连接的后续请求）。&lt;/p&gt;

  &lt;p&gt;close（连接已经关闭）。&lt;/p&gt;

  &lt;p&gt;keepalive（连接保持着，在等待本次连接的后续请求）。&lt;/p&gt;

  &lt;p&gt;Keep-Alive：如果浏览器请求保持连接，则该头部表明希望 WEB 服务器保持连接多长时间（秒）。例如：Keep-Alive：300&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;Content-Encoding：WEB服务器表明自己使用了什么压缩方法（gzip，deflate）压缩响应中的对象。例如：Content-Encoding：gzip&lt;/li&gt;
  &lt;li&gt;Content-Language：WEB 服务器告诉浏览器自己响应的对象的语言。&lt;/li&gt;
  &lt;li&gt;Content-Length： WEB 服务器告诉浏览器自己响应的对象的长度。例如：Content-Length: 26012&lt;/li&gt;
  &lt;li&gt;Content-Range： WEB 服务器表明该响应包含的部分对象为整个对象的哪个部分。例如：Content-Range: bytes 21010-47021/47022&lt;/li&gt;
  &lt;li&gt;Content-Type： WEB 服务器告诉浏览器自己响应的对象的类型。例如：Content-Type：application/xml&lt;/li&gt;
  &lt;li&gt;ETag：就是一个对象（比如URL）的标志值，就一个对象而言，比如一个 html 文件，如果被修改了，其 Etag 也会别修改，所以ETag 的作用跟 Last-Modified 的作用差不多，主要供 WEB 服务器判断一个对象是否改变了。比如前一次请求某个 html 文件时，获得了其 ETag，当这次又请求这个文件时，浏览器就会把先前获得的 ETag 值发送给WEB 服务器，然后 WEB 服务器会把这个 ETag 跟该文件的当前 ETag 进行对比，然后就知道这个文件有没有改变了。&lt;/li&gt;
  &lt;li&gt;Expired：WEB服务器表明该实体将在什么时候过期，对于过期了的对象，只有在跟WEB服务器验证了其有效性后，才能用来响应客户请求。是 HTTP/1.0 的头部。例如：Expires：Sat, 23 May 2009 10:02:12 GMT&lt;/li&gt;
  &lt;li&gt;Host：客户端指定自己想访问的WEB服务器的域名/IP 地址和端口号。例如：Host：rss.sina.com.cn&lt;/li&gt;
  &lt;li&gt;If-Match：如果对象的 ETag 没有改变，其实也就意味著对象没有改变，才执行请求的动作。&lt;/li&gt;
  &lt;li&gt;If-None-Match：如果对象的 ETag 改变了，其实也就意味著对象也改变了，才执行请求的动作。&lt;/li&gt;
  &lt;li&gt;If-Modified-Since：如果请求的对象在该头部指定的时间之后修改了，才执行请求的动作（比如返回对象），否则返回代码304，告诉浏览器该对象没有修改。例如：If-Modified-Since：Thu, 10 Apr 2008 09:14:42 GMT&lt;/li&gt;
  &lt;li&gt;If-Unmodified-Since：如果请求的对象在该头部指定的时间之后没修改过，才执行请求的动作（比如返回对象）。&lt;/li&gt;
  &lt;li&gt;If-Range：浏览器告诉 WEB 服务器，如果我请求的对象没有改变，就把我缺少的部分给我，如果对象改变了，就把整个对象给我。浏览器通过发送请求对象的 ETag 或者 自己所知道的最后修改时间给 WEB 服务器，让其判断对象是否改变了。总是跟 Range 头部一起使用。&lt;/li&gt;
  &lt;li&gt;Last-Modified：WEB 服务器认为对象的最后修改时间，比如文件的最后修改时间，动态页面的最后产生时间等等。例如：Last-Modified：Tue, 06 May 2008 02:42:43 GMT&lt;/li&gt;
  &lt;li&gt;Location：WEB 服务器告诉浏览器，试图访问的对象已经被移到别的位置了，到该头部指定的位置去取。例如：Location：http://i0.sinaimg.cn/dy/deco/2008/0528/sinahome_0803_ws_005_text_0.gif&lt;/li&gt;
  &lt;li&gt;Pramga：主要使用 Pramga: no-cache，相当于 Cache-Control： no-cache。例如：Pragma：no-cache&lt;/li&gt;
  &lt;li&gt;Proxy-Authenticate： 代理服务器响应浏览器，要求其提供代理身份验证信息。Proxy-Authorization：浏览器响应代理服务器的身份验证请求，提供自己的身份信息。&lt;/li&gt;
  &lt;li&gt;Range：浏览器（比如 Flashget 多线程下载时）告诉 WEB 服务器自己想取对象的哪部分。例如：Range: bytes=1173546-&lt;/li&gt;
  &lt;li&gt;Referer：浏览器向 WEB 服务器表明自己是从哪个 网页/URL 获得/点击 当前请求中的网址/URL。例如：Referer：http://www.sina.com/&lt;/li&gt;
  &lt;li&gt;Server: WEB 服务器表明自己是什么软件及版本等信息。例如：Server：Apache/2.0.61 (Unix)&lt;/li&gt;
  &lt;li&gt;User-Agent: 浏览器表明自己的身份（是哪种浏览器）。例如：User-Agent：Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-CN; rv:1.8.1.14) Gecko/20080404 Firefox/2、0、0、14&lt;/li&gt;
  &lt;li&gt;Transfer-Encoding: WEB 服务器表明自己对本响应消息体（不是消息体里面的对象）作了怎样的编码，比如是否分块（chunked）。例如：Transfer-Encoding: chunked&lt;/li&gt;
  &lt;li&gt;Vary: WEB服务器用该头部的内容告诉 Cache 服务器，在什么条件下才能用本响应所返回的对象响应后续的请求。假如源WEB服务器在接到第一个请求消息时，其响应消息的头部为：Content-Encoding: gzip; Vary: Content-Encoding那么 Cache 服务器会分析后续请求消息的头部，检查其 Accept-Encoding，是否跟先前响应的 Vary 头部值一致，即是否使用相同的内容编码方法，这样就可以防止 Cache 服务器用自己 Cache 里面压缩后的实体响应给不具备解压能力的浏览器。例如：Vary：Accept-Encoding&lt;/li&gt;
  &lt;li&gt;Via： 列出从客户端到 OCS 或者相反方向的响应经过了哪些代理服务器，他们用什么协议（和版本）发送的请求。当客户端请求到达第一个代理服务器时，该服务器会在自己发出的请求里面添加 Via 头部，并填上自己的相关信息，当下一个代理服务器收到第一个代理服务器的请求时，会在自己发出的请求里面复制前一个代理服务器的请求的Via 头部，并把自己的相关信息加到后面，以此类推，当 OCS 收到最后一个代理服务器的请求时，检查 Via 头部，就知道该请求所经过的路由。例如：Via：1.0 236.D0707195.sina.com.cn:80 (squid/2.6.STABLE13)&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-http&quot; data-lang=&quot;http&quot;&gt;&lt;span class=&quot;err&quot;&gt;=============================================================================== 
HTTP 请求消息头部实例： 
Host：rss.sina.com.cn 
User-Agent：Mozilla/5、0 (Windows; U; Windows NT 5、1; zh-CN; rv:1、8、1、14) Gecko/20080404 Firefox/2、0、0、14 
Accept：text/xml,application/xml,application/xhtml+xml,text/html;q=0、9,text/plain;q=0、8,image/png,*/*;q=0、5 
Accept-Language：zh-cn,zh;q=0、5 
Accept-Encoding：gzip,deflate 
Accept-Charset：gb2312,utf-8;q=0、7,*;q=0、7 
Keep-Alive：300 
Connection：keep-alive 
Cookie：userId=C5bYpXrimdmsiQmsBPnE1Vn8ZQmdWSm3WRlEB3vRwTnRtW &amp;amp;lt;-- Cookie 
If-Modified-Since：Sun, 01 Jun 2008 12:05:30 GMT 
Cache-Control：max-age=0 &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-http&quot; data-lang=&quot;http&quot;&gt;&lt;span class=&quot;err&quot;&gt;=============================================================================== 
HTTP 响应消息头部实例： 
Status：OK - 200 &amp;amp;lt;-- 响应状态码，表示 web 服务器处理的结果。 
Date：Sun, 01 Jun 2008 12:35:47 GMT 
Server：Apache/2、0、61 (Unix) 
Last-Modified：Sun, 01 Jun 2008 12:35:30 GMT 
Accept-Ranges：bytes 
Content-Length：18616 
Cache-Control：max-age=120 
Expires：Sun, 01 Jun 2008 12:37:47 GMT 
Content-Type：application/xml 
Age：2 
X-Cache：HIT from 236-41、D07071951、sina、com、cn &amp;amp;lt;-- 反向代理服务器使用的 HTTP 头部 
Via：1.0 236-41.D07071951.sina.com.cn:80 (squid/2.6.STABLE13) 
Connection：close&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
    </item>
    
    <item>
      <title>Apache中实现C++ Module【2】</title>
      <link>http://lilifeng.net/blogs/2012/05/02/apache-cpp-mod-2/</link>
      <pubDate>Wed, 02 May 2012 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>Apache</category>
      
      <category>C++</category>
      
      
      <category>Internet</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2012/05/02/apache-cpp-mod-2/</guid>
      <description>&lt;blockquote&gt;
  &lt;p&gt;系列列表：&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;/blogs/2012/05/01/apache-cpp-mod/&quot;&gt;Apache中实现C++ Module【1】&lt;/a&gt;
&lt;a href=&quot;/blogs/2012/05/02/apache-cpp-mod-2/&quot;&gt;Apache中实现C++ Module【2】&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;1 创建.dep文件&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;touch .deps&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;2 创建modules.mk文件&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-basemake&quot; data-lang=&quot;basemake&quot;&gt;DISTCLEAN_TARGETS = modules.mk
static = 
shared = &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;3 写Makefile文件&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-basemake&quot; data-lang=&quot;basemake&quot;&gt;top_srcdir   = ~/codes/apache/httpd/httpd-2.4.12
top_builddir = ~/codes/apache/httpd/httpd-2.4.12
srcdir       = ./src
builddir     = .
VPATH        = .
# a modules Makefile has no explicit targets -- they will be defined by
# whatever modules are enabled. just grab special.mk to deal with this.
include $(top_srcdir)/build/special.mk

APXS=~/publishes/httpd/bin/apxs
MODULE = src/mod_sample.la
SOURCES = src/mod_sample.c
FILEDEPS = 
CC_FLAGS=$(shell apxs -q CFLAGS) $(shell apr-1-config --cppflags) -I./src -I/usr/include/httpd 
LD_FLAGS=-Wl$(shell pkg-config --libs protobuf) $(shell apr-1-config --libs)

all: $(MODULE)
 
debug:
	$(APXS) -S CC=g++ -S CFLAGS=&quot;$(CC_FLAGS) -D_DEBUG -g -O0&quot; $(LD_FLAGS) -c $(SOURCES)
 
$(MODULE): $(SOURCES)
	$(APXS) -S CC=g++ -S CFLAGS=&quot;$(CC_FLAGS)&quot; $(LD_FLAGS) -c $(SOURCES)
 
install: all
	$(APXS) -i $(MODULE) /usr/local/lib/libprotobuf.a
	apachectl restart
 
clean:
	@rm $(MODULE) src/*.o src/*.lo src/*.slo *.o src/gpb/*o&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
    </item>
    
    <item>
      <title>Apache中实现C++ Module【1】</title>
      <link>http://lilifeng.net/blogs/2012/05/01/apache-cpp-mod/</link>
      <pubDate>Tue, 01 May 2012 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>Apache</category>
      
      <category>C++</category>
      
      
      <category>Internet</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2012/05/01/apache-cpp-mod/</guid>
      <description>&lt;blockquote&gt;
  &lt;p&gt;系列列表：&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;/blogs/2012/05/01/apache-cpp-mod/&quot;&gt;Apache中实现C++ Module【1】&lt;/a&gt;
&lt;a href=&quot;/blogs/2012/05/02/apache-cpp-mod-2/&quot;&gt;Apache中实现C++ Module【2】&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;1 首先在&lt;a href=&quot;/blogs/2012/04/29/apache-install/&quot;&gt;Linux系统安装Apache&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2 建立初始代码工作区&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;mkdir -p ~/codes/apache/mods/mod_sample/src
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/codes/apache/mods/mod_sample/src
vi mod_sample.c&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;3 编写mod_sample.c&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;#include &quot;httpd.h&quot;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#include &quot;http_core.h&quot;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#include &quot;http_protocol.h&quot;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#include &quot;http_request.h&quot;&lt;/span&gt;

class Handler
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
public:
	virtual int handle&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;request_rec&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; r&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 0;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;;

class HelloHandler : public Handler
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
public:
	virtual int handle&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;request_rec&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; r&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		// The first thing we will &lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;is write a simple &lt;span class=&quot;s2&quot;&gt;&quot;Hello, world!&quot;&lt;/span&gt; back to the client.
		ap_rputs&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Hello, world!&amp;lt;br/&amp;gt;&quot;&lt;/span&gt;, r&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;;
		&lt;span class=&quot;k&quot;&gt;return &lt;/span&gt;OK;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;;

/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; The handler &lt;span class=&quot;k&quot;&gt;function for &lt;/span&gt;our module.
 &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; This is where all the fun happens!
 &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/

static int example_handler&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;request_rec &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;r&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    /&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; First off, we need to check &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;this is a call &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the &lt;span class=&quot;s2&quot;&gt;&quot;example&quot;&lt;/span&gt; handler.
     &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; If it is, we accept it and &lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;our things, it not, we simply &lt;span class=&quot;k&quot;&gt;return &lt;/span&gt;DECLINED,
     &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; and Apache will try somewhere &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;.
     &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;!r-&amp;gt;handler &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; strcmp&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;r-&amp;gt;handler, &lt;span class=&quot;s2&quot;&gt;&quot;example-handler&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;DECLINED&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;;

	//concrete one handler object and handle the request.
	HelloHandler hh;
	&lt;span class=&quot;k&quot;&gt;return &lt;/span&gt;hh.handle&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;r&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; register_hooks: Adds a hook to the httpd process &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/
static void register_hooks&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;apr_pool_t &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;pool&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    /&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; Hook the request handler &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/
    ap_hook_handler&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;example_handler, NULL, NULL, APR_HOOK_LAST&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; Define our module as an entity and assign a &lt;span class=&quot;k&quot;&gt;function for &lt;/span&gt;registering hooks  &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/

module AP_MODULE_DECLARE_DATA   example_module &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    STANDARD20_MODULE_STUFF,
    NULL,            // Per-directory configuration handler
    NULL,            // Merge handler &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;per-directory configurations
    NULL,            // Per-server configuration handler
    NULL,            // Merge handler &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;per-server configurations
    NULL,            // Any directives we may have &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;httpd
    register_hooks   // Our hook registering &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;4 直接使用apxs编译并安装进apache中&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~/publishes/httpd/bin/apxs -i -a -c -Wc,-lstdc++ -Wc,-xc++ mod_sample.c&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;5 修改apache conf文件以设置hello rewrite 映射关系&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;vi ~/publishes/httpd/conf/httpd.conf&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Directory&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;Location&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&quot;/example&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    SetHandler example-handler
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Location&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;6 重新运行apache以测试接口&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~/publishes/httpd/bin/apachectl restart
curl http://localhost/example&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
    </item>
    
    <item>
      <title>Linux系统安装Apache</title>
      <link>http://lilifeng.net/blogs/2012/04/29/apache-install/</link>
      <pubDate>Sun, 29 Apr 2012 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>Apache</category>
      
      <category>Web</category>
      
      
      <category>Internet</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2012/04/29/apache-install/</guid>
      <description>&lt;p&gt;1 首先安装&lt;a href=&quot;http://apr.apache.org/&quot;&gt;APR&lt;/a&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;mkdir -p ~/codes/apache/apr/
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/codes/apache/apr/
wget http://apache.mirror.cdnetworks.com//apr/apr-1.5.2.tar.gz
tar -xf apr-1.5.2.tar.gz
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;apr-1.5.2
mkdir -p ~/publishes/apr/
./configure --prefix&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; ~&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;/publishes/apr/
make
make install&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;1 安装&lt;a href=&quot;http://apr.apache.org/&quot;&gt;APR-Util&lt;/a&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;mkdir -p ~/codes/apache/apr-util/
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/codes/apache/apr-util/
wget http://apache.mirror.cdnetworks.com//apr/apr-util-1.5.4.tar.gz
tar -xf apr-util-1.5.4.tar.gz
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;apr-util-1.5.4
mkdir -p ~/publishes/apr-util/
./configure --prefix&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; ~&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;/publishes/apr-util/ --with-apr&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; ~&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;/publishes/apr/
make
make install&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;3 安装&lt;a href=&quot;http://www.pcre.org/&quot;&gt;Pcre&lt;/a&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;mkdir -p ~/codes/apache/pcre/
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/codes/apache/pcre/
wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.37.tar.gz
tar -xf pcre-8.37.tar.gz
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;pcre-8.37
mkdir -p ~/publishes/pcre/
./configure --prefix&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; ~&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;/publishes/pcre/
make
make install&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;4 安装&lt;a href=&quot;http://httpd.apache.org/&quot;&gt;Apache&lt;/a&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;mkdir -p ~/codes/apache/httpd/
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/codes/apache/httpd/
wget http://apache.tt.co.kr//httpd/httpd-2.4.12.tar.gz
tar -xf httpd-2.4.12.tar.gz
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;httpd-2.4.12
mkdir -p ~/publishes/httpd/
./configure --prefix&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; ~&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;/publishes/httpd/ --with-apr&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; ~&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;/publishes/apr --with-apr-util&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; ~&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;/publishes/apr-util --with-pcre&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; ~&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;/publishes/pcre
make
make install&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;5 启动Apache&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~/publishes/httpd/bin/apachectl start 
curl http://localhost&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
    </item>
    
    <item>
      <title>你的观点正确吗?</title>
      <link>http://lilifeng.net/blogs/2010/06/08/What-Is-Correct-Thought/</link>
      <pubDate>Tue, 08 Jun 2010 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>原生</category>
      
      
      <category>博文</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2010/06/08/What-Is-Correct-Thought/</guid>
      <description>&lt;p&gt;[Y] 我是个进化论者, 你相信进化论吗?&lt;/p&gt;

&lt;p&gt;[A] 在目前这个认知阶段, 我相信. 其实人们任何时候都不可能知道真理本身, 而只是不断地迂回接近真理. 就好像牛顿发现了几大力学定律, 但是最后还是被爱因斯坦给推翻了. 但是在当时那个认知阶段, 牛顿力学定律是没有一点问题的, 只不过时过境迁我们的大环境和认知水平都有了提升, 于是那个不是很接近真理的理论被更接近真理的理论所替代了.&lt;/p&gt;

&lt;p&gt;[Y] 进化论的基础实际上是自然选择.&lt;/p&gt;

&lt;p&gt;[A] 对, 但是谁知道自然选择一定是最接近真理的. 我们认同这一点是因为我们处在现在这个认知水平, 我们到目前为止所接受的知识和所了解的现象都告诉我们, 自然选择基本上是正确的. 但是这只是现阶段的认知, 没准以后还会出现更接近真理的论点.&lt;/p&gt;

&lt;p&gt;[Y] 那你对现在大部分的理论都不相信咯?&lt;/p&gt;

&lt;p&gt;[A] 实际上我在想, 我这种对任何理论都不全信的这种哲学思想会不会导致我的性格发生变化. 比如说, 对任何事情都报以怀疑的态度去理解, 这样的话我自己都觉得我会失去信仰.&lt;/p&gt;

&lt;p&gt;[Y] 那你觉得你的这种理论是正确的吗?&lt;/p&gt;

&lt;p&gt;[A] 我刚才的论述不是理论, 只是我个人的观点.&lt;/p&gt;

&lt;p&gt;[Y] 那你觉得你的观点正确吗?&lt;/p&gt;

&lt;p&gt;[A] 啊哈, 难道你不觉得我回答正确和回答不正确, 结果都是一样吗? 如果我回答了正确, 那么我回答的那句话本身会成为一个我的观点, 也就是说我认为我的”认为我正确”的观点是正确的, 结果仍然是正确的; 如果我回答了不正确, 那么我回答的那句话依然是我的一个观点, 也就是说我认为我的”认为我不正确”的观点是不正确的, 结果仍然是”我的观点是正确的”..&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>据说是博弈论~~~</title>
      <link>http://lilifeng.net/blogs/2009/07/27/Game-Theory/</link>
      <pubDate>Mon, 27 Jul 2009 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>原生</category>
      
      
      <category>博文</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2009/07/27/Game-Theory/</guid>
      <description>&lt;p&gt;今天工作的时候看到桌上足球群的聊天记录,突然想到了这个问题:&lt;/p&gt;

&lt;p&gt;如果有一个房间里面有4个人,2个人已经做到了桌子上要打麻将,另外两个人心里同时在想”如果3缺1,我就上”, 但都没有表态要去玩.&lt;/p&gt;

&lt;p&gt;结果1:如果此结果持续下去,是否如此僵持.&lt;/p&gt;

&lt;p&gt;映射1:当没有竞争的时候,被动懒惰心理比较严重.&lt;/p&gt;

&lt;p&gt;这时候突然进来了一个人,这个人马上坐到了桌子上,这个时候3缺1了.&lt;/p&gt;

&lt;p&gt;结果2:此时剩下的两人将会彼此竞争&lt;/p&gt;

&lt;p&gt;映射2:物以稀为贵&lt;/p&gt;

&lt;p&gt;结果3:如果当时两人有一人表态或者同时表态,他们就会无竞争入座了.&lt;/p&gt;

&lt;p&gt;映射3:了解的信息越多对自己越有利,还会共赢&lt;/p&gt;

&lt;p&gt;竞争过后,一人上台,4人开打,另外一人在台下等待.&lt;/p&gt;

&lt;p&gt;结果4:台上人由于竞争的关系,一方面限制了顶尖牌型的出现(因为风险很高,失败就下台),另一方面提高了平均胡牌的速度(因为人人都用最保险的方法打牌).&lt;/p&gt;

&lt;p&gt;映射4:在现实中,有可能由于竞争的关系,顶尖的科技不会很容易出现,比别人只高一点点成为主流.&lt;/p&gt;

&lt;p&gt;结果5:台下人对博弈4人了解最多.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>巧合?</title>
      <link>http://lilifeng.net/blogs/2009/07/26/Coincidence/</link>
      <pubDate>Sun, 26 Jul 2009 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>原生</category>
      
      
      <category>博文</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2009/07/26/Coincidence/</guid>
      <description>&lt;p&gt;甲:我前几天想了一个哲学问题,思来想去不知道哪里想不明白&lt;/p&gt;

&lt;p&gt;乙:不敢当啊，探讨探讨&lt;/p&gt;

&lt;p&gt;甲:问:为什么这件事情会发生呢?&lt;/p&gt;

&lt;p&gt;甲:答:因为这件事情已经发生了,这件事情是既定事实,存在即合理,所以这件事情是合理的.&lt;/p&gt;

&lt;p&gt;甲:这中间哪里不对?&lt;/p&gt;

&lt;p&gt;乙:这个问题和“巧合定论”有点相似，那个定论是我自己想出来的.我先说说巧合定论，你看能不能互通&lt;/p&gt;

&lt;p&gt;乙:我们总觉得有些东西很巧合，然后说啊，为什么那么巧阿&lt;/p&gt;

&lt;p&gt;乙:其实真的事那么巧吗？如果这件被认为巧合的事情没有发生，那么我们就不会想到巧合这两个字，这件事情也理所当然的发生了&lt;/p&gt;

&lt;p&gt;乙:但是我们想到了巧合两字，即，我们是在事情发生之后想到的，也就是发生后的定论为巧合，那么这个事情其实不是偶然的&lt;/p&gt;

&lt;p&gt;乙:因为发生了就必然巧合，没有发生就必然不存在巧合&lt;/p&gt;

&lt;p&gt;乙:故巧合是必然的&lt;/p&gt;

&lt;p&gt;甲:牛…&lt;/p&gt;

&lt;p&gt;乙:所以你刚刚说的存在即合理也一样&lt;/p&gt;

&lt;p&gt;乙:跟我思故我在，其实都是一个道理&lt;/p&gt;

&lt;p&gt;甲:http://user.qzone.qq.com/86056701/blog/1230446813&lt;/p&gt;

&lt;p&gt;甲:这个是我以前写的关于缘分的&lt;/p&gt;

&lt;p&gt;甲:和这个也有点相似&lt;/p&gt;

&lt;p&gt;甲:其实你的巧合定论关键就是如何定义巧合这个词,你的巧合定义是假定人们说的都是事实,人们说是巧合,这个事情就真是巧合.有点唯心啊&lt;/p&gt;

&lt;p&gt;乙:难道你还觉得教科书上说的唯物主义之上是正确的？&lt;/p&gt;

&lt;p&gt;乙:你还觉得唯心主义是形而上学的？&lt;/p&gt;

&lt;p&gt;乙:带着怀疑的态度去面对课本知识&lt;/p&gt;

&lt;p&gt;甲:唯心主义,定义了人们的想法处于主要地位&lt;/p&gt;

&lt;p&gt;甲:就讨论巧合这个概念吧&lt;/p&gt;

&lt;p&gt;甲:按照唯物论,这个事情是否是巧合,应该是在某个时间某个地点某些环境(或者说在N维空间内),某一件事情发生的概率&lt;/p&gt;

&lt;p&gt;甲:发生的概率小于某一个值以后,你仍然遇到了,这就是巧合.我感觉啊~~~从理科的思想&lt;/p&gt;

&lt;p&gt;乙:在我眼里这件事情发生的概率分两种，一种是学术上的百分之某个数，另一个是命运上的１００％或０％&lt;/p&gt;

&lt;p&gt;甲:命运上的100%或者0%应该是概率论里面的值域,而百分之某个数应该是概率&lt;/p&gt;

&lt;p&gt;甲:巧合跟值域没关系,而跟概率有关系,因为事情发生与否本来就是是或者否.值域可以是函数的值域,函数可以是连续的,可以是离散的&lt;/p&gt;

&lt;p&gt;乙:如果可以用集合表示值域，那么也就可以是几个点&lt;/p&gt;

&lt;p&gt;甲:所以我们所说的巧合,就是说这件事情的概率低到我们所认为的一个阈值以下&lt;/p&gt;

&lt;p&gt;甲:超出我们对这个事情的平均期望了,我们就会说这个不正常,是巧合.&lt;/p&gt;

&lt;p&gt;甲:就好像买彩票,每个人中一等奖的概率都是1/N!比如说,如果你没中一等奖,你会说这个太难了,因为你预期是不中一等奖&lt;/p&gt;

&lt;p&gt;甲:如果你中了,你会说纯粹是巧合&lt;/p&gt;

&lt;p&gt;乙:那如果我和一等奖每个号码都正正好好差了一位数呢？&lt;/p&gt;

&lt;p&gt;甲:这个概率也是1/N!,你会觉得是巧合&lt;/p&gt;

&lt;p&gt;乙:那如果我正好和一等奖差２个数呢？&lt;/p&gt;

&lt;p&gt;甲:这也是有概率计算的,这个的概率大概比1/N!要大上好几倍&lt;/p&gt;

&lt;p&gt;乙:依此类推，总能找到一个公式来把你手上的彩票和中奖号码套个巧合的帽子&lt;/p&gt;

&lt;p&gt;甲:扔一个硬币,假如正面的概率是49%,反面的概率是49%,中间的概率是2%.如果你扔到正面或者反面你都不会觉得奇怪,但是如果扔到中间你就
会觉得是巧合&lt;/p&gt;

&lt;p&gt;甲:至于概率多少才算巧合,每个人的阈值都不同,所以对同一件事情大家的反应会不同&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>宁做创业狼，不做打工狗</title>
      <link>http://lilifeng.net/blogs/2009/07/02/Fighting-Wolf-Or-Working-Dog/</link>
      <pubDate>Thu, 02 Jul 2009 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      
      <category>博文</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2009/07/02/Fighting-Wolf-Or-Working-Dog/</guid>
      <description>&lt;p&gt;宁做创业狼，不做打工狗中国温州人号称中国最富有的人群，最喜欢挂在嘴边的话就是：“宁愿睡地板，也要做老板”或者“宁愿做生意一个月只赚1000元，不愿打工一月赚3000元”。这些理念相信是他们的长辈在生活中告诫他们的，潜移默化中成为他们心中做事情的原则。&lt;/p&gt;

&lt;p&gt;　　这些原则就是一些理念，这种理念与其他众多地方的思维理念有很大差别的，即便现在有类似的选择，我估计很多朋友恰恰与他们的选择相反。但是这种理念却是很先进的，正是这样的理念使得温州人与众不同，成为中国最富有的人群。&lt;/p&gt;

&lt;p&gt;　　“思路决定出路”！！！&lt;/p&gt;

&lt;p&gt;　　这句话很多人听说过，但是转眼即忘，宁愿去给别人打工，大学时代综合素高质很多的同学，要么拿着一个月一两千的工资，要么刚刚研究生毕业，焦头烂额的去找工作。&lt;/p&gt;

&lt;p&gt;　　如果你认准了要自己创业做生意，坚持做下来比那些考上硕士，博士的人都有出息。回头再说80年代的温州人和四川人。&lt;/p&gt;

&lt;p&gt;　　80年代的温州农民和四川农民都属于最早开始闯荡的人群，温州农民闯荡中国的方式是修理雨伞、钢笔、铁锅，或者倒卖点零用百货，总之到处的流浪。四川农民闯荡的方式是直接去广东打工。80年代敢于出来闯荡的人都是用勇气的人，因为那个时代信息不发达，交通不方便，人们对外面的世界抱以深深的恐惧。四川人和温州人都有勇气和魄力，但是由于思路的不同，走上了不同的发财致富道路。&lt;/p&gt;

&lt;p&gt;　　29年过去了，温州农民已经成为中国最富有的人群，他们掌握了中国最先进的经商技能，他们的财富甚至可以让他们的后代走出国门，到欧洲去经商；而四川农民的第一代打工者已经退出了历史舞台，他们大多在四川老家继续贫寒的生活，而他们的晚辈循着父辈的足迹，继续一窝蜂的拥挤到广州接受老板们的残酷剥削，成为社会最贫穷的一类人。&lt;/p&gt;

&lt;p&gt;　　这说明什么？由于父辈的选择不同，不仅影响自身，而且影响自己的后代！温州农民的艰苦创业让他们自己和后代彻底摆脱了贫穷，而四川农民的辛苦打工换来的是子孙悲无穷无尽的悲哀和贫穷。&lt;/p&gt;

&lt;p&gt;　
    浙江人中出了一个经济学家，很了不起，他总结了浙江人的工作哲学：“宁做创业狼，不做打工狗”，当然这话说的很极端，很多打工的朋友都不乐意听，但是我们仔细想想，还真有点道理呢。&lt;/p&gt;

&lt;p&gt;　　狼为了寻求自由，宁愿独立人格，自由思想，天天奔跑在大草原上，肆意的猎杀牛羊，尽可能的享受大自然提供的一切美味，吃饱后就躺在草地上，什么都不想，享受阳光和自由的空气，他们是草原的主宰，他们有的是尊严。不过当严寒来临时，他们必须学会抗拒暴风雪的寒冷，学会在厚厚的雪堆下面寻找猎物，时常忍受饥饿的痛苦，随时担心自己冻饿而死。狼的生活可谓一半是海水，一半是火焰。&lt;/p&gt;

&lt;p&gt;　　狗的生活恰恰相反，平时狗只能吃主人剩下的残羹冷炙，被主人吆喝着到处忙活，没有自由，没有尊严，只有摇尾乞怜，狗的生活是有保证的，虽然从来吃不到什么美味，但是冬天到来时也不担心挨饿受冻，有主人的屁护，狗们感恩戴德，发誓下一辈子依旧为主人效忠，即便主人肆意的打骂狗们，狗们也多半不敢吭一声，因为听话和驯服是狗们的标志。委曲求全是狗们的标签，为了稳定的饭碗，为了自己老时有一份固定的口粮，一切都认了！&lt;/p&gt;

&lt;p&gt;　　如果把现实生活中的人们进行比较，估计我们大多都是过着狗的生活，稳定安逸，但是永远吃不饱，想离开主人家的狗窝，但是缺乏破釜沉舟的勇气！&lt;/p&gt;

&lt;p&gt;我感到现实中的年轻人的职业选择大多是做打工狗，而不是做创业狼。可能很多朋友会说，刚出校门的学生，哪里有资本和经验去创业呀？最好的选择就是去公司打工几年，储备点经验和资金，然后几年后有机会的话再自己创业。&lt;/p&gt;

&lt;p&gt;　　其实这样的想法证明是很错误的，一个大学生单位工作几年后，不但赚不到创业所需要的钱，更是无法学到创业的经验与技能。打工生涯学到的东西对创业基本上是没有用的，因为两者的角度不同，思考方式不同，得到的经验体会也不同，只能这么说，打工几年后你唯一获得提高的是打工的技术技能，而创业最不需要的就是技术技能了。&lt;/p&gt;

&lt;p&gt;　　更可怕的是，打工几年后，年轻人普遍会丧失创业的激情，丧失初生牛犊不怕虎的勇气，越来越沉湎于单位之中难以自拔，后来创业的念头只能永远的留在心底，成为永久的遗憾。等到年龄到了40多被老板辞退的时候，才后悔20年前为什么不出来自己创业呀！&lt;/p&gt;

&lt;p&gt;　　那么做创业狼的要求究竟高不高？&lt;/p&gt;

&lt;p&gt;　　只要有做创业狼的理念，哪怕口袋里只有100元，照旧可以创业成功！&lt;/p&gt;

&lt;p&gt;　　人家早一辈的温州人出来做生意口袋有几个钱？不是靠换鸡蛋换铁锅赚的第一笔钱嘛。你口袋里只有100元，至少可以在街边摆个地摊，冬天卖点袜子手套什么的，夏天卖点菠萝什么的，资金充足一点后可以搞个烧烤之类的，反正，钱再少，也能走上创业的道路，关键看你想不想做创业狼？&lt;/p&gt;

&lt;p&gt;狼为了寻求自由，宁愿独立人格，自由思想，天天奔跑在大草原上，肆意的猎杀牛羊，尽可能的享受大自然提供的一切美味，吃饱后就躺在草地上，什么都不想，享受阳光和自由的空气，他们是草原的主宰，他们有的是尊严。不过当严寒来临时，他们必须学会抗拒暴风雪的寒冷，学会在厚厚的雪堆下面寻找猎物，时常忍受饥饿的痛苦，随时担心自己冻饿而死。狼的生活可谓一半是海水，一半是火焰。也许这就是狼道???&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;打工人生与创业人生一定是不一样的。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;　　时间长了，打工者的性格与创业者的性格会有越来越大的差别。&lt;/p&gt;

&lt;p&gt;　　我们扪心自问，打工时间长的朋友时不时觉得更加患得患失，害怕外面陌生的世界，害怕失业的危险，心灵变得越来越敏感和脆弱。心态不仅逐渐的疲惫和懒惰，整个人也没有了锐气和精神，只好安慰自己知足长乐，淡漠名利。但是生活变得越来越平庸，家庭的经济负担越来越沉重，房子和孩子教育日渐成为自己脖子上的经济绳索，勒的越来越紧，透不过气来，只好调整自己的心态，让自己逐渐适应城市小爬虫的定位，自己本来就是庸人，庸人何必自扰之，发财是人家的事情，咱没有那命。&lt;/p&gt;

&lt;p&gt;　　最恐惧的第一件事情莫过于听到公司效益不好，要裁员的消息，最要紧的事情和领导搞好关系，坚持学习恭维逢迎拍马屁，入乡随俗嘛。思想麻木了，只好随大流，毕竟饭碗在领导或老板的手心里面，想让你滚蛋，就得滚蛋。&lt;/p&gt;

&lt;p&gt;　　最恐惧的第二件事情，是看到自己年龄的日渐增长，可是自己的工作技能却没有获得任何提高，虽然靠着资历老工资也越来越多，可是看着那些新进来的年轻大学生，生龙活虎的干活，却只要那么一点的工资，老板的敲打在耳边响起，看人家年轻人吃的少干的多，你们这些老革命越老越不行了。难怪，打工生涯的结果是越老越贬值，尤其到了40-50年龄段，简直是事业最悲惨的阶段，时刻濒临深渊，如同趟地雷阵，动辄下岗失业。&lt;/p&gt;

&lt;p&gt;　　有人说过去10年是蓝领工人下岗的高峰期，未来10-20年将是白领工人下岗的高峰期，你一位自己曾经读个大学就是精英了？社会不断进步，你的知识结构，身体素质，职业理念早就不如人家刚毕业的大学生了。老板是现实的，肯定率先在遇到危机时裁掉那些40-50年龄段的白领工人。&lt;/p&gt;

&lt;p&gt;　　所以说你现在有个稳定的工作，你觉得安全，其实等与在你身边按了颗定时炸弹，等到10多年后，它会爆炸，你那时失业的痛苦与代价恐怕要比现在残忍100倍。&lt;/p&gt;

&lt;p&gt;　　一个人创业的成功取决于三商，即我们平时所讲的智商，情商和胆商，但是一个真正的人才，他的三商重要性应该这样 排列：胆商第一，情商第二，智商第三，目前中国教育培养出来的所谓人才是很片面的，仅仅在智商上优人一等，可是情商与胆商根本没有包含在内。而学校淘汰的人群中可能恰恰蕴含了大量的经营人才，所以中国的教育，尤其是高等教育很大程度上是逆淘汰，生产出来的毕业生产品大多是高分低能的庸才，虽然聪明，但是懦弱胆小，不擅交际，社会生存能力自然很低下。”&lt;/p&gt;

&lt;p&gt;　　而聪明的人往往胆子小，而胆子大的人往往不是太聪明。&lt;/p&gt;

&lt;p&gt;　　还有一个有趣的现象是，读书越多的人越聪明，可是书读的越多的人，往往胆子越小，做什么事情都喜欢三思而后行，凡而是那些读书少的人喜欢先行动后思考，但是这些行动力强的人往往率先成功。&lt;/p&gt;

&lt;p&gt;　　从智商角度来衡量，中国目前智力水平最高的一群人，往往是所谓的硕士博士，教授群体，他们大多在高校里工作和生存，但是这些所谓中国最聪明的一群人整体收入水平却不高，现在一个高校的博士年正常收入5万元，硕士4万元，教授也多半不会超过8万元。&lt;/p&gt;

&lt;p&gt;　　这是一个很值得研究的现象：最聪明的群体收入却远远不是最高的，甚至连公司打工的高级白领都不如。&lt;/p&gt;

&lt;p&gt;　　最后我想得出一个结论：学习好没有什么用！&lt;/p&gt;

&lt;p&gt;　　中小学，学习好是为了考上好大学，大学学习好是为了找到一个好工作，可是社会现实是学习好的人群职业生涯收入并不高。&lt;/p&gt;

&lt;p&gt;所以我觉得小孩教育，起码是我的孩子。&lt;/p&gt;

&lt;p&gt;　　我不会强调他学习有多好，只要能跟上主流就可以。&lt;/p&gt;

&lt;p&gt;　　但是我要求他有勇气，有胆量，从小开始培养胆量。&lt;/p&gt;

&lt;p&gt;　　其次我要求他交朋友，擅于和各种类型的小孩交朋友，争取成为人人喜欢的小朋友。&lt;/p&gt;

&lt;p&gt;　　也就是说，我会注意孩子胆商和情商的重点培养，智商的培养，我不会特别关注。&lt;/p&gt;

&lt;p&gt;　　现在的家长恰恰相反，除了重视学习以外，其他一律不管，甚至剥夺小孩的自由权利，不让他们交朋友，不让他们出去玩，要求孩子顺从听话，这样的孩子长大肯定是个聪明的胆小鬼，自私鬼！回到原来的话题，究竟打工还是创业？&lt;/p&gt;

&lt;p&gt;　　其实表面看创业面临的现实风险比打工高很多，可是从长久看，打工带来的风险更高。&lt;/p&gt;

&lt;p&gt;　　创业的风险是失去近几年的预期打工收入，甚至破产后还得赔进去自己借的一部份钱，但是毕竟年轻，能够屡败屡战，从失败中汲取养分和经验，经商水平与能力一次比一次高，逐渐融入经商人士的群体后，眼界和经验日积月累，总有一个量变到质变的突破，只要真正的跨入了生意门，将来的事业基本上一片坦途。钱也越赚越多，财富积累越来越多，自身的价值也能得到最大的体现。&lt;/p&gt;

&lt;p&gt;　　相反，打工生涯持续下来，近几年确实平安无事，可是你其实在不断的贬值和缩水，而不是越来越强健。打工的时间越长，你会越来越心虚，越来越胆怯，10几年后，稍有不慎，就可能被炒掉鱿鱼，失业下岗，你看看那个风险大呢？&lt;/p&gt;

&lt;p&gt;理念决定了你如何选择，选择决定了你踏上哪一条路，走上哪一条路决定了你将来的人生过程和结果。&lt;/p&gt;

&lt;p&gt;　　古人还说：“男怕选错行，女怕嫁错郎”这句话其实很深刻。天下365行，其实行行都能做，但是同样一个人，选择了做生意和选择了上班，将来的区别就很大，真的太大了！&lt;/p&gt;

&lt;p&gt;　　如果你选择了打工生涯，可能你绝对幸运，将来可以做上超金领，年收入不过几十万，如果你很不幸，做了低级白领，也许每个月只有一两千元，猪肉涨价你家估计吃不起猪肉，鸡蛋涨价估计你家得少吃鸡蛋，即便这样卑微的生活，心中还常存恐惧，害怕失业。&lt;/p&gt;

&lt;p&gt;　　
　　如果你选择了创业生涯，可能你绝对的幸运，将来可以做中国富豪级人物，可以动辄捐助几个希望小学，时不时的享受高尔夫和私人游艇；如果你经商能力不行，只能开个杂货店，甚至在菜市场卖个豆腐，白菜什么的，你也能赚个一两千元，和低级白领过差不多的日子。但是你不怕失业，因为每天都有人来买豆腐，买白菜，这又是比白领生活强的地方。&lt;/p&gt;

&lt;p&gt;　　
　　可见不同的理念，不同的选择；不同的结果，不同的人生。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>怎么样一个人生活</title>
      <link>http://lilifeng.net/blogs/2009/05/23/How-Live-Alone/</link>
      <pubDate>Sat, 23 May 2009 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>原生</category>
      
      
      <category>博文</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2009/05/23/How-Live-Alone/</guid>
      <description>&lt;p&gt;下午在等待的时候,和同住的哥们去了附近新开张的台湾菜馆,全部55折可谓是相当的实惠啊,觉得目前55折的时候吃起来还是很爽的,两个人乐颠颠点了4个菜吃到撑爆,也才100块钱… 要是全价估计要200了…还好现在吃的…­&lt;/p&gt;

&lt;p&gt;吃饭的时候说到现在的生活的时候,忽然略有所想…­&lt;/p&gt;

&lt;p&gt;以前浦西的时候整天和朋友们乐乐呵呵开开心心工作,互换生活信息,有个什么大事大家开心的讨论,茶余饭后聊天,散步,晚上还有球可打,那就是生活化的工作.­&lt;/p&gt;

&lt;p&gt;现在在浦东工作,一门心思都在工作上,同事间开玩笑聊天也都是三句话不离本行,而且办公室政治文化日渐抬头,协调,做事,加班成为生活.­&lt;/p&gt;

&lt;p&gt;一不小心看到大厅里面正在播出新闻联播的主题曲,我感慨很多年没听到这个音乐了.于是我们谈到一个理想化的生活是什么:每天白天正常上班,晚上6点下班,路上买点菜6点半开灶,大概7点做好,一边吃一边看新闻联播,吃完收拾完到8点钟,这时候想散步就出去走走,想看电视就宅着看电视,想看书就在书房看看书,想上网就上上网. 这, 才叫生活.­&lt;/p&gt;

&lt;p&gt;于是我陷入沉思, 我, 一个人, 会不会生活呢? ­&lt;/p&gt;

&lt;p&gt;回想起这几个月来到浦东工作的经历,感觉我已经把工作当成了生活, 上次有人问我”那你还有自己的生活吗?”, 现在我才了解, 我一直把工作当成了生活, 真正的生活基本就没有涉及. 也许, 我不会一个人生活. ­&lt;/p&gt;

&lt;p&gt;感谢我妈, 她非常了解这点, 所以她很希望我的身边有个人能照顾我. 但是, 也许我甚至不会生活, 不懂生活.­&lt;/p&gt;

&lt;p&gt;生活?工作?两者如何权衡呢? 这要看我肩上的担子有多重了. 就目前看来,我的工作压力很大, 工作期许也很大, 目标也很大, 因此我才会没有”生活”的工作. 根据我以往的经验, 我完全不适应没有工作的生活. 因此我觉得我是工作大于生活的人, 如果说要给两者定个量,我觉得可能会三七甚至二八分. 也就是说我把平时的时间要分70-80%给工作,剩下的才属于生活,这样我自己才能比较开心. 就目前看来, 如果每天早9到晚12一共15个小时,那么我要工作11-12小时才能满足我开心的标准了… 按照这个结果,很明显我现在很开心…­&lt;/p&gt;

&lt;p&gt;感谢定量分析, 我现在好多了~~~­&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>奔跑续</title>
      <link>http://lilifeng.net/blogs/2009/05/07/Run-Run-Continue/</link>
      <pubDate>Thu, 07 May 2009 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>原生</category>
      
      
      <category>博文</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2009/05/07/Run-Run-Continue/</guid>
      <description>&lt;p&gt;“嘭~~~”，随着每天早上1楼施工发出的200分贝铁锤和电钻噪声在大概7点钟左右准时响起，我被从睡梦中赶了出来，躺在了一个狭小房间的床上。&lt;/p&gt;

&lt;p&gt;思考，辗转，回笼。无奈1楼施工是一个不间断的闹钟，而且是距离比较远，自己没有控制权的闹钟。于是，思考，辗转，回笼，死循环。。。
1/2小时,1/4小时…直到数列达到稳定,我终于彻底清醒.&lt;/p&gt;

&lt;p&gt;在这些天里,我们两个屋子终于还是没有被老鼠攻下来.不止如此,我们还打了两次漂亮的大胜仗,缴获两只老鼠,攻占了客厅.从此客厅无战事.&lt;/p&gt;

&lt;p&gt;工作还是那么忙.不一样的是,绿豆眼昨天居然对我们说了一句有良心的话:”兄弟们,马上我们的milestone就要到了,大家不要太辛苦,晚上一点要早点回去早点休息,最晚9点回去啊…” 从此我天天11点回家…&lt;/p&gt;

&lt;p&gt;夏天到了, 白日延长, 夜幕晚落, 跑步已经成为schedule. 现在已经非常轻松, 实际上,现在只要有空,我会每周跑两次,周三+周六. 现在绕着世纪公园跑一圈已经全然没有难度,准备周三和同事跑一圈,周六自己跑的时候跑两圈. 奔跑其实不是我主要的目的,我真正的目的是为了缓解工作中过大的压力以及我脆弱的全身肌肉筋骨.&lt;/p&gt;

&lt;p&gt;我确实可以从工作中感觉到快乐,只不过就是比较累. 有时候想想,我这么累,但是做了什么? 大型公司有大型公司的规划,非常难以直线上升,要让我永远做小职员,我也不是这样的人. 事业不是说跑一圈跑两圈就可以成功的, 对我来说,事业最需要的不是持之以恒, 而是一份计划书和一份勇气. 是否会离开去接受难以预测的未来. 是我选择我的未来,还是让别人左右我很多年然后再一脚踹开.&lt;/p&gt;

&lt;p&gt;说实话, 有时候被一脚踹开也是一种幸福, 因为我不需要离开的勇气, 需要的仅仅是一份计划书.&lt;/p&gt;

&lt;p&gt;看到一些朋友没日没夜加班加点工作,一些朋友没日没夜悠闲不已休息,一些朋友跳出了圈子马上就有所成就,一些朋友运气很好每年跳槽到最赚钱的公司. 兴趣我所愿, 在兴趣基础上能有更好机会何乐而不为呢? 事在人为.&lt;/p&gt;

&lt;p&gt;路,还是要走的,对于我来说,我需要奔跑. 和第一次奔跑不同, 这次, 我有了目标.&lt;/p&gt;

&lt;p&gt;慢慢地, 我发现跑步的时候前方有了太阳, 我奔跑向太阳~~~&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>相见恨晚的68句话，每句话可以品半辈子</title>
      <link>http://lilifeng.net/blogs/2009/04/25/Those-Words-Worth-Half-Life/</link>
      <pubDate>Sat, 25 Apr 2009 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      
      <category>博文</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2009/04/25/Those-Words-Worth-Half-Life/</guid>
      <description>&lt;p&gt;1，绅士无非就是耐心的狼。&lt;/p&gt;

&lt;p&gt;2，老鼠嘲笑猫的时候，身旁必有一个洞。&lt;/p&gt;

&lt;p&gt;3，女人吻男人是一种幸福，男人吻女人是一种口福。&lt;/p&gt;

&lt;p&gt;4，男人：二十岁的时候，是半成品；三十岁的时候，是成品；四十岁的时候，是精品；五十岁的时候，是极品；六十岁的时候，是样品；七十岁的时候，是纪念品。&lt;/p&gt;

&lt;p&gt;5，站在山顶和站在山脚下的两人，虽然地位不同，但在对方眼里，同样的渺小。&lt;/p&gt;

&lt;p&gt;6，结论就是你懒得再想下去的地方。――路的尽头，仍然是路，只要你愿意走。&lt;/p&gt;

&lt;p&gt;7，使我们不快乐的，都是一些芝麻小事，我们可以躲闪一头大象，却躲不开一只苍蝇。&lt;/p&gt;

&lt;p&gt;8，最好的与最坏的创造了历史，平庸之辈则繁衍了种族。&lt;/p&gt;

&lt;p&gt;9，在这世上惟一件事比别人议论更糟，那就是无人议论你。&lt;/p&gt;

&lt;p&gt;10，一颗将爆的炸弹比一颗已爆的炸弹恐怖得多。&lt;/p&gt;

&lt;p&gt;11，成功便是站起比倒下多一次。&lt;/p&gt;

&lt;p&gt;12，失败并不意味你浪费了时间和生命。失败表明你有理由重新开始。&lt;/p&gt;

&lt;p&gt;13，人生中有时不去冒险比冒险更危险。&lt;/p&gt;

&lt;p&gt;14，所有的人都站在一边并不一定是好事，譬如他们都站在船的一边&lt;/p&gt;

&lt;p&gt;15，许多人爬到了梯子的顶端，却发现梯子架错了墙。&lt;/p&gt;

&lt;p&gt;16，使学生丧失信心是教师最大的犯罪。&lt;/p&gt;

&lt;p&gt;17，十之八九，争论的结果是双方比以前更相信自己绝对正确。&lt;/p&gt;

&lt;p&gt;18，偶然的成功比失败更可怕。&lt;/p&gt;

&lt;p&gt;19，才华其实就是把与人相同的聪明用到与众不同的地方。&lt;/p&gt;

&lt;p&gt;20，状态是干出来的，而不是等出来的。&lt;/p&gt;

&lt;p&gt;21，道歉是为将来再次冒犯打下伏笔。&lt;/p&gt;

&lt;p&gt;22，所谓百依百顺，就是为了某种不可告人的目的在未完成前，所表现的不同寻常的耐心。&lt;/p&gt;

&lt;p&gt;23，所谓儿童不宜，其实就是大人们令人感动地把犯错误的危险留给了自己。&lt;/p&gt;

&lt;p&gt;24，你想以40km/h的速度开车到80岁，还是以80km/h的速度开车到40岁？&lt;/p&gt;

&lt;p&gt;25，在敌人面前，谁先镇定下来，谁就离胜利不远了。&lt;/p&gt;

&lt;p&gt;26，所有的人都是平凡的，有些人因知道这一点而真正成了平凡的人。&lt;/p&gt;

&lt;p&gt;27，乞丐就是一种向你的良心征税的人。&lt;/p&gt;

&lt;p&gt;28，所谓大难不死，就是有了灾祸之后，得到的不是同情，而是莫名其妙的祝贺。&lt;/p&gt;

&lt;p&gt;29，处在社交圈中是一种烦恼，而超脱出来简直是一场悲剧。&lt;/p&gt;

&lt;p&gt;30，厌倦，就是一个人吃完盘子里的食物后对盘子的感情。&lt;/p&gt;

&lt;p&gt;31，参加追悼会的程序常常是，先受一次深刻的人生教育，然后大家一起抽烟喝酒打牌。&lt;/p&gt;

&lt;p&gt;32，知识是一种使求知者吃得越多越觉得饿的粮食。&lt;/p&gt;

&lt;p&gt;33，羞耻心就像人的内衣，必要时脱掉了没什么，关键是为谁脱掉。&lt;/p&gt;

&lt;p&gt;34，爱情是会沉底的，在平淡的日子里，最重要的是经常轻轻晃一晃盛装爱情的“水杯”。&lt;/p&gt;

&lt;p&gt;35，战争：用舌头解不开就用牙齿咬吧！&lt;/p&gt;

&lt;p&gt;36，憎恨别人就像为了逮住一只耗子而不惜烧毁你自己的房子。但耗子不一定逮到了 。&lt;/p&gt;

&lt;p&gt;37，每个人的一生都有许多梦想，但如果其中一个不断搅扰着你，剩下的就仅仅是行动了。&lt;/p&gt;

&lt;p&gt;38，世上只有想不通的人，没有走不通的路。&lt;/p&gt;

&lt;p&gt;39，幸运之神的降临，往往只是因为你多看了一眼，多想了一下，多走了一步。&lt;/p&gt;

&lt;p&gt;40，失败发生在彻底的放弃之后。&lt;/p&gt;

&lt;p&gt;41，所谓敌人，不过是那些迫使我们自己变得强大的人。&lt;/p&gt;

&lt;p&gt;42，胆怯的人在危险前被吓住了；懦弱的人在危险中被吓住了；勇敢的人在危险过后被吓住了。&lt;/p&gt;

&lt;p&gt;43，反腐败的风险常常大于搞腐败的风险。――人大代表的不平。&lt;/p&gt;

&lt;p&gt;44，使人疲惫的不是远方的高山，而是鞋里的一粒沙子。&lt;/p&gt;

&lt;p&gt;45，家庭的幸福需夫妻共同努力，而破坏它，一人就够了。&lt;/p&gt;

&lt;p&gt;46，最了解你的人有时不是你的朋友，而是你的敌人。&lt;/p&gt;

&lt;p&gt;47，你若不想做，会找一个或无数个借口；你若想做，会想一个或无数个办法。&lt;/p&gt;

&lt;p&gt;48，看一个人的心术，看他的眼神；看一个人的身价，看他的对手；看一个人的底牌，看他的朋友。&lt;/p&gt;

&lt;p&gt;49，魅力女人，就是有充分的意志力去抵挡男人的进攻，也有足够多的魅力阻挡男人的撤退。&lt;/p&gt;

&lt;p&gt;50，山盟海誓是一种经常让高山和海洋领受尴尬的重量级承诺。&lt;/p&gt;

&lt;p&gt;51，好女人是一所学校，好男人毕业了可留校任教。&lt;/p&gt;

&lt;p&gt;52，你不理财，财不理你。&lt;/p&gt;

&lt;p&gt;53，不要同一个傻瓜争辩，否则别人会搞不清到底谁是傻瓜。&lt;/p&gt;

&lt;p&gt;54，加班加点，废寝忘食有时很可能是不具备效率和工作能力的表现。&lt;/p&gt;

&lt;p&gt;55，做父母是个专业性很强的职业，可大部分的父母未经任何培训就上岗了。&lt;/p&gt;

&lt;p&gt;56，凡向鳄鱼池内投掷物品者，必须下池自己捡回。――肯尼亚天然动物园告示&lt;/p&gt;

&lt;p&gt;57，当你想丢点什么的时候请想想，千万别丢脸。――成都垃圾箱，果皮箱上语&lt;/p&gt;

&lt;p&gt;58，凡是上了年纪的人，大多是反对的太多，商议的太久，行动的太迟，后悔的太早。&lt;/p&gt;

&lt;p&gt;59，做生意的过程就是一个不断怂恿别人放松警惕，而自己保持高度警惕的过程。&lt;/p&gt;

&lt;p&gt;60，打工者做工，小老板做事，中老板做市，大老板做势――你是哪一种？&lt;/p&gt;

&lt;p&gt;61，成功是一种观念，致富是一种义务，快乐是一种权力。&lt;/p&gt;

&lt;p&gt;62，聪明人能洞察事物未来的发展趋势。他们在发洪水之前养鸭，而不是养鸡。&lt;/p&gt;

&lt;p&gt;63，两种人无药可救：一是不服从命令的人，二是惟命是从的人。&lt;/p&gt;

&lt;p&gt;64，打算开创新事业时，十人中有一两人赞成时就可开始，以免太迟。&lt;/p&gt;

&lt;p&gt;65，买保险――用不上时痛苦，用上时更痛苦。&lt;/p&gt;

&lt;p&gt;66，给猴一棵树，给虎一座山。――用人之道&lt;/p&gt;

&lt;p&gt;67，世上有三种人：一是良心被狗吃了的人，二是良心没被狗吃的人，三是良心连狗都不吃的人。&lt;/p&gt;

&lt;p&gt;68，你可以先知先觉地领导产业，后知后觉地苦苦追赶，或不知不觉地被淘汰。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>《与空姐战斗的日子》——永垂西工大校史的报亭之战&lt;转载&gt;</title>
      <link>http://lilifeng.net/blogs/2009/04/13/NWPU-Airline-Lady-Event/</link>
      <pubDate>Mon, 13 Apr 2009 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      
      <category>博文</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2009/04/13/NWPU-Airline-Lady-Event/</guid>
      <description>&lt;p&gt;转载语: 本来一直不打算转载别人的文章,但是文章好啊,好多同学都转了,为了表示我也是西工大的人,破格转一次吧.&lt;/p&gt;

&lt;p&gt;卷首语：最近网上疯狂流传《飞机上偷摸空姐指南》一文，余闻之不禁窃笑。此文把我的思绪带回到了2001年那个血色的秋天，至今对空乘班的格斗水平记忆犹新。当MM们举起美丽的板砖时我的世界观瞬间崩塌，那横飞的板砖，华丽的粉拳绣腿，以及被轰至渣倒在地上哀号的西工大理科生们–仍然是历历在目，让我们打开这尘封的记忆吧····&lt;/p&gt;

&lt;p&gt;当年空乘mm们军训时的静坐事件，20连的恐龙逆袭，27舍的惊天群P，永垂校史的报亭之战……至今想起还是热血沸腾。打群架不是希罕事哪个学校都有，只是牵扯到空姐的比较少见，估计打破了很多纯洁少年心中的祭坛。那几个被轰至渣的可怜男生绝对不会同意《飞机上偷摸空姐指南》作者的观点（我估计他们今后一辈子坐飞机都会有心理阴影了，可怜的娃啊），上百人的群骂，壮观啊，热血青春……借某老师一句话：“咱西工大9年都闹没这么大动静……”&lt;/p&gt;

&lt;p&gt;第一章：&lt;/p&gt;

&lt;p&gt;华丽入场！宅男的萌思！ 西工大招收第一批空乘，是在2000年。那还是空乘专业相对少见的年代，空姐两字，在俺们滴心目中那是闪闪发光啊。要知道，工大——不管是什么工大——男女比例都相当离谱。我们班28人，女生4人，而且都……我没有故意贬低自己同学的意思，但是，单论外表，真的是不堪入目。&lt;/p&gt;

&lt;p&gt;这就是上个世纪的西工大，一个不适合男人生存的地方。直到招收空乘的消息传出。&lt;/p&gt;

&lt;p&gt;收空乘的消息无异于晴天霹雳。这事儿的意义可不是沙漠里出现绿洲那么简单：这意味着一个和尚庙可能突然变成帝国华击团，或者星见丘西学园，总之一切ACG中的后宫名岛都突然出现在我们脑海里……不，确切的说只是浮现在我一个人的脑海里，那时候看动漫的人不多，估计我的同学们脑海中浮现的是豹房馆娃宫之类的——听起来有点猥琐，但是你要理解这帮憋了几年的大小伙子们的痛苦所在。&lt;/p&gt;

&lt;p&gt;在玫瑰色的幻想和诡异的气氛中，第一届空乘学员开始入学，这也是一切不幸的开始……&lt;/p&gt;

&lt;p&gt;2000年的时候大家都觉得空乘专业稀罕，加之是第一届，种种因素交汇之下，进来了不少极品，比如富家小姐或者问题少女之类的存在。而作为稀罕的“空姐”，作为极度稀缺的美女资源，作为一个全新的专业，她们不可避免的受到了多种照顾与特权——满怀羡慕的普通女生，磨拳擦掌的狼样男生，以及小心翼翼把这第一届空姐当宝呵护的校领导。可惜磨拳擦掌的狼样男生渐渐发现事情并不像想想中的那样美好。时值大学开始扩招，本科生渐渐贬值，而空姐可要稀罕得多。加之空姐们相貌出众，很多从小就是被人宠大的，所以一个个都眼高于顶，为人处世又不知留余地。27 舍是无数男生的滑铁卢，“想打空姐主意，至少硕士以上，本科生靠边站！”这类话也是有的。况且以一个无收入的普通男生，也很难供得起一个空姐的高消费—— 单看看27舍门前每天骆绎不绝的私家车，废柴学生们就可以歇着鸟……空姐的入学，并没有缓解男女比例的矛盾，反而进一步激化。吃不到葡萄的人难免会说葡萄酸，而空姐中的少数极品也确实极能折腾，打胎坐台当二奶的就没消停过——好吧，今天学生坐台不希罕，可那是相对纯洁的2000年，还好死不死地撞上pol.ice叔叔大扫除，更糟的是还有电视台现场采访。&lt;/p&gt;

&lt;p&gt;话说回来，纵然空姐班里有一些极品，一个巴掌还是拍不响的，废柴男生们的确是带着有色眼镜来看她们的——不太好形容，有点类似于看风尘女子的那种感觉，因为空姐们自打入学——不对，是从入学之前开始，就注定了被意淫的命运。&lt;/p&gt;

&lt;p&gt;还有一方面矛盾不可不提的，就是普通的女大学生与空姐们之间的矛盾。女人与女人之间的矛盾很难解释，但却绝对可怕。&lt;/p&gt;

&lt;p&gt;种种怨念的终点，就是军训时的爆发。&lt;/p&gt;

&lt;p&gt;第二章：爆燃！女人的怨念！！&lt;/p&gt;

&lt;p&gt;新生入学一般都是直接军训，而有些时候考虑到各方面因素和课程安排，也可能会把军训调整到大一结束时的暑假进行。空姐的军训，就在第二年的暑假。积攒一年的种种怨念与矛盾，终于在这一刻点燃。&lt;/p&gt;

&lt;p&gt;这不是男人与女人之间的战争，这也不是女人与女人之间的战争，这是极度混乱的群斗……要详细描述这场战争是很困难的，因为情况太过复杂，而且我亦未能见证全部。但是，无论哪一个版本的传说，有两个军训时的连队都是绝对无法回避的，那就是恐龙之20连（理科生女学员连）和空姐之21连。&lt;/p&gt;

&lt;p&gt;当然这种称呼未必公平，20连的mm不见得都是恐龙，21连的空姐们也未必个个都是绝色。不过龙战士之逆袭名声在外，姑且用之。今天我们很难考证到底是谁先动手，可以理解，人类历史上很多战争乒乒乓乓的打了几十年甚至几辈子也说不清到底是谁开的第一枪——不是历史学家太废柴，而且情况太复杂。每次集会，20 连和21连自然是挨边坐，摩擦向来不少，像“个子矮就老实呆着，站什么站。”这类的话21连没少说。甚至还有的放出豪言：没有空姐，西工大的男生怎么活！……空姐的27舍是学校里最好的宿舍，这一年中享受着超越普通学生的优厚待遇。军训拉练时，别的同学几乎都是只带一个军用水壶，空姐们却大包小包，零食，CD，随身听，不像拉练，更像旅游。女生的矛盾，可以从鸡毛蒜皮开始，累积到无以复加；20连和21连的矛盾，说起来也是源远流长。只要积怨够深，一个眼神、一个动作就可以成为火拼的理由，所谓睚眦即杀人，大抵如是。&lt;/p&gt;

&lt;p&gt;学生军训结束时一般有两个必经的仪式：分列式阅兵，以及晚上的合唱比赛——这两件事都很要命。&lt;/p&gt;

&lt;p&gt;合唱比赛是压死骆驼的最后一根稻草。轮到空姐们上台唱的时候，台下一片嘘声，男生们大喝倒彩。根据一些风传的解释，那晚男生们嘘21连是因为白天训练时有几个连受21连羞辱：“看什么看，傻X！”估计空姐们自打入学以来没少承受色狼们的目光洗礼，已经快到暴走的临界点了。加之她们当中脾气大的不乏其人，被人看了不骂回去才怪。那一年里俺也听到过一些仁兄平时在校园里偷眼看空姐们，而被痛骂的传说，而且这样的消息不止一次。&lt;/p&gt;

&lt;p&gt;不过根据政委的推测，这嘘声里应该还要加上男生们的酸葡萄心理，以及这一年里积攒下的怨念。这种喝倒彩的情况，有脾气的人都忍不下，何况这些脾气特大的大小姐们。被嘘的空姐自然没有拿到第一，这还罢了，问题是拿了冠军的，恰恰是她们的宿敌——20连！！！&lt;/p&gt;

&lt;p&gt;合唱比赛的结束，就是第一次静坐事件的开始。比赛结束后，空姐们在东方红广场就地静坐示威，直至深夜才返回27舍。这里要说一下地形：东方红广场的北面是爱生舞台，南面是英才路，周围环绕着宿舍食堂等；爱生舞台即是合唱的表演台，一个连队上台唱歌的时候其他连队就在下面东方红广场上集合。27舍就在爱生舞台的背面，也就是紧挨着东方红广场的北侧。第一次静坐持续到大概晚上一两点钟，不过收工了也不太平。空姐们要生气，可不是坐坐就算。作为爆发的前奏，回到27舍得空姐们把灌满水的饮料瓶从楼上（空姐住在三楼）扔到爱生舞台的顶棚上，还不停的敲暖气管道，一个楼的人都没法睡觉。更有甚者，把脏水从六楼的窗户向外泼，沿用一句经典台词：“空姐发怒了，打雷收衣服啊！”……&lt;/p&gt;

&lt;p&gt;比起后来的一切，这不过是小case，天子之怒，伏尸千里；空姐们要生气，也绝不是坐坐就算。如果你以为空姐们只是像普通学生毕业那般砸砸瓶瓶罐罐就可以发泄妥当，那就大错特错鸟。&lt;/p&gt;

&lt;p&gt;只是当时没有人想到，没有一个人想到。&lt;/p&gt;

&lt;p&gt;第三章：狭路之宿敌！激斗！！&lt;/p&gt;

&lt;p&gt;21连和20连的冲突只是乱世的序曲，真正的暴风雨即将到来……&lt;/p&gt;

&lt;p&gt;（路人甲：不就是几个丫头撒泼吗?）一般的丫头撒泼可到不了这种程度。要撒泼撒到辅导员下跪，撒到校领导全到现场劝说，撒到武警教官采取了肢体方式“检讨”自己直至瘀青擦伤……要知道，静坐那天还是211工程验收。另外不要小瞧女生的战斗力，尤其是群架场合。170的mm某些情况下可以看作185的男人……&lt;/p&gt;

&lt;p&gt;空姐们会夺得第一阶段的胜利。她们相当团结，而且战斗意志高涨，开局必然是轻易地将废柴男生击溃。当然，能否巩固战果就很难说了，绝对数量相差过大。还好，天朝没有搞大逃杀的兴致，所以第二天还是正常的分列式阅兵。&lt;/p&gt;

&lt;p&gt;这个分列式不用多说，各位想必都经历过。但是很诡异的一点是，空姐的方阵走的相当好，却没有拿到优秀方阵奖而给了一个最佳服务奖——即使是从吾等旁观者的角度来看，也有不够公平。而且，矛盾焦点就在“服务”这个词上。分列式汇演上，各连的方阵从主席台经过时广播里都有介绍，是和专业有关的。比如“这是XX系的方阵，他们如何如何如何”。&lt;/p&gt;

&lt;p&gt;轮到空姐方阵，也就是21连经过时，对她们的介绍中有一句是“多次承担了学校的对外接待工作”，因为自打招了空乘之后，人尽其才、物尽其用，但凡学校一些活动、庆典之类的场合，空姐都要出来当花瓶的——大体相当于礼仪小姐了，不管是在校内接待来客访问还是拿出去活动亮相（每年颁发学位证都是一乘务MM站在旁边拿着），一水儿身材窈窕的空姐制服整齐的往那儿一站，闪闪耀眼，那是倍儿有面子，别的学校哪有咱这阵势？&lt;/p&gt;

&lt;p&gt;是的，这句话原本没错，但是我觉得写稿的人还是应该仔细斟酌一下先，因为在这个不纯洁的年代“接待”可以有很黄很暴力的解释，而男人们听到后思维无疑都往胯下走。随着念稿人说出那句“多次承担了学校的对外接待工作”，台下很多连队的男生们顿时放声暴笑起来！&lt;/p&gt;

&lt;p&gt;唉，要知道，空姐们昨儿的火还没消呐。可以想象，伴随着这些笑声，她们怒槽已然全满。怒槽全满的时候，就是暴气、暴种、暴走的时候，就是释放华丽的必杀的时候，就是名垂校史的——报、亭、之、战爆发的时候！&lt;/p&gt;

&lt;p&gt;报亭今日犹在。其实这个报亭只是个普通的报亭，再平凡没有，你在这里只能买到当月的各种杂志和报纸，还不打折。尽管这里毫无特别之处，连AV和盗版碟都买不到，但是，这是通向操场的咽喉要道，战役爆发于此是历史的必然。而且报亭紧挨着6舍。&lt;/p&gt;

&lt;p&gt;6舍，是当时教官们的驻地。&lt;/p&gt;

&lt;p&gt;分列式汇演刚结束，空姐们就涌向了6舍，放心，是要讨个说法，不是找教官们PK。毕竟教官们不是大一的毛头小子，不会跟她们打起来，况且教官们作为专业战斗人员（武警学员警官），要是真打起来也没悬念，也就不会有后面的事情发生。一时间，6舍前面莺莺燕燕、群雌粥粥，而五舍和六舍之间的道路被她们完全封锁。&lt;/p&gt;

&lt;p&gt;第四章：全灭！理科生耻辱之碑西工大！&lt;/p&gt;

&lt;p&gt;历史的车轮，总喜欢借凡人之手开始滚动……&lt;/p&gt;

&lt;p&gt;这时候男主角登场了，其实这一系列事件中并无特定的男主角，只是他不幸成为了天字第一号炮灰。据说他是ZK系的。他要从那条路过，就是从五舍和六舍之间穿过，空姐们已经把路封锁，不允许对方通过——可见空姐们是有战略头脑的，计划停当，分工有序，意志坚强。&lt;/p&gt;

&lt;p&gt;那小子说：“是老师不让过，还是你们不让过？”空姐们说，是我们不让过。那小子颇为不耐，说了句：“你们算个屁啊？”可怜的主角男，你真是不晓得女人的厉害。——是的，虽然那一刻以前我们都不晓得，但是去送死的就是你了！这一句口舌之快的后果就是将近20个女生冲了上去。二十比一！！&lt;/p&gt;

&lt;p&gt;而男方还没清醒过来——谁能想到空姐们会动手而且是群殴？谁以前正视过女人拳脚的威力？谁能在这一瞬间认清局势，而不是在奇怪“怎么会这样”或者犹豫“该不该还手，该不该打女人”？——如果你在这种犹豫中挨了几拳后，就更难做出正确的判断！&lt;/p&gt;

&lt;p&gt;乱拳打死老师傅，何况一名字都没有的所谓主角？当时的情况，除非是以专业格斗家的身手，迅速放倒迎面的对手然后立即突围、再寻求帮手或者打运动战。街头群斗中稍有犹豫，就是一个死字！&lt;/p&gt;

&lt;p&gt;赞美伟大的辅导员——ZHW等几位老师们，若不是老师们把他救出来，我们的主角男就可以穿越到异界去建立后宫了。&lt;/p&gt;

&lt;p&gt;主角男一击脱离，但是事态已然不可控制。21连的空姐们开始追击其他在场的男生们，当时西工大还没有体育生，男生多是戴着高度眼镜的书虫和宅男们，毫无准备的男生们瞬间崩溃，四下奔逃！&lt;/p&gt;

&lt;p&gt;没错！是四下奔逃！四下奔逃的男生们！&lt;/p&gt;

&lt;p&gt;这是西工大历史上最耻辱的一幕！我所拥有的常识在一瞬间崩塌，我的的世界观在一瞬间改变了……女性，并不是弱者……女人的斗魂从来就不逊于男人！&lt;/p&gt;

&lt;p&gt;终章：流放的哀思。&lt;/p&gt;

&lt;p&gt;正所谓：狭巷短兵相接处，杀人如草不闻声。和这惊天一战相比，后面的第二次静坐事件都不算什么了，虽然要说惊险那也是千钧一发。当天正值211工程验收，专家组检查结束，车队前脚刚出学校，空姐们就冲到教学区东门口——请参照地图——至学校南门那一地段，再度开始静坐，同时掏出手机——当年手机在空姐中的普及率还是较高的——打电话给媒体，力图扩大影响。还好错过了211检查组，，不然学校这脸还真丢大了。剩下的战斗说难不难，也就是关门放狗。媒体，不让他们进来就好；空姐，可以慢慢调教。&lt;/p&gt;

&lt;p&gt;估计领导们都被那一战打清醒了，这一次学校的应对相当迅速，杀伐果断不逊于当今圣上。关死大门，封锁现场，在家的校领导全到现场，劝说转移到阶四对话。在阶梯教室里辅导员老师和军训教官违心的做了“检讨”，几位武警学院的教官还采取了肢体方式“检讨”自己……毕竟，已经是暑假了，乱子虽大，也不难办。后面就是放假，个别谈话，调查，集体开会，以及……搬家。&lt;/p&gt;

&lt;p&gt;是的，搬家。距离不见得是良药，但是向来很有效。空姐们被发配到了新校区，包括当年主管学生工作的学生处处长也被打包踢了过去。新校区在沣峪口，背靠秦岭，可以说山清水秀，换个说法也就是荒山野岭，青灯古佛。后来我们航模队活动，去过那里几次。大约一小时车程吧，空气比城里好了不少，天很高，站在校园里，就能看到墙外连绵的远山。建筑都是新的，看起来很干净的感觉；只是没有本校那种熙熙攘攘的热闹，空气中飘着一丝寥落。&lt;/p&gt;

&lt;p&gt;暑假过后，便是新生入学。又有了充满朝气的少年们，军训，适应宿舍，交新的朋友，接受大学的生活方式，然后便是黄叶凋零的秋天。&lt;/p&gt;

&lt;p&gt;然后的然后，在梧桐树下，会有学弟问我——&lt;/p&gt;

&lt;p&gt;“学长，我们学校不是有很多空姐吗？为什么放眼看去全是恐龙？”&lt;/p&gt;

&lt;p&gt;“空姐……”&lt;/p&gt;

&lt;p&gt;我的思绪飘向了秦岭，飘向了那承载南北岁月的山峦。&lt;/p&gt;

&lt;p&gt;“学长？”&lt;/p&gt;

&lt;p&gt;“呃，抱歉走神了。空姐是有的，不过你确定自己足够强壮吗？”&lt;/p&gt;

&lt;p&gt;“强壮？”对方的思路显然滑到了前列腺上，“难道空姐都是天生媚骨，一般的男人扛不住？”&lt;/p&gt;

&lt;p&gt;“……你要这样理解也行，总之，先锻炼好身体，有空我陪你去看。如果你有兴趣，就练习一下格斗技，特别要练好抗击打能力和百米跑。要知道能配上美女的向来只有英雄和勇者啊。”&lt;/p&gt;

&lt;p&gt;是的，秋风吹得动落叶，岁月带不走悲伤。&lt;/p&gt;

&lt;p&gt;美人和英雄都谢幕了……&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>奔跑，奔跑</title>
      <link>http://lilifeng.net/blogs/2009/04/11/Run-Run/</link>
      <pubDate>Sat, 11 Apr 2009 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>原生</category>
      
      
      <category>博文</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2009/04/11/Run-Run/</guid>
      <description>&lt;p&gt;有段时间没来写一段日志了，今天加班，天气良好，写一些最近的感受吧。&lt;/p&gt;

&lt;p&gt;自从搬来浦东，每天早上7点左右被窗外路旁隆隆的运货卡车声，激动的孩提玩耍声，高亢的水果摊主吆喝声，震撼的楼下钻机声这类自然闹钟弄醒，然后试图用被子将我的五官全都蒙住，哪怕自己喘不上气也不想被搅了我的美梦。然而那些声响居然此起彼伏，错落有致，抑扬顿挫，无比和谐，使得我不得不对这些声音以及声音的主人，以及声音主人的祖先肃然起敬，也就只好肃然起床了。感觉就像是运动员赛跑时的哨声，别人已经跑出去了，我能傻站着不动吗？&lt;/p&gt;

&lt;p&gt;我住在A屋，住在B屋的哥们早上非常规律，几点起床几点洗漱几点出门，除非晚上一直被住在C客厅的老鼠们打扰。说到老鼠，就要说到我们小区门口的一个超市，这个联华超市完全颠覆了我对上海联华一直以来建立起来的良好信誉。话说我刚搬过来的时候，我的拖鞋丢了（搬家公司别的不拿，单单拿走了我的拖鞋，有才~~~），于是我去这家附近唯一的杂货超市去买拖鞋，进门一问：有拖鞋吗？答：有。然后匆忙跑去拖鞋区，突然面色紧张回头问我：你买哪种拖鞋？我好奇往里一探，眼前整整齐齐摆放着十几双拖鞋，无奈的是全部都是给豆蔻以下孩童穿的。无独有偶，后来发现屋里客厅住上了老鼠，同事推荐我去买老鼠粘或者老鼠药来“请”走它们，我于是抱着试一试的态度（感谢电视购物~~~）又一次光顾了这家店，结果得到的答复仍然是：没有！！！我慢慢的仔细的认真的环顾了整个超市，眼中充满好奇，这个超市到底卖什么的？&lt;/p&gt;

&lt;p&gt;白天的工作紧张而有序，使得我自己都不能做些其他什么事情，实际上一般也没有其他什么事情。一个项目的清一色纯爷们，带头大哥是个长有一张娃娃脸的奔四大哥，过往经历非常牛X，经常拿出些业界牛人进行评论，小到他自己微软研究院一位长有两个脾精力无限的以往同事，中到清华大学计算机学院的院长大叔，大到国外某位非常聪明非常传奇的图形学鼻祖。带头大哥总是给人很大的压力，当然，主要是我，可能是看我太年轻太气盛太傻了吧，他自己可能有些嫉妒我的这种傻。第一天进入项目的时候就对我说过：“我和我们组其他人都聊过了，他们都是非常厉害的人物，我听你们manager说你非常的聪明，所以我也希望你是一个牛人，别让我失望。。。”，让以前基本上无图形开发经验的我无处藏身；后来听说我住到附近以后，他显得非常高兴，然后看着他自己的屏幕貌似无意的问我：“你知道住得近有什么好处吗？”我答：“我就是为了这个目的”然后他侧着小如绿豆的眼睛看着我，面带奸诈：“那你做好准备了吗？”我颤巍巍：“我做好准备了”接着他面带淫荡的提高音调：“我可没让你做什么事情啊”于是我倒。。。&lt;/p&gt;

&lt;p&gt;顺理成章，加班属于常态，每天晚上10点以前基本上没有离开过办公室，除了吃饭和跑步。每周三下午是跑步时间，路程8公里，公司出发绕世纪公园一周再跑回公司，6点半开跑，大概8点可以回来，同行4人，包括我们部门主管。第一次跑步的时候很兴奋，一路上基本上都在领跑，其实我目前应该没有能够持续以每秒5米的速度跑8公里的体力，但是我在跑步过程中，也感受到了四面而来的巨大压力。和部门主管一起跑，我并不想掉队，我更不想半途而废，不想食言。我一路上一直用喉咙呼吸为了获得更大更多的氧气交换量，偶尔说话为了表示我跑起来很轻松，经常领头是因为我知道一旦落后要赶上就难了。第一次跑不知道路的我，甚至不知道终点是哪里，我到底跑到了哪里，我还有多久可以跑回去，我不知道我还需要坚持多久，我感觉我随时可能停下来，我明白我只要停下来，就全完了。耳边传来队友们阵阵的呼吸声，我不想回头，这很耗费体力。我只有向前方看去，前方的一旁总是世纪公园，不时有些有致的景色从公园的护栏边探出头来看着我们，我没有很多时间将目光放在那些景色上，我也没有时间驻足停留去欣赏她们，我能够给她们的，只有我的不经意间的一瞥，然后继续奔跑。终于，我被主管追上了，在一个桥的上坡路面上，我感觉我被一步步拉开，我感觉我的体力和腿部肌肉已经不足以让我赶上，但是我的意志战胜了我的身体，我的意志强迫我的身体跟上去而不是一下一下被拉开距离，我感觉我的身体确实被强迫加速去追上主管，但是他已经不归我所用了，我看到我下面的肉体在机械的跑步，但是我感觉不到。就在我以为快受不了的时候，我们到了。没感觉啊，不很累啊，继续说话啊，开开玩笑啊，说在路上还在想技术问题啊。接下来的一周每走一步肌肉疼一下，别人都说是长时间不运动，偶尔运动一次就是这样。&lt;/p&gt;

&lt;p&gt;昨天有个人说我到了浦东以后一直都见不到面，我说我很忙，周一到周日，早7晚11，那人在惊叹之时说：“那你还有自己的生活吗？”之后我思考了这个问题很久，没有答案。&lt;/p&gt;

&lt;p&gt;我和小四讨论了半天他自己的未来前程，末了我问他：“你说你做过很多系统的设计，你给你自己做过系统设计吗？”我何尝没有相同的问题。&lt;/p&gt;

&lt;p&gt;有人说运动神经和思维神经不能同时作用，在奔跑的时候基本上是没有很多思维能力的，也许是时候慢跑甚至停下来思考一下，为自己进行一次系统全面的人生设计了。&lt;/p&gt;

&lt;p&gt;当哨声响起，别人鱼贯而出的时候，你会奔跑吗？&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>临汾方言</title>
      <link>http://lilifeng.net/blogs/2009/03/31/Linfen-Languages/</link>
      <pubDate>Tue, 31 Mar 2009 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      
      <category>博文</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2009/03/31/Linfen-Languages/</guid>
      <description>&lt;p&gt;脸—-迷念&lt;/p&gt;

&lt;p&gt;蹲下—–格九哈&lt;/p&gt;

&lt;p&gt;别哭了—–别嚎俩&lt;/p&gt;

&lt;p&gt;看一下—–毛一吓&lt;/p&gt;

&lt;p&gt;睡觉——富吊&lt;/p&gt;

&lt;p&gt;找不见——欣不卓&lt;/p&gt;

&lt;p&gt;挺好—-不歪&lt;/p&gt;

&lt;p&gt;大—–唾&lt;/p&gt;

&lt;p&gt;命—–灭&lt;/p&gt;

&lt;p&gt;汾河—-肥活&lt;/p&gt;

&lt;p&gt;来回—-雷回&lt;/p&gt;

&lt;p&gt;教书—掉副&lt;/p&gt;

&lt;p&gt;厉害—-突念&lt;/p&gt;

&lt;p&gt;爷爷－－－牙&lt;/p&gt;

&lt;p&gt;奶奶－－－虐&lt;/p&gt;

&lt;p&gt;男孩－－－猴&lt;/p&gt;

&lt;p&gt;女孩－－－狗&lt;/p&gt;

&lt;p&gt;累了—-乖啦&lt;/p&gt;

&lt;p&gt;肚子—兔子&lt;/p&gt;

&lt;p&gt;冷—-乐地&lt;/p&gt;

&lt;p&gt;上—朔&lt;/p&gt;

&lt;p&gt;窗户——戳字&lt;/p&gt;

&lt;p&gt;来了?—–雷啦?&lt;/p&gt;

&lt;p&gt;下来—哈来&lt;/p&gt;

&lt;p&gt;西红柿—-洋柿子&lt;/p&gt;

&lt;p&gt;墙—-阕(Qiuo)&lt;/p&gt;

&lt;p&gt;水—-浮&lt;/p&gt;

&lt;p&gt;豆腐—透副&lt;/p&gt;

&lt;p&gt;说话—–佛话&lt;/p&gt;

&lt;p&gt;你就格格子多—-事B&lt;/p&gt;

&lt;p&gt;炕上—阔说&lt;/p&gt;

&lt;p&gt;以前的大厅—铁里&lt;/p&gt;

&lt;p&gt;自行车—-叉子&lt;/p&gt;

&lt;p&gt;神佛—-牙牙&lt;/p&gt;

&lt;p&gt;人去世了—-木俩&lt;/p&gt;

&lt;p&gt;小狗小猫—-猫娃子,狗娃子&lt;/p&gt;

&lt;p&gt;鸡蛋—-敌叹&lt;/p&gt;

&lt;p&gt;土豆—山YUE 探&lt;/p&gt;

&lt;p&gt;红薯—红副&lt;/p&gt;

&lt;p&gt;今天—机嘛个&lt;/p&gt;

&lt;p&gt;看不见—-毛不挫&lt;/p&gt;

&lt;p&gt;干什么去啊?—制啥家诺?&lt;/p&gt;

&lt;p&gt;看着点路,别瞎瞎地摔着喽—毛着点路,be哈哈地fai喽&lt;/p&gt;

&lt;p&gt;厕所—茅池(ci)&lt;/p&gt;

&lt;p&gt;吃饭—活脱(喝汤)&lt;/p&gt;

&lt;p&gt;串门—学门甲&lt;/p&gt;

&lt;p&gt;波子朔有俩个也须娃儿,真也须娃跟尾也须娃儿佛:”够，你朝喔岸挪一哈”.为也须娃儿佛:”厄不,再挪—-秋叠子载哈起啦！”真也须娃佛:”木事，有厄里!”为也须瓦佛：“哼，就你喔米年~~~一ean(鹅暗)子几几恰吧”真业鸟火啦：“咋俩？你个乃炮地，哈死你俩！你求新滴老子卷你哩！！！！厄北你个所跌子地，你把峨阔笑死俩，小心鹅把泥地—-嘀咕子割喽!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>生产力VS生产关系</title>
      <link>http://lilifeng.net/blogs/2009/03/15/Productivity-And-Production-Relations/</link>
      <pubDate>Sun, 15 Mar 2009 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>原生</category>
      
      
      <category>博文</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2009/03/15/Productivity-And-Production-Relations/</guid>
      <description>&lt;p&gt;丁：所以只能在美国人的公司里搞科研&lt;/p&gt;

&lt;p&gt;丁：给美国人打工&lt;/p&gt;

&lt;p&gt;丁：呵呵，其实人家说的很清楚&lt;/p&gt;

&lt;p&gt;丁：现在的科研不可能单枪匹马了&lt;/p&gt;

&lt;p&gt;乙：恩&lt;/p&gt;

&lt;p&gt;乙：科研都是大项目&lt;/p&gt;

&lt;p&gt;乙：一个人能搞出来除非你是爱因斯坦&lt;/p&gt;

&lt;p&gt;丁：本科小兵，硕士小队长，博士大队长而已&lt;/p&gt;

&lt;p&gt;丁：也就理论学界可以搞搞英雄主义&lt;/p&gt;

&lt;p&gt;丁：在咱们实践界&lt;/p&gt;

&lt;p&gt;丁：都是大工程……&lt;/p&gt;

&lt;p&gt;乙：感觉在学校里面那些人，每天工作不超过4小时&lt;/p&gt;

&lt;p&gt;丁：安逸啊&lt;/p&gt;

&lt;p&gt;丁：相比之下人家单位工资比我高多了&lt;/p&gt;

&lt;p&gt;丁：在学校，只要你努努力&lt;/p&gt;

&lt;p&gt;丁：比外面整的爽多了&lt;/p&gt;

&lt;p&gt;丁：现在，就是要做服务业&lt;/p&gt;

&lt;p&gt;丁：特别是教育业&lt;/p&gt;

&lt;p&gt;乙：其实服务业，教育业都是为了实业服务的，真正能够赚钱的是做实业的&lt;/p&gt;

&lt;p&gt;乙：然后服务业和教育业赚实业者的钱&lt;/p&gt;

&lt;p&gt;乙：就相当于采矿=实业，锻造=服务业&lt;/p&gt;

&lt;p&gt;丁：这个，不同意&lt;/p&gt;

&lt;p&gt;丁：因为，做实业的太多了&lt;/p&gt;

&lt;p&gt;丁：而且成本太高&lt;/p&gt;

&lt;p&gt;丁：这个，我们是不用考虑的&lt;/p&gt;

&lt;p&gt;乙：还记得马克思主义怎么说的吗？&lt;/p&gt;

&lt;p&gt;乙：生产力决定生产关系&lt;/p&gt;

&lt;p&gt;丁：实业是土，服务业是草，是花&lt;/p&gt;

&lt;p&gt;丁：我说的是提高生活水平，不是说做事业&lt;/p&gt;

&lt;p&gt;丁：做事业第一步要完成资本的原始积累&lt;/p&gt;

&lt;p&gt;丁：这个也是马克思主义说的&lt;/p&gt;

&lt;p&gt;乙：对啊，生产力决定生产关系，你的生产力高了你的关系提高了，关系提高基本上就代表你的生活水平高了&lt;/p&gt;

&lt;p&gt;丁：生产力是说社会平均生产力&lt;/p&gt;

&lt;p&gt;乙：用在个人也不为错&lt;/p&gt;

&lt;p&gt;丁：所有实业的平均值&lt;/p&gt;

&lt;p&gt;丁：服务业的用处就是以最高生产力为参考，努力提升次高生产力&lt;/p&gt;

&lt;p&gt;乙：生产力决定生产关系是说你的能力高了能做的事情多了效率高了，那么你的生产关系在提升，为更多的人创造价值，和更多的人合作，发展
到你领导更多的人&lt;/p&gt;

&lt;p&gt;丁：教育培训业的目的就是为了提升这个&lt;/p&gt;

&lt;p&gt;乙：最后当你能对更多人造成影响的时候，你做出的一点点努力其实就会使你生产力得到大幅提升&lt;/p&gt;

&lt;p&gt;丁：同意&lt;/p&gt;

&lt;p&gt;乙：这就是他们的关系&lt;/p&gt;

&lt;p&gt;丁：影响力决定生产力？&lt;/p&gt;

&lt;p&gt;丁：你能这么说吗？&lt;/p&gt;

&lt;p&gt;乙：影响力+现有生产力=产生的生产力&lt;/p&gt;

&lt;p&gt;乙：是个迭代过程&lt;/p&gt;

&lt;p&gt;丁：影响力决定你改变生产力的能力&lt;/p&gt;

&lt;p&gt;乙：影响力就是生产关系&lt;/p&gt;

&lt;p&gt;丁：是个嵌套关系&lt;/p&gt;

&lt;p&gt;乙：新生产力=旧生产力+生产关系&lt;/p&gt;

&lt;p&gt;乙：继续迭代&lt;/p&gt;

&lt;p&gt;乙：生产关系=K×生产力&lt;/p&gt;

&lt;p&gt;乙：所以说，一边努力提升自己的生产力，一边提高自己的生产关系吧&lt;/p&gt;

&lt;p&gt;乙：更新下：新生产力=旧生产力×生产关系&lt;/p&gt;

&lt;p&gt;乙：我觉得这样更合理&lt;/p&gt;

&lt;p&gt;丁：生产力=k*生产力^2?&lt;/p&gt;

&lt;p&gt;乙：每次提升的生产关系K都不一样&lt;/p&gt;

&lt;p&gt;乙：所以是一系列K的乘法&lt;/p&gt;

&lt;p&gt;乙：每次的旧生产关系也都不一样&lt;/p&gt;

&lt;p&gt;乙：旧的生产力也不同&lt;/p&gt;

&lt;p&gt;乙：其实归根结底还是取决于生产力，你自己的能力和效率&lt;/p&gt;

&lt;p&gt;丁：细节有待商榷，基本框架基本理解，保留意见&lt;/p&gt;

&lt;p&gt;乙：如果你自己没能力，生产关系也不能提升你的生产力&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>音乐串烧</title>
      <link>http://lilifeng.net/blogs/2009/03/13/Joke-Music-Strings/</link>
      <pubDate>Fri, 13 Mar 2009 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>原生</category>
      
      
      <category>博文</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2009/03/13/Joke-Music-Strings/</guid>
      <description>&lt;p&gt;1.王心凌《爱你》，S.H.E《我爱你》，Beyond《真的爱你》，李宗盛《我是真的爱你》，言承旭《我是真的真的很爱你》。&lt;/p&gt;

&lt;p&gt;点评：不用这么复杂吧！&lt;/p&gt;

&lt;p&gt;【Ace】想起来一个游戏。。。忘了名字～～～也是添加新的字上去&lt;/p&gt;

&lt;p&gt;2.王菲《如果你是假的》，邓丽君《假如我是真的》，萧正楠《假如我是假的》。&lt;/p&gt;

&lt;p&gt;　点评：能退货么？&lt;/p&gt;

&lt;p&gt;【Ace】《假如你是真的》，我寒～～～&lt;/p&gt;

&lt;p&gt;3.成龙《我是谁》，蟑螂《忘了我是谁》，蔡依林《你是谁》，许志安《忘了你是谁》。&lt;/p&gt;

&lt;p&gt;　点评：你们都需要脑白金！&lt;/p&gt;

&lt;p&gt;【Ace】换个顺序更好：《我是谁》《忘了你是谁》《你是谁》《忘了我是谁》。。。&lt;/p&gt;

&lt;p&gt;4.萧亚轩《一辈子做你的女孩》，龙梅子《下辈子做你的女人》。&lt;/p&gt;

&lt;p&gt;　点评：不错，成熟了！&lt;/p&gt;

&lt;p&gt;5.朴树《我爱你 再见》，丁薇 《再见 我爱你》&lt;/p&gt;

&lt;p&gt;点评：不送……&lt;/p&gt;

&lt;p&gt;【Ace】想知道2楼掉下去和20楼掉下去的区别吗？听听这两首歌。&lt;/p&gt;

&lt;p&gt;6.苏永康《男人不该让女人流泪》，陈小春《女人不该让男人太累》。&lt;/p&gt;

&lt;p&gt;点评：多么体贴的小夫妻啊！&lt;/p&gt;

&lt;p&gt;【Ace】男的听两首歌会觉得前面的是男人的责任，后者是女人没做好；女孩听的时候会觉得前者是男人没做好，后者是女人的责任。&lt;/p&gt;

&lt;p&gt;7.姜育恒《爱我你怕了吗》，孙燕姿《害怕》，王力宏《不要害怕》，潘玮柏《我不怕》，赵薇《不怕》，郭美美《不怕不怕啦》，郑伊健《怕什么，什么也不怕》。&lt;/p&gt;

&lt;p&gt;　点评：真是人多胆子大！&lt;/p&gt;

&lt;p&gt;【Ace】小姜的表白有那么可怕吗？&lt;/p&gt;

&lt;p&gt;8.董文华《春天的故事》，杨千桦《夏天的故事》，陈艾玲《秋天的故事》，马天宇《冬天的故事》。　　&lt;/p&gt;

&lt;p&gt;　点评：小红帽，来！听狼外婆给你讲故事&lt;/p&gt;

&lt;p&gt;【Ace】马天宇不容易啊，找到了这个缺口～～～&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>这把伞是你的吗？</title>
      <link>http://lilifeng.net/blogs/2009/03/13/Joke-Is-This-Your-Umbrella/</link>
      <pubDate>Fri, 13 Mar 2009 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>原生</category>
      
      
      <category>博文</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2009/03/13/Joke-Is-This-Your-Umbrella/</guid>
      <description>&lt;p&gt;话说昨天晚上浦东看房子看得比较晚也比较累，在浦电路等地铁的时候把伞放地下玩了玩手机。&lt;/p&gt;

&lt;p&gt;过了几分钟抬头突然发现地铁来了就赶紧冲了进去。坐过了几站以后才发现伞没拿然后又回去拿伞，回去以后转了一圈发现没有。&lt;/p&gt;

&lt;p&gt;就在踌躇间，忽然发现一个椅子上面有把伞，旁边有个女的，我眼睛就直直地看着那把伞，我能感觉那个女的就在看着我，而且一边看我一边看自己的伞，她的左手已经在朝那把伞伸去了。&lt;/p&gt;

&lt;p&gt;然后我看了看那个女的，慢慢地问道“这把伞是你的吗？”，我还没说完，她就马上说“是“，看她那紧张的表情，心里面笑死我了，等我再找了一圈还是没发现，再走到她那里的时候，她已经把伞放到了怀里。。。&lt;/p&gt;

&lt;p&gt;囧。。。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>好文分享－不错的短文《所谓职业》</title>
      <link>http://lilifeng.net/blogs/2009/02/27/About-Career/</link>
      <pubDate>Fri, 27 Feb 2009 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      
      <category>博文</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2009/02/27/About-Career/</guid>
      <description>&lt;p&gt;所谓职业，无非是将自己变成一个聪明的勤快人。&lt;/p&gt;

&lt;p&gt;2004年，集团下属科技公司改组，执行委员会找我谈话，决定派我去兼任科技公司的副总，负责整个公司的业务和人事安排。工作于是无厘头地增加了很多内容。&lt;/p&gt;

&lt;p&gt;当时公司招了大批应届本科和研究生毕业的新新人类。平均年龄25岁。那个新的助理，是经过多次面试后，我亲自招回来的一个女孩。名牌大学本科毕业，聪明、性格活泼。私下里我得承认，我招她的一个很重要的原因，除了她在大学里优秀的表现之外，还因为她写了一手漂亮的字。女孩能写一手好字的不多，尤其像她，看起来长发飘飘，多么女性化的一个姑娘，一手字却写得铿锵倜傥，让我对她不由多了很多好感。&lt;/p&gt;

&lt;p&gt;手把手地教。从工作流程到待人接物。她也学得快。很多工作一教就上手。一上手就熟练。跟各位同事也相处得颇融洽。我开始慢慢地给她一些协调的工作，各部门之间以及各分公司之间的业务联系和沟通让她尝试着去处理。&lt;/p&gt;

&lt;p&gt;开始经常出错。她很紧张，来找我谈。我告诉她：“错了没关系，你且放心按照你的想法去做。遇到问题了，来问我，我会告诉你该怎么办。”仍然错。又来找我，这次谈得比较深入，她的困惑是，为什么总是让她做这些琐碎的事情？我当时问她：“什么叫做不琐碎的工作呢？”&lt;/p&gt;

&lt;p&gt;她答不上来，想了半天，跟我说：“我总觉得，我的能力不仅仅能做这些，我还能做一些更加重要的事情。”那次谈话，进行了一个小时。我知道，我说的话，她没听进去多少。后来我说：“先把手头的工作做好，避免常识性错误的发生，然后循序渐进吧。”&lt;/p&gt;

&lt;p&gt;半年以后，她来找我，第一次提出辞职。我推掉了约会，跟她谈辞职的问题。问起辞职的原因，她跟我直言：“本科四年，功课优秀，没想到毕业后找到了工作，却每天处理的都是些琐碎的事情，没有成就感。”我又问她：“你觉得，在你现在所有的工作中，最没有意义的最浪费你的时间精力的工作是什么？”她马上答我：“帮您贴发票，然后报销，到财务去走流程，把现金拿回来给您。”&lt;/p&gt;

&lt;p&gt;我笑着问她：“你帮我贴发票报销有半年了吧？通过这件事儿，你总结出了一些什么信息？”&lt;/p&gt;

&lt;p&gt;她呆了半天，答我：“贴发票就是贴发票，只要财务上不出错不就行了呗，能有什么信息？”&lt;/p&gt;

&lt;p&gt;我说，我来跟你讲讲当年我的做法吧：1998年的时候，我从财务被调到了总经理办公室，担任总经理助理的工作。其中有一项工作，就是跟你现在做的一样，帮总经理报销他所有的票据。本来这个工作就像你刚才说的，把票据贴好，然后完成财务上的流程，就可以了。&lt;/p&gt;

&lt;p&gt;其实票据是一种数据记录，它记录了和总经理乃至整个公司营运有关的费用情况。看起来没有意义的一堆数据，其实它们涉及了公司各方面的经营和运作。于是我建立了一个表格，将所有总经理在我这里报销的数据按照时间、数额、消费场所、联系人、电话等记录下来。&lt;/p&gt;

&lt;p&gt;我起初建立这个表格的目的很简单，我是想在财务上有据可循，同时万一我的上司有情况来询问我的时候，我会有准确的数据告诉他。通过这样的一份数据统计，渐渐地我发现了一些上级在商务活动中的规律，比如，哪一类的商务活动，经常在什么样的场合，费用预算大概是多少；总经理的公共关系常规和非常规的处理方式，等等。&lt;/p&gt;

&lt;p&gt;当我的上级发现，他布置工作给我的时候，我会处理得很妥帖。有一些信息是他根本没有告诉我的，我也能及时准确地处理。他问我为什么，我告诉了他我的工作方法和信息来源。&lt;/p&gt;

&lt;p&gt;渐渐地，他基于这种良性积累，越来越多地交代更加重要的工作。再渐渐地，一种信任和默契就此产生，我升职的时候，他说我是他用过的最好用的助理。&lt;/p&gt;

&lt;p&gt;说完这些长篇大论，我看着这个姑娘，她愣愣地看着我。我跟她直言：“我觉得你最大的问题，是你没有用心。在看似简单不动脑子就能完成的工作里，你没有把你的心沉下去，所以，半年了，你觉得自己没有进步。”她不出声，但是收回了辞职报告。&lt;/p&gt;

&lt;p&gt;又坚持了三个月，她还是辞职了。这次我没有留她，让她走了。&lt;/p&gt;

&lt;p&gt;后来她经常在MSN上跟我聊天，告诉我她的新工作的情况。一年内，她换了三份工作。每一次都坚持不了多久。每一次她都说新的工作不是她想要的工作。2005年的时候，她又一次辞职了，很苦恼，跑来找我，要跟我吃饭。我请她去写字楼后面的商场吃日本料理。吃到中途，忽然跟我说：“我有些明白你以前说的话是什么意思了。”&lt;/p&gt;

&lt;p&gt;所谓的职业生涯，其实你很难预测到你将来真正要从事什么工作，将来所要从事的工作，是否跟你在大学里学的专业有关。大多数人，很有可能将来所做的工作，跟他当初所学的专业一点关系都没有。从22岁大学毕业到26岁之间这四年，不是你做了什么，重要的是你在工作中养成了怎么样的良好的工作习惯。这个良好的工作习惯指的是：认真、踏实的工作作风，以及是否学会了如何用最快的时间接受新的事物，发现新事物的内在规律，比别人更短时间内掌握这些规律并且处理好它们。具备了以上的要素，你就成长为一个被人信任的工作的人。&lt;/p&gt;

&lt;p&gt;人都有惰性，也都愿意用那些用起来顺手的人。当你具备了被人信任的基础，并且在日常的工作中逐渐表现出你的踏实、聪明和细致的时候，越来越多的工作机会就会提供到你面前。原因很简单，用一句话就能交代清楚并且能被你顺利完成的工作，谁愿意说三句话甚至半小时交代一个怎么都不明白的人呢？沟通也是一种成本，沟通的时间越少，内耗越少，这是作为管理者最清楚的一件事。&lt;/p&gt;

&lt;p&gt;当你有比别人更多的工作机会去接触那些你没有接触过的工作的时候，你就有了比别人多的学习机会，人人都喜欢聪明勤奋的学生，作为管理者，大概更是如此。&lt;/p&gt;

&lt;p&gt;一个新手，大多数新手，在这四年里，是看不出太大的差距的。但是这四年的经历，为以后职业生涯的发展奠定的基础，是至关重要的。很多人不在乎年轻时走弯路，很多人觉得日常的工作人人都能做好没什么了不起。然而就是这些简单的工作，循序渐进地、隐约地成为今后发展的分水岭。&lt;/p&gt;

&lt;p&gt;漫不经心地对待基层工作的最大损失，就是将看似简单的事物性处理方式，分界成为长远发展的能力问题。&lt;/p&gt;

&lt;p&gt;聪明的人，总是不认为自己的能力有问题。时间长了，他会抱怨自己运气不好，抱怨那些看起来资质普通的人，总能比自己更能走狗屎运。抱怨她容貌比自己好，或者他更会讨领导欢心，等等。慢慢地，影响心态。所谓的怀才不遇，有时是这种情况。&lt;/p&gt;

&lt;p&gt;工作需要一个聪明人，工作其实更需要一个踏实的人。在聪明和踏实之间，我更愿意选择后者。而踏实，是人人都能做到的，和先天条件没有太大关系。&lt;/p&gt;

</description>
    </item>
    
    <item>
      <title>可能会有口蹄疫</title>
      <link>http://lilifeng.net/blogs/2009/02/19/Joke-Maybe-Cow-Sick/</link>
      <pubDate>Thu, 19 Feb 2009 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>原生</category>
      
      
      <category>博文</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2009/02/19/Joke-Maybe-Cow-Sick/</guid>
      <description>&lt;p&gt;昨天和杨J在原味吃饭，上了一道菜是红烧带鱼。&lt;/p&gt;

&lt;p&gt;杨J，“这个会不会有禽流感啊？”&lt;/p&gt;

&lt;p&gt;我，“不会的，可能会有口蹄疫…”&lt;/p&gt;

&lt;p&gt;jiong……&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>没事，他也没有</title>
      <link>http://lilifeng.net/blogs/2009/02/17/Joke-No-Matters-Neither-Him/</link>
      <pubDate>Tue, 17 Feb 2009 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>原生</category>
      
      
      <category>博文</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2009/02/17/Joke-No-Matters-Neither-Him/</guid>
      <description>&lt;p&gt;今天打完球离开公司的时候和Steven，杨J一起走，因为公司有免费饮料所以他们一人拿了一瓶。&lt;/p&gt;

&lt;p&gt;忽然Steven拿着手中的纸装橙汁大呼，“哎呀，我忘了拿吸管了。。。”&lt;/p&gt;

&lt;p&gt;我沉着的看着他，指着正在喝灌装可乐的杨J说，“没事，他也没有～～～”&lt;/p&gt;

&lt;p&gt;囧。。。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>情人节的绝活亮相！</title>
      <link>http://lilifeng.net/blogs/2009/02/14/Houseman-Lovers-Day/</link>
      <pubDate>Sat, 14 Feb 2009 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>原生</category>
      
      
      <category>博文</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2009/02/14/Houseman-Lovers-Day/</guid>
      <description>&lt;p&gt;今天情人节，对于咱孤家寡人，不想上街抢对对鸳鸯的戏，就宅在家了～，既然过节就要来点不同嘛，焖面！！！&lt;/p&gt;

&lt;p&gt;话说焖面可是我爸的绝学，做出来的那面，那豆角，那肉，都无法用语言表达那种酣畅淋漓的吃面快感，如果在我开吃焖面的第一口问我一个问题，我一定是吃完之后才有空来回答你～～～&lt;/p&gt;

&lt;p&gt;这个路数（Lousou），我经过潜心研究我爸十几年来各种技战术的卧底工作经验，结合我当前突飞猛进的做饭技巧，再加上我饥饿肚皮发出的3级警告信号，我觉得已经到了我来尝试一把的时候了。&lt;/p&gt;

&lt;p&gt;无奈，不能照搬我爸的那套路数，因为我没有高压锅，普通的锅只好客串一次主要容器了，豆角，肉，面中午买好，下午5点40开始准备，到6点40的时候搞定！！！&lt;/p&gt;

&lt;p&gt;结果嘛。。。非常的形似，看大部分（大部分？）东西都非常有胃口。但是至于神嘛，为了保证我们本篇乐观的文章风格，咱们还是放到下回再说吧。&lt;/p&gt;

&lt;p&gt;什么？不行？那好吧。。。怎么说呢，有以下几点：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;糊锅。我放面的时候下面都是豆角和肉，后来浇汤的时候用筷子轻轻拨了拨上面的面层而已，最后发现糊锅的都是面，它们怎么跑下去的～～～&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;面粘。最后出锅的时候，发现有些面还很湿。。。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;油多。和上面可能算是同一点，那些湿面上面大部分都是油，吃起来有点小腻了～～～～&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;肉少。其实，我切肉的时候，起码也有十几片肉啊，为什么最后出锅以后我总共就吃到了2块呢？他们都跑去哪里了？&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/img/090214_1.jpg&quot; alt=&quot;面1&quot; /&gt;
&lt;img src=&quot;/img/090214_2.jpg&quot; alt=&quot;面2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;总的来说嘛，今天是个很好的尝试（也挺失败）。。。以后有机会再尝试好了～～～&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>推荐的WM手机软件</title>
      <link>http://lilifeng.net/blogs/2009/02/08/Introducing-WM-Softwares/</link>
      <pubDate>Sun, 08 Feb 2009 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>原生</category>
      
      
      <category>博文</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2009/02/08/Introducing-WM-Softwares/</guid>
      <description>&lt;p&gt;最近用了一个WM6.1 PPC手机，从网上搜罗了N多软件，好的不好的都拿来玩了一把，在这里列出一些我觉得WM系统必备的软件吧：&lt;/p&gt;

&lt;p&gt;1,Resco Explorer&lt;/p&gt;

&lt;p&gt;这个是资源管理器的增强版，有了这个就不要用自带的资源管理器了，打开Windows再也不用怀疑是死机了。&lt;/p&gt;

&lt;p&gt;2, Resco Registry Add-in&lt;/p&gt;

&lt;p&gt;这个是注册表编辑器，有一些系统优化就需要这个东西来搞定了&lt;/p&gt;

&lt;p&gt;3,SmallMenu&lt;/p&gt;

&lt;p&gt;这个东西会在开始的徽章那里多一个功能出来,生成另一个menu，这个menu相当于windows的快速启动,而且可以快速关闭程序&lt;/p&gt;

&lt;p&gt;4,iLuncher&lt;/p&gt;

&lt;p&gt;这个东西可以让你的今日显示几个tab,每个tab下面都有不同的图标，相当于多tab的快捷方式组合,图标不大,放得挺多，可以当桌面用&lt;/p&gt;

&lt;p&gt;5,这个应该先说,安装CF2.0和CF3.5&lt;/p&gt;

&lt;p&gt;6,QuickClock&lt;/p&gt;

&lt;p&gt;这个可以在桌面显示一个大钟,并且可以显示未接来电个数,未看短信个数,未看邮件个数,年月日&lt;/p&gt;

&lt;p&gt;7,AddinTimer&lt;/p&gt;

&lt;p&gt;这个功能多多,可以定时提醒,定时飞行模式,定时群发单发短信(赞),定时电话，很多功能,自定义音乐,可以选择某个目录让它随机选择音乐提醒，定时变换情景,定时重启,定时运行程序什么的，可以放到今日,看到未结束的所有的定时项目，很好用&lt;/p&gt;

&lt;p&gt;8,手机千千静听&lt;/p&gt;

&lt;p&gt;这个听音乐很舒服,可以看歌词，不过歌词服务器和千千静听不是一个,所以歌词的质量不好，但是如果你音乐文件同一个目录下有同名的lrc文件,它也可以显示歌词&lt;/p&gt;

&lt;p&gt;9,CorePlayer&lt;/p&gt;

&lt;p&gt;手机上的万能播放器,确实够万能的，连图片都可以看.. 你就当它暴风影音好了&lt;/p&gt;

&lt;p&gt;10, UCWEB&lt;/p&gt;

&lt;p&gt;上网利器,流量不大,网页速度快,多页面模式，书签也很好用，我今天中午吃饭的地方就是用它上dianping和ddmap找到的&lt;/p&gt;

&lt;p&gt;11,KAV&lt;/p&gt;

&lt;p&gt;手机上的卡巴斯基，新短信拦截查毒,陌生号码会问你是否加入黑名单.. 可以Full Scan，好像不消耗很多内存，平时驻留在今日右下角&lt;/p&gt;

&lt;p&gt;12,MDict&lt;/p&gt;

&lt;p&gt;手机上的查词冠军,这个是免费的,比手机金山词霸好用，但是必须要下载词库，网上有很多对应词库,自己找找安装吧。我装的是4个：5mAll，现代汉语词典，维基百科050623，牛津英汉双解词典。&lt;/p&gt;

&lt;p&gt;13,MSN&lt;/p&gt;

&lt;p&gt;14,QQ2008&lt;/p&gt;

&lt;p&gt;这都不用说&lt;/p&gt;

&lt;p&gt;15,PhoneArea&lt;/p&gt;

&lt;p&gt;这个是查询来电归属的,手机来电的时候自动显示，平时运行也可以查询手机归属,身份证归属,区号等&lt;/p&gt;

&lt;p&gt;16,HandCalendar&lt;/p&gt;

&lt;p&gt;万年历，有一些好玩的插件，历史上的今天啊，生理曲线啊，有个插件功能很囧：&lt;女性安全期查询&gt;&lt;/女性安全期查询&gt;&lt;/p&gt;

&lt;某丁&gt; ...... 


17,MiniMap 

我觉得这个比手机GoogleMap好，因为Googlemap很慢,而且流量不菲，这个MiniMap不仅可以查地图,还可以查很多其他东西，和GoogleMap都可以当GPS用 


18,GPRS流量软件,我装了半天没装上,自己找吧，据说比较好的是GPRS Tranffic Monitor。我装了总是找不到网络。 


再说两个游戏凑20个吧： 


19，宝石迷阵2 

英文名叫：Astraware Bejeweled2，绝对是百玩不厌的游戏，画面效果好，而且很流畅。 


20，辰元斗地主 

这个斗地主是同类游戏里面做的最好的我觉得，声音是用的QQ游戏的声音，电脑智商很不稳定，但是出牌打牌都很稳定流畅，画面简单明了。 


有哥们可能会问，这些软件好多都是共享软件啊，用不了多久就不行了啊。我只想说一句话------我是中国人！
&lt;/某丁&gt;
</description>
    </item>
    
    <item>
      <title>回复失恋男的来信</title>
      <link>http://lilifeng.net/blogs/2009/02/02/Letter-To-Losing-Boy/</link>
      <pubDate>Mon, 02 Feb 2009 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      
      <category>博文</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2009/02/02/Letter-To-Losing-Boy/</guid>
      <description>&lt;p&gt;老端注：这是我第一回收到感情方面的来信询问，发信人还是一位男性，由于本人非感情方面的专家，因此本不打算回复。但转念一想，用经济学和进化心理学知识是否也可以提供一些个人情感方面的帮助呢？毕竟这两方面我还稍微有点研究，说不定可以尝试一下。于是干脆隐去来信人姓名，贴上blog供大家共同研究。&lt;/p&gt;

&lt;p&gt;下面是来信内容：&lt;/p&gt;

&lt;p&gt;===========================================&lt;/p&gt;

&lt;p&gt;老端，您好：&lt;/p&gt;

&lt;p&gt;请允许我叫你老端，这样感觉像是我的大哥，我是从一年多之前开始看您的文章，陆陆续续一直到今天，我知道你写经济学、股票和心理学比较多一些，不过我今天想问的问题和这些关系不是很大，简单讲，我失恋了。&lt;/p&gt;

&lt;p&gt;先简要介绍一下自己吧，我出生在南方沿海一个小城市，大学在上海念，毕业之后也留在了上海，今年我26岁，也就是说，工作已经有4年了，也算是一个小白领吧，月收入不算很高，五千元出头一点，个人感觉自己长得还过得去。&lt;/p&gt;

&lt;p&gt;我女朋友是以前单位的同事，后来我们都换了工作，不过谈到现在也快有1年多了，她是上海人，长得不算非常漂亮，但也算比较漂亮了，年龄和我同岁。刚一开始到那家公司，我就被她给吸引住了，由于有工作往来，渐渐的就开始有了一些感情，有时候下班也会顺道一起走，刚一开始我就非常非常的爱她，感觉自己为她牺牲一切都值得，我想她应该也是爱我的。后来发展下去，我在她身上花了不少时间精力和钱，因为我觉得自己是非常爱她的。但后来由于工作变动，我们见面的时间减少了很多。忽然有一天，她告诉我，我们之间没有那种感觉，我也不知道她指的是什么感觉，反正由于没感觉，因此我们很难继续发展了。听到她这么说，我真是有一种说不出的感觉，似乎这个世界都没多少意思了。&lt;/p&gt;

&lt;p&gt;我这么写是不是让你感觉很傻？但是你不在我这个位置是不会知道我的苦闷的。有一段时间我真的是做什么事情都无聊，脑子里想的都是她，后来我问过她，她说主要是因为家里不同意，因为我按照目前的收入是买不起房子的，而且我家里也不算很富裕的那种。我也不知道这是她的借口还是什么，也有可能就是这个原因。但是我想我们的收入一起买一间外环附近的小房子，还是可能的吧。再说现在房价都开始下跌了。&lt;/p&gt;

&lt;p&gt;老端先生，我写了这么多其实也不知道想说什么。不知道以你的见识，能给我一些什么建议。我知道您肯定会说，喜欢一个女人那都是我的本能基因在作怪，可问题是我就是喜欢，怎么办呢？这次过年我也没有回家，就躲在上海喝闷酒，很希望能够看到您的回复。&lt;/p&gt;

&lt;p&gt;祝 顺利&lt;/p&gt;

&lt;p&gt;失恋男&lt;/p&gt;

&lt;p&gt;==========================================&lt;/p&gt;

&lt;p&gt;以下是我的回复：&lt;/p&gt;

&lt;p&gt;失恋男，你好：&lt;/p&gt;

&lt;p&gt;据我所知，失恋之后会写信找人求助的男人是极少数，很幸运你就是那极少数之一。令我感到好奇的是，我又不是所谓的“知心大姐姐”，为什么你这封信会发到我这边？事实上我对你的问题是毫无办法，唯一的建议大约就是等待时间来给你疗伤吧。不过鉴于我略微知道一些经济学和心理学的知识，因此我打算从这两个角度给你一些建议，希望能够对你有帮助。&lt;/p&gt;

&lt;p&gt;首先我要指出的是，你失恋之后的消极心理状态是非常正常的行为，进化心理学对疼痛的定义就是能够持续唤起大脑注意的信号，这里的“疼痛”不仅仅是指生理上的，同时也是指心理上的，越是“痛”的事情，就越能够占用我们最多的注意力。由于你的失恋行为客观上妨碍了你达成自己的“繁衍成就”，因此随之而来的疼痛可以让你持续关注这件事，以找出解决问题的办法，事实上你这封信就是“疼痛”的产物，虽然我不认为这封信会对你起到多大帮助作用。&lt;/p&gt;

&lt;p&gt;第二点我要指出的是，你的年纪还太轻了，你才二十多岁，很难让女人对你产生多大兴趣。如果你熟悉巴菲特的投资方法，你就会知道，巴菲特是从来不买新股的，按照他的话说，新股没有太多的过往业绩，因此很难证明是一只能够持续带来回报的好股票。同样的，聪明的女人基本上不会对二十几岁的男人报以太大的希望，因为这个年龄段的男人才工作没几年，根本还看不出潜力在哪里，女人们与其在这类男人中挑选未来的黑马，还不如直接找一个三十几岁的成熟蓝筹更安全些。这就是为什么女人常常对成熟老男人动心的原因所在。&lt;/p&gt;

&lt;p&gt;第三点我要告诉你的是，你现在花费太多时间、精力和金钱在女人身上是很不明智的行为。你应该明白，谈恋爱是一场博弈游戏，二十五六岁的女孩子正好处于自身吸引力的顶峰，而你则明显不是。事实上很少有一场博弈游戏是在完全平等的状况下进行的，例如，购房者和开发商的博弈肯定是不平等的，布什和萨达姆的博弈也不平等，回乡农民工和票贩子的博弈更加不会平等。你和你前女友的博弈，在我看来也不平等，而很不幸，你把自己放在了一个劣势的地位上。既然男人可以希望女人长得漂亮，那么女人也同样可以希望男人有钱，这是很公平的交易，对方如果漂亮，那么她要求找一个买得起房子的男人不是很正常吗？问题是你这个年龄段的男人一般来说是买不起房子的。因此这是你的问题了，你不该把自己放在一个不平等的位置再去参与这场博弈游戏，孙子说：先胜而求战。他的意思是，局面对你有利，你才参加游戏，对你不利你就不要去参加了。所以我的建议很简单，二十多岁的时候你好好存钱、好好工作、好好投资、好好学习，乱七八糟的想法不要太多，所谓“筑巢引凤”，你就别盼着有凤来帮你筑巢了，当然这种人也不是说没有，那就要看你运气如何了。&lt;/p&gt;

&lt;p&gt;第四点我要指出的是，进化心理学家很早就已经证明了，女人寻求长期稳定婚姻看中的是两点，第一是能够提升社会地位；第二是能够提升生活水平。因此你最最应该关注的是如何才能提升你自己的社会地位和生活水平，这才是提升自身吸引力的正途，如果你把自己的全部聪明才智放在这两条上，我相信加以时日，你的前途不会太差的。所以请你放弃幻想，牢牢记住一点：凡是女人，都是虚荣和势利的，唯一的区别是程度各有不同。如果你希望进行简单（Easy）模式的婚姻博弈，那么找一个社会地位和生活水平低于你的伴侣；如果你希望进行正常（Normal）模式的婚姻博弈，那么找一个社会地位和生活水平和你相当的，即所谓门当户对的伴侣；如果你希望进行噩梦（Nightmare）级别的婚姻博弈，那么就找一个上海女孩吧，该模式不能save/load，升级速度慢，花费时间长，一旦失败就直接game over，适合希望接受挑战的专家级玩家，普通人连大Boss的面都见不到就挂了。&lt;/p&gt;

&lt;p&gt;第五，前面这些话似乎太理性了，以至于不太能够被接受吧，但是男性就是应该理性一些，所谓理性是指能够正确的基于形势作出判断，而感性是指，不管形势如何总是基于本能反映来作出判断。相对于女人，其实男人占的优势更大，由于一个人长得是美是丑是天生决定的，因此女人更容易相信命运的安排，而男人则不同，男人可以依靠自己的奋斗得到更多资源，因此男人的“可能性”会更多。所以，你可以把女人看作是债券，把男人看作是股票，前者更关注安全性，而后者更关注回报率。&lt;/p&gt;

&lt;p&gt;为了避免造成误解，我得把我的立场表个态，我对你的处境很同情，但是对你的某些做法并不认可，于是从经济博弈和进化心理学角度提出了一些看法，如果对你有帮助，我很高兴，如果没帮助，那就权当作笑话来看吧。另外，这篇东西我不希望被看作充满了歧视女性的言论，我不想作出任何道德上的批判，只是说了一些科学研究的事实。换言之，我也不认为你前女友的做法有什么错。你应该能够明白我的意思。&lt;/p&gt;

&lt;p&gt;最后祝你成功的从一只创业板的三线票成长为主板市场的大蓝筹，虽然困难重重，但你至少应该付出更多努力吧。再见。&lt;/p&gt;

&lt;p&gt;端宏斌&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Feedback for &lt;The Sixth Sense&gt;/《第六感》影评</title>
      <link>http://lilifeng.net/blogs/2009/01/18/Yesterday-Today-Tomorrow/</link>
      <pubDate>Sun, 18 Jan 2009 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>原生</category>
      
      
      <category>博文</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2009/01/18/Yesterday-Today-Tomorrow/</guid>
      <description>&lt;p&gt;前几天的变化太突然太大太让人受不了，到现在仍然摆脱不了这些事情所引起的阴霾。这几天一直在思考。&lt;/p&gt;

&lt;p&gt;就在那些事发生前几天，我已经在思考我的未来。毕竟目前的工作非常没有前途，如果不是对产品一种慈父的爱和我们成功温馨的团队，我恐怕早就心灰意冷离开这里了。我曾和Samuel聊过，我们究竟未来可以做些什么。Samuel告诉我，我们现在所做的这个职业，这个产品，这份工作，是非常没有前途的，就算一年20万，30万，那又能如何？要想把自己的事业做好做大，必须要有人脉，你一个人再如何有才，再如何能干，你只是一个人，你影响的空间有限。当你有一个更广阔的圈子之后，你就可以依靠这些朋友去推广你以及你的理念，这才会创造更多的价值，回报当然也更大。当时我只想着这辈子找一个稳定些能做大做强的事业来在平时没事的时候来学习，准备；说实话，动机非常原始，下班无聊想找事情做。&lt;/p&gt;

&lt;p&gt;紧接着，公司发生了翻天覆地的变化。公司裁员，我们项目组的人首当其冲，一天之内7个人离开公司，大部分都是很要好的朋友。第二天项目组被宣布将在发布之后解散，人员将要重新配置到其他项目组。&lt;/p&gt;

&lt;p&gt;听到这个消息真的比被裁还要难受。这个产品基本就是我们自己设计编写的，我们全部人一起为之奋斗了4年，我们承认开始的时候一边在摸索一边在开发确实没有把产品做的足够好，但是在我们努力奋斗了几年之后，一直在变好，我们所有人对这个版本的产品都赋予厚望，加上市场有了一些反应和反馈，我们更加坚信我们的产品是有价值的，我们每个人都觉得还有很多事情想要做，想要让产品做得更好。最让我们割舍不下的是我们这个团队，在产品整个过程我们团队基本上没有什么大的改变，每个人都非常了解其他人，大家相处非常融洽其乐融融，大家都是老实人，都非常有能力，都非常的有职业精神。就我所知，我们的团队应该是上海2个office里面讨论最活跃，交流最没有压力最快速的项目组了。我们和大部分QA关系也都非常好，都很认真负责，私底下是朋友，对产品的感情都是真的。这样一群有着共同信仰共同情感的人们走在了一起，开开心心的过了4年，公司的一个变革瞬间令我们分崩瓦解，感慨良多。1年前我家人劝我如果别处有机会的话，可以去跳槽看看，我对家人说，对这个产品我还有很多事情想做但是没有做完，当产品翅膀硬了可以独自翱翔的时候我自然会离开，而且，我非常舍不得现在这个团队。&lt;/p&gt;

&lt;p&gt;这些天发生的这些事情，已经彻底让我对自己的明天有了更清晰的想法。在经历了那些事情之后，我仍然在思考我以后究竟可以把个人价值体现在哪里。我在思考我的事业，我的爱情，我的未来，我的优点和缺点，我能做出什么样的改变。这一系列事情让我有了这些思考。&lt;/p&gt;

&lt;p&gt;曾几何时，我一直很讨厌关系观。什么事情都要讲求关系，我很反感根据关系来办事，甚至当我家人想到动用关系来为我办事的时候我也非常的反感。现在，我对关系观没有一点厌恶之情了。关系观不正是为了朋友为了家人能够更好的生活吗？人生在世，我自己自问不能对国家做出多么出色的贡献，但是我有能力让我的家人我的朋友过上好日子，这就是我存在在这个世界上的价值。如果只是为了我自己兴趣高兴快乐，为了自己能活着而活着，这样有意义吗？如果公司裁员的时候我有能力帮助的话，他们就不需要为了再找工作而努力奔波四处寻找工作了，如果我有能力的话，我就可以留住这个温馨和睦的团队了。我只想以我的角度来试图挽救。&lt;/p&gt;

&lt;p&gt;由此我确定了我短期，长期的计划： 
1. 短期：提升能力，努力赚钱，达到家人无忧的程度。我要对家人负责任让他们过上好日子，尽可能减少他们受到的伤害。 
2. 长期：达到能够有能力尽可能帮助朋友的程度。如果我能够做到的话，我一定会做。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>08年流行语文</title>
      <link>http://lilifeng.net/blogs/2009/01/12/2008-Hot-Words/</link>
      <pubDate>Mon, 12 Jan 2009 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      
      <category>博文</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2009/01/12/2008-Hot-Words/</guid>
      <description>&lt;p&gt;http://blogs.qq.com/a/20090112/000550.htm这个更详细。。。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;成语&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;欧阳挖坑：又叫月球挖坑，形容拥有一定身份的人说话极不负责任。欧阳院士一不小心，坑挖到了月球上去了。“多出来的那个坑很可能”这个结论与探月工程首席科学家的身份很不符合。参考：http://blog.sina.com.cn/s/blog_589a39ed01009z92.html&lt;/p&gt;

&lt;p&gt;秋雨含泪：秋天的雨水里面含着泪水。秋雨本已肃杀，含泪更显冷酷，寓意帮闲文人阶级不顾平民百姓的疾苦粉饰太平。2008年6月，中国文人余秋雨“含泪劝告灾民”。痛斥灾民要求查清豆腐渣工程的正义行动。而在四川大地震中，成千上万的学生因校园迅速倒塌而丧生。“秋雨含泪”被引申为假惺惺的鳄鱼的眼泪。参考：http://baike.baidu.com/view/1694146.htm 
正龙拍虎：某人或某集团为利益所驱动而做假，被揭穿后还抵死不认；社会公信力缺失。大家基本都知道，而且时间过程比较长，直接看参考好了：http://baike.baidu.com/view/1278620.htm&lt;/p&gt;

&lt;p&gt;兆山羡鬼：无耻文人王兆山，2008年6月在四川大地震发生后，面对6万多死难者竟作诗曰：“纵做鬼，也幸福”。“兆山羡鬼”被引申为冷血动物的代名词。例句：家中出了人命都不去看一下，你这不是“兆山羡鬼”吗？&lt;/p&gt;

&lt;p&gt;黔驴死撑：来自瓮安事件。意思大概是政府公信力缺失。&lt;/p&gt;

&lt;p&gt;聚打酱油：网络上不谈政治，不谈敏感话题，与自己无关，自己什么都不知道，就用此话回帖而已，相当于“路过”。&lt;/p&gt;

&lt;p&gt;抵制蠢货：意指鄙视那些不明白是非就怂恿别人一起进行某项活动的人。来自于法国支持ZD的家乐福事件。http://www.xici.net/u13743703/d69031287.htm&lt;/p&gt;

&lt;p&gt;俯卧硬撑：同黔驴死撑。&lt;/p&gt;

&lt;p&gt;谁死鹿手：鹿死谁手，谁死鹿手。形容某些没有社会公德的企业所做的事情。来自三鹿事件。http://zhoubutong.blog.sohu.com/100061143.html&lt;/p&gt;

&lt;p&gt;比赛第一：比赛第一，友谊第二。人们敢讲实话了。http://www.5jia1.com/uchome/space.php?uid=332202&amp;amp;do=blog&amp;amp;id=397457&lt;/p&gt;

&lt;p&gt;叉腰健儿：谢亚龙出品。在网络上，该词多半被引申为不懂装懂，冒充内行。http://www.stnn.cc/sport/200808/t20080823_852343.html&lt;/p&gt;

&lt;p&gt;自取其乳：网友感慨三鹿奶粉事件后征婚，条件须严苛至对女方乳腺发育状况的考核，借此确保子嗣有足够奶源，确保在进口奶粉吃不起、国产奶粉吃死人、国外奶粉要钱，国产奶粉要命的险恶境况下可以自取其乳。&lt;/p&gt;

&lt;p&gt;2。年度词组 
★年度风行：【囧】 
★年度震撼：【雷】 
★年度疯狂：【山寨】 
★年度婉约：【散步】 
★年度色情：【艳照门】 
★年度惊悚：【被自杀】 
★年度警醒：【限塑令】 
★年度蹊跷：【俯卧撑】 
★年度益智：【段子代沟】 
★年度科研：【集体世袭】 
★年度民生：【金融海啸】 
★年度悲悯：【心理包扎】 
★年度情势：【网络激辩】 
★年度发现：【气候觉醒】 
★年度新兴：【公益力量】 
★年度发明：【去愤青化】 
★年度学术：【网络政治】 
★年度悲哀：【新闻富矿】 
★年度悲恸：【汶川大地震】 
★年度温情：【全国哀悼日】 
★年度警觉：【万能时评家】 
★年度民心：【蔑视性沉默】 
★年度荒唐：【反二奶同盟】 
★年度长嗟：【内涵式脑残】 
★年度棒喝：【缺德市场经济】&lt;/p&gt;

&lt;p&gt;3。年度短语 
★年度奇喻：【红得尿血】 
★年度豪迈：【很黄很暴力】 
★年度情色：【弄他！弄他！】 
★年度废话：【这是为什么呢？】 
★年度脑残：【无性经历者优先】 
★年度委婉：【圭寸杀殳三易口隹】 
★年度小资：【她的皮肤像形容词】 
★年度诡谲：【我出来是打酱油的】 
★年度美好：【趁兜里还有毛主席】 
★年度忽悠：【让艳照门成为历史】 
★年度祝福：【鼠年你是所有人的大米】 
★年度透彻：【缺乏辩论的大会是寂寞的】 
★年度调笑：【我忍不住英俊地笑了起来】 
★年度坚韧：【拆生命的房子，盖小说的房子】 
★年度缺氧：【只要小葱穿热裤，吧主全是流氓兔】 
★年度嗟叹：【我们无法用一页博客覆盖整个生活】 
★年度悬疑：【是什么让一个拿相机的手拿起了刀？】 
★年度洞穿：【我们在出生的那一天起就叫刘亚玲了】 
★年度睿智：【一个正在用百米冲刺的速度跑马拉松的国度】 
★年度励志：【你有什么不开心的事？说出来让大家开心一下】 
★年度辛酸：【妈妈正细心裁剪一小块一小块黑夜做你棉衣的衬】 
★年度爆笑：【女人是水做的，男人是泥做的，李俊基李宇春是水泥做的】&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>你一定能用上的生活小绝招～</title>
      <link>http://lilifeng.net/blogs/2009/01/10/Life-tricks/</link>
      <pubDate>Sat, 10 Jan 2009 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      
      <category>博文</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2009/01/10/Life-tricks/</guid>
      <description>&lt;p&gt;天涯上看来的，大家分享一下吧～&lt;/p&gt;

&lt;p&gt;1.吃了辣的东西，感觉就要被辣死了，就往嘴里放上少许盐，含一下，吐掉，漱下口，就不辣了；&lt;/p&gt;

&lt;p&gt;2.牙齿黄，可以把花生嚼碎后含在嘴里，并刷牙三分钟，很有效；&lt;/p&gt;

&lt;p&gt;3.若有小面积皮肤损伤或者烧伤、烫伤，抹上少许牙膏，可立即止血止痛；&lt;/p&gt;

&lt;p&gt;4.经常装茶的杯子里面留下难看的茶渍，用牙膏洗之，非常干净；&lt;/p&gt;

&lt;p&gt;5.仰头点眼药水时微微张嘴，这样眼睛就不会乱眨了；&lt;/p&gt;

&lt;p&gt;6.嘴里有溃疡，就用维生素C贴在溃疡处，等它溶化后溃疡基本就好了；&lt;/p&gt;

&lt;p&gt;7.眼睛进了小灰尘，闭上眼睛用力咳嗽几下，灰尘就会自己出来；&lt;/p&gt;

&lt;p&gt;8.洗完脸后，用手指沾些细盐在鼻头两侧轻轻按摩，然后再用清水冲洗，黑头和粉刺就会清除干净，毛细孔也会变小；&lt;/p&gt;

&lt;p&gt;9.刚刚被蚊子咬完时，涂上肥皂就不会痒了；&lt;/p&gt;

&lt;p&gt;10.如果嗓子、牙龈发炎了，在晚上把西瓜切成小块，沾着盐吃，记得一定要是晚上，当时症状就会减轻，第二天就好了；&lt;/p&gt;

&lt;p&gt;11.吹风机对着标签吹，等吹到商标的胶热了，就可以很容易的把标签撕下来；&lt;/p&gt;

&lt;p&gt;12.旅行带衣服时如果怕压起褶皱，可以把每件衣服都卷成卷；&lt;/p&gt;

&lt;p&gt;13.打打嗝时就喝点醋，立杆见影；&lt;/p&gt;

&lt;p&gt;14.吃了有异味的东西，如大蒜、臭豆腐，吃几颗花生米就好了；&lt;/p&gt;

&lt;p&gt;15.治疗咳嗽，特别是干咳，晚上睡觉前，用纯芝麻香油煎鸡蛋，油放稍多些，什么调味料都不要放，趁热吃过就去睡觉，连吃几天效果很明显；&lt;/p&gt;

&lt;p&gt;16.手腕长粗的MM想带较细的手镯，就不能硬带，应把手上套上一个塑料袋再带上手镯，非常好带，也不会把手弄疼，取下也是同样的方法；&lt;/p&gt;

&lt;p&gt;17.栗子皮难剥，先把外壳剥掉，再把它放进微波炉转一下，拿出后趁热一搓，皮就掉了；&lt;/p&gt;

&lt;p&gt;18.插花时，在水里滴上一滴洗洁精，可以维持好几天；&lt;/p&gt;

&lt;p&gt;19.把核桃放进锅里蒸十分钟，取出放在凉水里再砸开，就能取出完整的桃核仁了；&lt;/p&gt;

&lt;p&gt;20.把虾仁放进碗里，加一点精盐、食用碱粉，用手抓搓一会儿后用清水浸泡，然后再用清水冲洗，即能使炒出的虾仁透明如水晶，爽嫩可口；&lt;/p&gt;

&lt;p&gt;21.炒肉时，先把肉用小苏打水浸泡十几分钟，倒掉水，再入味，炒出来会很嫩滑；&lt;/p&gt;

&lt;p&gt;22.将残茶叶浸入水中数天后，浇在植物根部，可促进植物生长；&lt;/p&gt;

&lt;p&gt;23.把残茶叶晒干，放到厕所或者沟渠里燃熏，可消除恶臭，具有驱除蚊子苍蝇的功能；&lt;/p&gt;

&lt;p&gt;24.夹生饭重煮法：可用筷子在饭内扎些直通锅底的孔，洒入少许黄酒重焖，&lt;/p&gt;

&lt;p&gt;25.若只表面夹生，只要将表层翻到中间再焖即可；&lt;/p&gt;

&lt;p&gt;26.巧除纱窗油腻：将洗衣服、吸烟剩下的烟头一起放在水里，待溶解后，拿来擦玻璃窗、纱窗，效果真不错；&lt;/p&gt;

&lt;p&gt;27.只要在珠宝盒中放上一节小小的粉笔，即可让首饰常保光泽；&lt;/p&gt;

&lt;p&gt;28.桌子、瓶子表面的不干胶痕迹用风油精可以擦拭；&lt;/p&gt;

&lt;p&gt;29.出门时随时在包里带一节小的干电池，若裙子带静电，就把电池的正极在裙子上面擦几下即可去掉静电；&lt;/p&gt;

&lt;p&gt;30.不管是鞋子的哪个地方磨到了你的脚，你就在鞋子磨脚的地方涂一点点白酒，保证就不磨脚了；&lt;/p&gt;

&lt;p&gt;31.亨调蔬菜时，如果必须要焯，焯好菜的水最好尽量利用。如做水饺的菜，焯好的水可适量放在肉馅里，这样既保证营养，又使水饺馅味美有汤；&lt;/p&gt;

&lt;p&gt;32.夏天足部容易出汗，每天用淡盐水泡脚可有效应对汗脚；&lt;/p&gt;

&lt;p&gt;33.夏天游泳后晒晒太阳，可防肌肤劳损等疾病发生；&lt;/p&gt;

&lt;p&gt;34.夏天枕头易受潮滋生霉菌，时常曝晒枕芯有利健康；&lt;/p&gt;

&lt;p&gt;35.多吃薏米小豆粥等潮湿健脾，可防暑湿；&lt;/p&gt;

&lt;p&gt;36.防失眠：睡前少讲太多话，忌饮浓茶，睡前勿大用脑，可用热水加醋洗脚；&lt;/p&gt;

&lt;p&gt;37.金银花有疏散风湿功效，金银花水煎取汁凉后与蜂蜜冲调可解暑；&lt;/p&gt;

&lt;p&gt;38.吃过于肥腻的食物后喝茶，能刺激自律神经，促进脂肪代谢；&lt;/p&gt;

&lt;p&gt;39.睡眠不足会变笨，一天需要睡眠八小时，有午睡习惯可延缓衰老；&lt;/p&gt;

&lt;p&gt;40.双手易变得干燥粗糙，用醋泡手十分钟可护肤；&lt;/p&gt;

&lt;p&gt;41.夏天擦拭凉席，用滴加了花露水的清水擦拭凉席，可使凉席保持清爽洁净。当然，擦拭时最好沿着凉席纹路进行，以便花露水渗透到凉席的纹路缝隙，这样清凉舒适的感觉会更持久；&lt;/p&gt;

&lt;p&gt;42.早餐多食西红柿、柠檬酸等酸性蔬菜和水果，有益于养肝；&lt;/p&gt;

&lt;p&gt;43.爽身止痒洗头或洗澡时，在水中加五六滴花露水，能起到很好的清凉除菌、祛痱止痒作用；&lt;/p&gt;

&lt;p&gt;44.葡萄含有睡眠辅助激素，常食有助睡眠；&lt;/p&gt;

&lt;p&gt;45.夏天多喝番茄汤既可获得养料，又能补充水分，番茄汤应烧好并冷却后再喝，所含番茄红素有一定的抗前列腺癌和保护心肌的功效，最适合于男子；吃酸性物质马上刷牙会损害牙齿健康；&lt;/p&gt;

&lt;p&gt;46.因外伤碰破皮肉时，在伤处涂上牙膏进行消炎、止血，再包扎，作为临时急救药，以药物牙膏效果最为显著；&lt;/p&gt;

&lt;p&gt;47.将白醋喷洒在菜板上，放上半小时后再洗，不但能杀菌，还能除味；&lt;/p&gt;

&lt;p&gt;48.喝酸奶能解酒后烦躁，酸奶能保护胃黏膜、延缓酒精吸收，并且含钙丰富，对缓解酒后烦躁尤其有效；&lt;/p&gt;

&lt;p&gt;49.皮鞋包皮放久了发霉时，可用软布蘸酒精加水（1：1）溶液擦拭即可；&lt;/p&gt;

&lt;p&gt;50.发生头痛、头晕时，可在太阳穴涂上牙膏，因为牙膏含有薄荷脑、丁香油可镇痛；&lt;/p&gt;

&lt;p&gt;51.蜡烛冷冻二十四小时后，再插到生日蛋糕上，点燃时不会流下烛油；&lt;/p&gt;

&lt;p&gt;52.白色衣裤洗后易泛黄，可取一盆清水，滴上二三滴蓝墨水，将洗过的衣裤在浸泡一刻钟，不必拧干，就放在太阳下晒，即可洁白干净；&lt;/p&gt;

&lt;p&gt;53.过多食用生葱蒜会刺激口腔肠胃， 不利健康，最好加一点醋再食用；&lt;/p&gt;

&lt;p&gt;54.及时补充水分但应少喝果汁、可乐、雪碧、汽水等饮料，含有较多的糖精和电解质，喝多了会对肠胃产生不良刺激，影响消化和食欲。因此夏天应多喝白开水或淡盐（糖）水；&lt;/p&gt;

&lt;p&gt;55.每天早晨用豆腐摩擦面部几分钟，坚持一个月，面部会变得很滋润；&lt;/p&gt;

&lt;p&gt;56.空调室内温差不宜超过五度，即使天气再热，空调室内温度也不宜到24度以下；&lt;/p&gt;

&lt;p&gt;57.加酶洗衣粉剂放在温水中需要较长的分解时间才能使洗衣效果更佳；&lt;/p&gt;

&lt;p&gt;58.夏天，人的活动时间变长，出汗多，耗能过大，应适当多吃鸡、鸭、瘦肉、鱼类、蛋类等营养食品，以满足人体的代谢需要；&lt;/p&gt;

&lt;p&gt;59.头痛时把苹果磨成泥状涂在纱布上，贴在头痛处，症状可减轻；&lt;/p&gt;

&lt;p&gt;60.皮包上有污渍，可以用棉花蘸风油精擦拭&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Feedback for &lt;The Sixth Sense&gt;/《第六感》影评</title>
      <link>http://lilifeng.net/blogs/2009/01/03/Movie-Feedback-The-Sixth-Sense/</link>
      <pubDate>Sat, 03 Jan 2009 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>原生</category>
      
      
      <category>博文</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2009/01/03/Movie-Feedback-The-Sixth-Sense/</guid>
      <description>&lt;the sixth=&quot;&quot; sense=&quot;&quot;&gt; movie is defined as a psychological horror film which I thought is to scare people, but actually it is wrong. All I can see from this film is real love. 


Cole, the boy who can see dead people, only lives with her mother. But because of Cole&#39;s ability, he was always in scared and did not expect to tell his mother. The mom could do everything for her son without any daults, and they love each other all the time. After the boy did not scared by his own ability, when he spoke out his own secrets and her mom&#39;s secrets, their hearts went together finally. I can never forget the scene that they hugged with each other tightly after those horrible things happened. This is the real maternal love. 


Another scene which can&#39;t stop me from weeping is the end that Crowe talked to her wife. In fact, he is already dead man but he did not know about this before the end, he heared his wife is missing him in the dream but he can&#39;t wake her up. He can only talk to her in her dream and express his missing. When the wedding ring falls upon the ground, everything comes clear, and the real love between Crowe and his wife comes clear: She always loves him. I indeed can&#39;t stop my tears rolled down my cheek at this moment. 


Another example about love is the Collins. Kyra Collins is the dead girl who was murdered by her mother, the movie did not tell us why she did not tell her dad when she lives, but I guess she did not expect to expose the fact that her mother wants her die is because she still wants to have a happy family and she loves the others so she did not expect the family is broken down. It&#39;s the her love to family. 


Actually the secret would be hidden forever if the mother did not hurt her sister by the same way. Kyra loves her sister and she doesn&#39;t want her get hurt anymore so she has to expose it to her farther via Cole. That&#39;s the affections bettwen elder and younger sisters. 


The love scatters throughout, I think we&#39;d better remember what the film wants to tell us: Please treasure your loves. 




看一部电影写一个影评。为了让大家明白什么意思，我翻译如下（因为我先写的英文，翻译不一定表达得对，事实上，英文也不一定好，见谅）： 




《第六感》一直以来被定义为一个恐怖片，但事实上它并不是。我从这部电影所看到的主题是----爱。 


Cole是一个能看到死人的小孩，他和他的妈妈一起住。但是由于Cole的这个特别的能力，使得他自己一直生活在恐惧中并且不想告诉他的妈妈。毫无疑问，妈妈肯为了Cole做任何事情。他们一直很爱对方。在这个孩子克服了自己的恐惧，并且告诉了妈妈他的秘密和他妈妈的秘密之后，他们的心终于贴到了一起。我永远也无法忘记在一系列恐怖事情发生之后，他们重新紧紧地拥抱。这是真正的母子之爱。 


我还为了电影中的另一幕而潸然泪下，那就是Crowe和他妻子对话的那个结局部分。事实上，大部分情况下他自己都已经是一个死人，只是他自己并不知道。当他回来以后听到妻子在梦中想念他但是他却并不能叫醒她。他终于知道了事情真相，他于是只能在妻子的梦里来表达他的思念之情。当他自己那颗结婚戒指掉落到地面的一霎那，所有的事情都清楚了，他们之间的爱也清楚了：她仍然在爱着他。在这一刻，我真的无法阻止眼泪从脸颊落下。 


关于爱的另一个例子是Collins一家的遭遇。Kyla被自己的母亲长期喂药谋杀而死，这部影片并没有告诉我们为什么Kyla并没有在自己活着的时候告诉自己的父亲，但我猜她不想把这件事情公之于众正是因为她想有一个快乐的家庭。她爱每个人所以她不希望这个家最后四分五裂。这就是她对这个家的那份感情。 


如果她妈妈不对她的妹妹做同样事情的话，我想这个秘密会被永远雪藏。Kyla爱她的妹妹，她并不想自己的妹妹再受到伤害，所以她不得不把这样的消息通过Cole告诉自己的父亲。这是姐妹手足之情。 


爱贯穿始终，我想我们应该记住这部电影真正想要告诉我们的：请珍惜我们的爱。
&lt;/the&gt;
</description>
    </item>
    
    <item>
      <title>日本鬼子来了也找不到！</title>
      <link>http://lilifeng.net/blogs/2009/01/01/Joke-Japanese-Cannot-Find/</link>
      <pubDate>Thu, 01 Jan 2009 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>原生</category>
      
      
      <category>博文</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2009/01/01/Joke-Japanese-Cannot-Find/</guid>
      <description>&lt;p&gt;今天和老妈聊天，老妈说起了一件事。&lt;/p&gt;

&lt;p&gt;我妈爱干净，经常勤奋的收拾厨房，对厨房每个物品都想有个理想的摆放地点，有一次老妈下定决心收拾了一天厨房，把所有的餐具什么的都摆到了她认为很合适的地方。&lt;/p&gt;

&lt;p&gt;第二天我老爸做饭的时候，把厨房翻了个底朝天都没找到以前放在某处的东西，最后我妈去一下就找到了，我爸说了句：“你这样放，就是日本鬼子来扫荡都找不到！”。&lt;/p&gt;

&lt;p&gt;吃完饭我妈收拾厨房的时候，又把东西放到新位置。结果过了几天可怜的我爸又做饭的时候又找不到了~~~~&lt;/p&gt;

&lt;p&gt;囧~~~&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>关于缘分</title>
      <link>http://lilifeng.net/blogs/2008/12/28/About-Destiny/</link>
      <pubDate>Sun, 28 Dec 2008 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>原生</category>
      
      
      <category>博文</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2008/12/28/About-Destiny/</guid>
      <description>&lt;p&gt;[甲]“结婚是靠缘分，没有缘分再好也走不到一块去”非诚勿扰的台词&lt;/p&gt;

&lt;p&gt;[甲]“如果一定要结婚，又不可以跟自己爱的人在一起，那起码要找个知己”台词&lt;/p&gt;

&lt;p&gt;[乙]其实&lt;/p&gt;

&lt;p&gt;[乙]一直以来人们都被忽悠了&lt;/p&gt;

&lt;p&gt;[乙]什么是缘分&lt;/p&gt;

&lt;p&gt;[乙]你知道吗？&lt;/p&gt;

&lt;p&gt;[甲]恩&lt;/p&gt;

&lt;p&gt;[甲]就是无数的巧合碰一块，触动了你心里的那根弦&lt;/p&gt;

&lt;p&gt;[甲]你觉得呢&lt;/p&gt;

&lt;p&gt;[乙]不是&lt;/p&gt;

&lt;p&gt;[甲]那你说&lt;/p&gt;

&lt;p&gt;[乙]缘分是事后认为而已&lt;/p&gt;

&lt;p&gt;[乙]过程到底发生了什么？&lt;/p&gt;

&lt;p&gt;[乙]过程是两个人相互努力的过程&lt;/p&gt;

&lt;p&gt;[甲]可是，没有那么些巧遇，怎么会有以后的过程&lt;/p&gt;

&lt;p&gt;[乙]没有相互努力不会有结果，你觉得开始觉得有缘分的人最终一定会走到一起吗？&lt;/p&gt;

&lt;p&gt;[甲]那就是缘分不到&lt;/p&gt;

&lt;p&gt;[甲]我相信有缘，真是宿命论&lt;/p&gt;

&lt;p&gt;[乙]缘分不到仍然是事后的说法&lt;/p&gt;

&lt;p&gt;[甲]这虽然是宿命论，但是我信&lt;/p&gt;

&lt;p&gt;[甲]缘分会让你有那么一瞬的感觉&lt;/p&gt;

&lt;p&gt;[甲]佛不说吗？机缘济会&lt;/p&gt;

&lt;p&gt;[乙]这都是为了让劳苦大众自我安慰而已&lt;/p&gt;

&lt;p&gt;[乙]试想，当你和某人觉得有缘的时候，你们一定会在一起吗？&lt;/p&gt;

&lt;p&gt;[乙]那么有缘代表什么呢？&lt;/p&gt;

&lt;p&gt;[甲]不一定会&lt;/p&gt;

&lt;p&gt;[甲]但是缘分让你有了那么段美好的回忆&lt;/p&gt;

&lt;p&gt;[甲]这就够了&lt;/p&gt;

&lt;p&gt;[甲]就跟一个寓言说的&lt;/p&gt;

&lt;p&gt;[乙]缘分完全都是事后的说法&lt;/p&gt;

&lt;p&gt;[乙]关键在于过程你们是否双方都付出了努力&lt;/p&gt;

&lt;p&gt;[乙]当结婚的时候，会说我们真有缘份&lt;/p&gt;

&lt;p&gt;[乙]当离婚的时候，会说可能我们没有缘分&lt;/p&gt;

&lt;p&gt;[甲]百年修的同船度，千年修的共枕眠&lt;/p&gt;

&lt;p&gt;[乙]当复婚的时候，会说我们还真有缘分&lt;/p&gt;

&lt;p&gt;[甲]不是那么个说法&lt;/p&gt;

&lt;p&gt;[甲]有的人只有缘分做朋友，有的人却有缘分做夫妻&lt;/p&gt;

&lt;p&gt;[甲]不是有缘无缘，而是缘分多少&lt;/p&gt;

&lt;p&gt;[乙]如此说来，这个道理其实就是万事万物都是由联系的，只不过有的联系多些有的联系少些，联系=缘&lt;/p&gt;

&lt;p&gt;[甲]你终于有所悟&lt;/p&gt;

&lt;p&gt;[甲]可以这么说&lt;/p&gt;

&lt;p&gt;[乙]你要明白，一个事物和另一个事物的联系可以被这两个事物共同决定，而不是说两个事物生来就有固定的联系&lt;/p&gt;

&lt;p&gt;[乙]甚至可以被许多其他事物所联系&lt;/p&gt;

&lt;p&gt;[乙]所决定&lt;/p&gt;

&lt;p&gt;[甲]如果没有撞见，会有共同努力吗&lt;/p&gt;

&lt;p&gt;[甲]只有去寻去碰，才会有希望&lt;/p&gt;

&lt;p&gt;[乙]如果到了另一个地方，你仍然会和另外的人发生联系&lt;/p&gt;

&lt;p&gt;[甲]对&lt;/p&gt;

&lt;p&gt;[甲]可是，那根弦有可能将你带回原来的起点&lt;/p&gt;

&lt;p&gt;[乙]所以说，你和别人中的一个有缘是真的，并不是说你和某个固定的人有缘是真的&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>关于投资的谈话</title>
      <link>http://lilifeng.net/blogs/2008/12/21/About-Investment/</link>
      <pubDate>Sun, 21 Dec 2008 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>原生</category>
      
      
      <category>博文</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2008/12/21/About-Investment/</guid>
      <description>&lt;p&gt;[甲]你炒股吗&lt;/p&gt;

&lt;p&gt;[乙]不&lt;/p&gt;

&lt;p&gt;[乙]我向来不去高风险的地方&lt;/p&gt;

&lt;p&gt;[甲]那不是高风险&lt;/p&gt;

&lt;p&gt;[甲]是投资&lt;/p&gt;

&lt;p&gt;[甲]现在人必须有投资意识&lt;/p&gt;

&lt;p&gt;[甲]怎么也比钱存银行强&lt;/p&gt;

&lt;p&gt;[乙]呵呵，炒股确实是一种投资，但是在中国炒股是一种投机&lt;/p&gt;

&lt;p&gt;[甲]可以这么说吧&lt;/p&gt;

&lt;p&gt;[甲]国家不是正在让股市走上正轨吗&lt;/p&gt;

&lt;p&gt;[甲]要对政府有信心&lt;/p&gt;

&lt;p&gt;[乙]我是比较要求稳的那种。。&lt;/p&gt;

&lt;p&gt;[甲]我觉得炒股是一个成年人玩的游戏&lt;/p&gt;

&lt;p&gt;[甲]那你喜欢兢兢业业过日子&lt;/p&gt;

&lt;p&gt;[甲]节俭着过&lt;/p&gt;

&lt;p&gt;[乙]错了，我正觉得炒股是成年人用未成年人心态玩的游戏&lt;/p&gt;

&lt;p&gt;[甲]不见得,挑股票也有学问,不是瞎摸的&lt;/p&gt;

&lt;p&gt;[甲]如果你要求稳,你可以去买国债&lt;/p&gt;

&lt;p&gt;[甲]绝对保本,也有收益&lt;/p&gt;

&lt;p&gt;[甲]我最近比较喜欢中央二套的经济节目&lt;/p&gt;

&lt;p&gt;[甲]好多讲得比较好&lt;/p&gt;

&lt;p&gt;[乙]当你不能完全掌控一件事物的时候就去进行所谓的投资，这种情形完全是在看运气。&lt;/p&gt;

&lt;p&gt;[乙]国债可以考虑，但是如果这部分钱拿出来进行更有意义的活动不是更好吗？&lt;/p&gt;

&lt;p&gt;[甲]你要分析一下大势是在爬坡还是下坡就行了,不是你想象的那么可怕&lt;/p&gt;

&lt;p&gt;[甲]那你平常拿出这些钱来作什么&lt;/p&gt;

&lt;p&gt;[乙]如果我拿出这部分钱去学习某项技能，这项技能可能以后会在我被裁员的时候救我一命，或者可以让我每年增加几万的额外收益，这样不是
更好么？&lt;/p&gt;

&lt;p&gt;[乙]能不能学好一项技能恰恰是我们所能掌控的&lt;/p&gt;

&lt;p&gt;[甲]你说的是培训&lt;/p&gt;

&lt;p&gt;[甲]你说的固然有理,可是你没想过自己当自己的老板&lt;/p&gt;

&lt;p&gt;[乙]还有一点，怎么说，我现在还没有房贷压力可能不能体会。这部分钱用来提升生活质量&lt;/p&gt;

&lt;p&gt;[乙]正因为我不去炒股，所以我自己是自己的老板；如果我拿去投资，别人是这些钱的老板&lt;/p&gt;

&lt;p&gt;[甲]不是有句老话说的好:吃不穷,穿不穷,算计不到一辈子穷&lt;/p&gt;

&lt;p&gt;[乙]钱固然重要，但是更重要的是心态，总是想着钱，这辈子钱就是自己的主人了&lt;/p&gt;

&lt;p&gt;[甲]可能工作性质不同所导致的吧,我们这边只要签约,只要你不走,单位不会开除你的&lt;/p&gt;

&lt;p&gt;[甲]所以我们闲着没事,就会考虑这些事情&lt;/p&gt;

&lt;p&gt;[乙]呵呵，我上面所说的只是我个人想法&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>C++ STL 习题</title>
      <link>http://lilifeng.net/blogs/2006/05/19/CPP-Test-English/</link>
      <pubDate>Fri, 19 May 2006 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>原生</category>
      
      <category>C++</category>
      
      <category>STL</category>
      
      <category>试题</category>
      
      
      <category>Desktop</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2006/05/19/CPP-Test-English/</guid>
      <description>&lt;p&gt;#Questions:&lt;/p&gt;

&lt;p&gt;##BASE:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;which are wrong?&lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ia&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ivec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ivec&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ivec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ia&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ia&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;svec&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ivec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;svec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;null&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ol&gt;
  &lt;li&gt;Change code style to STL and compare their efficiency.&lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// ***** C-style character string implementation *****
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;errors&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;a very long literal string&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ix&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ix&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ix&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;len&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;strlen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pc&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pc2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;len&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;strcpy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pc2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pc&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;strcmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pc2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pc&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;errors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;delete&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pc2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;C-style character strings: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;errors&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; errors occurred.&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;3.accept some ints from standard input, then sort them and output to standard output. Please use STL as far as possible.&lt;/p&gt;

&lt;p&gt;##ADVANCED:&lt;/p&gt;

&lt;p&gt;1.What are the types of std::cin and std::cout? Write a console program ECHO that can be invoked by the following ways:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;    &lt;span class=&quot;no&quot;&gt;ECHO&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;infile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;outfile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;                             &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/[] indicates the infile is not necessary.
                                                        /&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;there&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;must&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;be&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;one&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;only&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;one&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;between&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;The&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;are&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;

    &lt;span class=&quot;no&quot;&gt;ECHO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;infile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;txt&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;outfile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;txt&lt;/span&gt;                         &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;infile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;txt&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;outfile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;txt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;ECHO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;infile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;txt&lt;/span&gt;                                     &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;infile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;txt&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;screen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;ECHO&lt;/span&gt;                                                &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;standard&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;standard&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
    
&lt;span class=&quot;nf&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;related&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:ofstream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ifstream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ostream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;istream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;2.Try your best to write a class to implement two-dimensional arrays like built-in type.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;YourClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;yc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;yc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;3.write a program to process students’ scores table(by using map/multimap).
    a.student infomation is like this:
            name, C++ basic score, C++ OOP score, C++ template score, C++ STL score, C++ MFC score
    b.sort by name.
    d.traverse infotable and generate the total score and average score to another table.
    e.output name, total score, average score and place for each student sorting by place.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;write a program to read words and calculate every word’s frequency from a file. Output the 20 words and frequency with most high frequency.&lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//
//Note:
//token - a set of characters bound on either side by spaces, the beginning of
//the input string parameter or the end of the input String parameter.
//word - a token that contains only letters (a-z or A-Z) and may end with a
//single period or a single comma. A word must have at least one letter. 
//
//  this is a word.
//          //token(4) : this is a word.
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;          &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;words&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;##EXPLORATION:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;How and when is std::auto_ptr used? can std::auto_ptr be put on argument list? why?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Compare vector with deque. When do we use each?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What does the following code do? write a better method.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;    &lt;span class=&quot;n&quot;&gt;vector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10000&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;erase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reserve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;4.what does the std::remove() algorithm do? Does the algorithm remove what should be removed really? What’s the difference in size and capacity between before and after? Write the right remove method.&lt;/p&gt;

&lt;p&gt;5.write a file_iterator，and 3 functors，to make the following code work：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// count of file entries in the directory
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Total count: &quot;&lt;/span&gt;
       &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;count_if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file_iterator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file_iterator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
                   &lt;span class=&quot;n&quot;&gt;always_true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file_iterator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value_type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
       &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// for_each() to display all entries
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;for_each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file_iterator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file_iterator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;display_file_entry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// accumulate() to add up the size of all file entries
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Total: &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;accumulate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file_iterator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file_iterator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                     &lt;span class=&quot;n&quot;&gt;file_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
       &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;bytes.&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;the test case(the program name is mydir)：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:\&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mydir&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Total&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;count: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;102487&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bytes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;##FUN:&lt;/p&gt;

&lt;p&gt;1.you want to write a class template C that can be instantiated only on types that have a member function named Clone() that takes no parameters and returns a pointer to the same kind of object.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//T must provide T* T::Clone() const
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typename&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;C&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;//
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;blockquote&gt;
  &lt;p&gt;Note: It’s obvious that if C writes code that just tries to invoke T::Clone() without parameters, then such code will fail to compile if there isn’t a T::Clone() that can be called without parameters.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;2.try the following code in VC6 and VC.net 2003 seperately:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;iostream&amp;gt;
#include &amp;lt;string&amp;gt;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;str1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello, World!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;str2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const_cast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c_str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;&#39;h&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Why are the results different?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>C++ Template 习题</title>
      <link>http://lilifeng.net/blogs/2006/05/17/Template-Test-English/</link>
      <pubDate>Wed, 17 May 2006 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>原生</category>
      
      <category>C++</category>
      
      <category>Template</category>
      
      <category>试题</category>
      
      
      <category>Desktop</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2006/05/17/Template-Test-English/</guid>
      <description>
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//
//因为这次公司培训机制改变为先发布题目，由学员看书做题，再由教员专向辅导。
//因此这次没有准备讲义，只把题目贴上来，朋友们也可以练练手，过几天把部分答案上传。
//本套题分为四个难度：BASE, ADVANCED, EXPLORATION, FUN. 思考难度指数分别大概是
//2，5，7，9（满分10）。其中BASE和ADVANCED是要求学员一定要做的。EXPLORATION
//是探索题目，FUN是探索题目做完后还有余力的一些很有意思有嚼头的题目。
//
//PS:自我感觉题目总体难度有些高，不知道学员能不能坚持下来...
&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;这里想要放一个目录链接到一下各个&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;section&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;的，但是不知道怎么做，有朋友知道的能说说吗？&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;BASE:
1． write the output.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;k&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Type&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;iostream&amp;gt;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;24&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;a:&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;b:&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;2． With the function Template:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;k&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
        &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;&#39; &#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;What is the template function prototype invoked by Show&amp;lt;10&amp;gt;(“abcdefghijklmn”)? What’s the output?&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;the program’s output is not right, please correct the following program with right semantics:&lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;k&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;maxEx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nFirst&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nSecond&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;maxEx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nFirst&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nSecond&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;            &lt;span class=&quot;c1&quot;&gt;//should be 16
&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;zoo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;ZOO&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;A&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;maxEx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                       &lt;span class=&quot;c1&quot;&gt;//should be zoo
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;maxEx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                       &lt;span class=&quot;c1&quot;&gt;//should be ZOO
&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;4.write the output of the following code.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;k&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;                    &lt;span class=&quot;c1&quot;&gt;// (d)
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;d&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;       &lt;span class=&quot;c1&quot;&gt;// (e)
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;e&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;                   &lt;span class=&quot;c1&quot;&gt;// (f)
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;f&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; 
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;                         &lt;span class=&quot;c1&quot;&gt;// (g)
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;g&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;                                  &lt;span class=&quot;c1&quot;&gt;// (h)
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;h&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;                   
    &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;42&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;             
    &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                 
    &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;                   

 &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;5.Case:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;k&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; 
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;TwoNum&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;private&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Type&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Type&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;TwoNum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;TwoNum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Type&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;aa&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Type&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Compare&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//比较a 和b的大小
&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Type&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 求a 和b的最大值
&lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Type&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 求a 和b的最小值
&lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Setab&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;aa&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;aa&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;Type&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;geta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;Type&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;TwoNum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TwoNum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Type&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;aa&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Type&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                   &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;aa&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TwoNum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Compare&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;iostream.h&amp;gt;
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;TwoNum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Compare&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;’&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;‘&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;’&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;‘&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;’&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;’&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;TwoNum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;’&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;’&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Compare&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;’&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;‘&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;’&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;‘&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Please write the output：&lt;/p&gt;

&lt;p&gt;6．Which of the following templates are illegal? Why?&lt;/p&gt;

&lt;p&gt;(1)&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;k&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Container1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Container1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;k&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Container1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Type&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Container1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Type&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;(2)&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;k&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Container2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;(3)&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;k&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typename&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;myT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;myT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Container3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;(4)&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;k&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Container4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Container4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;(5)&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;k&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Container6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;7．correct the class CList declaration (No need to implement the members.)&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;k&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;elementType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ListItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;elemType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CList&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;CList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;front&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;CList&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;insert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ListItem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;elemType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elemType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;elemType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;elemType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;elemType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;size_t&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;private&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ListItem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;elemType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;front&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ListItem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;elemType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;8.write the output for overload class template&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;k&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;mvector&lt;/span&gt;                &lt;span class=&quot;c1&quot;&gt;// (a)
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;mvector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&amp;gt;&lt;/span&gt;            &lt;span class=&quot;c1&quot;&gt;// (b)
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;b&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;  
&lt;span class=&quot;k&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;mvector&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&amp;gt;&lt;/span&gt;             &lt;span class=&quot;c1&quot;&gt;// (c)
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;c&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;mvector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&amp;gt;&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;vpm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;mvector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&amp;gt;&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;ipm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;mvector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;im&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;vpm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ipm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;im&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;ADVANCED:
1．Write a class template CVar&lt;typename&gt; which has following methods:&lt;/typename&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;     &lt;span class=&quot;n&quot;&gt;Operator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CVar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//plus
&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;Operator&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;–&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CVar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//division
&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;Operator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CVar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//assign
&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;Operator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CVar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//equal
&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;Operator&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;typename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;//cast
&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;Output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;       &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;’&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And other necessary members.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Write some global function template:&lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;     &lt;span class=&quot;n&quot;&gt;Operator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CVar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Typename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CVar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Typename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;Operator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CVar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Typename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CVar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Typename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You can try to comment CVar class operator +/- to test whether your global function is enable.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Write a specialized template class CVar&amp;lt;char*&amp;gt; and CVar&lt;bool&gt;.&lt;/bool&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//Note: Using your semantics to implement the algorithm.
// such as :            CVar&amp;lt;char*1&amp;gt; + CVar&amp;lt;char*2&amp;gt; : strcat();
//                          CVar&amp;lt;char*1&amp;gt; - CVar&amp;lt;char*2&amp;gt; : find all char*2 and delete them in char*1.
//                          CVar&amp;lt;bool&amp;gt;   + CVar&amp;lt;bool&amp;gt;   : &amp;amp;
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;                          &lt;span class=&quot;n&quot;&gt;CVar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CVar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ol&gt;
  &lt;li&gt;Write a template function my_sort as following:&lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt; &lt;span class=&quot;k&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typename&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my_sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;size_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//NOTE: 
//* Maybe you have to implement another 2 function templates:
&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typename&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my_max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lhs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rhs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typename&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;Void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my_swap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lhs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rhs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;//*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;you&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;can&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;decide&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;your&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;concrete&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sort&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;algorithm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;EXPLORATION:
1． Design a template queue class and implement the following members:&lt;/p&gt;

&lt;p&gt;(1) method void add(Type elem).     //add an element to tail.&lt;/p&gt;

&lt;p&gt;(2) method Type remove().           //remove element from head, and return the element.&lt;/p&gt;

&lt;p&gt;(3) method Type head().             //return the head value of queue.&lt;/p&gt;

&lt;p&gt;(4) method void clear().            //clear all queue.&lt;/p&gt;

&lt;p&gt;(5) method bool is_empty().         //indicate whether the queue is empty.&lt;/p&gt;

&lt;p&gt;(6) method size_t count().          //return the count.&lt;/p&gt;

&lt;p&gt;(7) nested class Iterator to traverse the queue.&lt;/p&gt;

&lt;p&gt;(8) method operator+=(Type elem).    //The same to add();&lt;/p&gt;

&lt;p&gt;(9) method operator–().             //The same to remove();&lt;/p&gt;

&lt;p&gt;(10) method Iterator begin().        //Return the begin of the queue.&lt;/p&gt;

&lt;p&gt;(11) method Iterator end().          //Return the end of the queue.&lt;/p&gt;

&lt;p&gt;Besides, define an global overload operator:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;    &lt;span class=&quot;k&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;to directly output all the values of queue item.&lt;/p&gt;

&lt;p&gt;the following is the test of your queue：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;iostream.h&amp;gt;
#include &quot;queue.h&quot;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Queue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;iq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;iq&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;iq&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;is_empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Removed : &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; Current Head : &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;is_empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Queue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Iterator&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iQueue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iQueue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iQueue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iQueue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iQueue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;iq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The ourput is：
Removed : 5 Current Head : 10
There are 9 queue items: &amp;lt; 10 15 20 25 30 35 40 45 50 &amp;gt;
10 15 20 25 30 35 40 45 50 
There are 0 queue items: &amp;lt; &amp;gt;&lt;/p&gt;

&lt;p&gt;2.design a class template CHash which algorithm is besed on buckets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;k&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;typename&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;typename&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CHash&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Iterator&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;CHash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;size_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nMax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
           &lt;span class=&quot;n&quot;&gt;ULONG&lt;/span&gt;        &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hashFunc&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Key&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tKey&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
           &lt;span class=&quot;n&quot;&gt;bool&lt;/span&gt;         &lt;span class=&quot;n&quot;&gt;bAutoSize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;CHash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CHash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CHash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;CHash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CHash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Iterator&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Iterator&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
 &lt;span class=&quot;kt&quot;&gt;size_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
 &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;insert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Key&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rValue&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
 &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;FUN:&lt;/p&gt;

&lt;p&gt;1.Write the output of the following code.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;IOSTREAM&amp;gt;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CalculateCycle&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;enum&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CalculateCycle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CalculateCycle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;enum&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iNo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;22&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Cycle length of &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iNo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; is = &quot;&lt;/span&gt; 
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CalculateCycle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iNo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;2.The following is a smart list. Please add other necessary implements to make it work.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;iostream&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typename&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CListTemplate&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CMyList&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CListTemplate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CMyList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;size_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CList&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;CList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CMyList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my_List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;//my_List.left-&amp;gt;left-&amp;gt;right-&amp;gt;elem = 10;
&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
    </item>
    
    <item>
      <title>剖析ActiveX控件安全问题</title>
      <link>http://lilifeng.net/blogs/2006/05/10/ActiveX-Safety/</link>
      <pubDate>Wed, 10 May 2006 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>原生</category>
      
      <category>C++</category>
      
      <category>ActiveX</category>
      
      <category>Safety</category>
      
      
      <category>Desktop</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2006/05/10/ActiveX-Safety/</guid>
      <description>&lt;p&gt;##1、介绍&lt;/p&gt;

&lt;p&gt;如果你曾经在网页或者ASP中使用过com对象，你可能会发现，有时候会出现这样讨厌的对话框&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/060510_1.jpg&quot; alt=&quot;对话框&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这是因为你的控件没有被标记为安全的，对于初始化不安全或者对于脚本不安全，甚至兼而有之。你每打开一次这样的网页，这种情况就会发生一次，你怎么办？当然，这可以通过设置IE本身的安全等级为low来解决这样的问题，但是如果你要制作一个可发布的控件，你能想象到每一位用户在使用你制作的控件时都要且列抱怨这种强制行为；或者如果你是其中一个使用者，当你同样遇到这种情况之后不得不将自己的IE安全等级设置为low，与此同时你平时上网过程中那些行为不轨的控件有时也会悄然而至，你的灾难来了！作为一个聪明的程序员，你不能要求任何用户做一些不切实际或者不够安全的改变来适应你的产品，因为你知道那只会使你的控件被逐渐打入冷宫，到最后销声匿迹，那不是你想要的。我们要消灭掉这样的对话框而且还不让用户发现丝毫安全上和使用上的失望。本文就是横向探讨在C++编程环境下如何消除这些问题的。&lt;/p&gt;

&lt;p&gt;##2、原理&lt;/p&gt;

&lt;p&gt;ActiveX控件是一种极其危险的提供功能的方法（目前正在被MS逐渐冷落），因为它是一种组建对象模型（COM）的对象，只要电脑的用户可以完成的任务，它都可以完成。比如它可以存取注册表，可以随意访问本地文件系统等等。一个网页上面的控件一般有2种不安全的状态，一种是脚本的不安全，一种是初始化的不安全。当用户将一个压缩解压缩控件指向一个远程被压缩的包含特洛伊木马的系统文件并且需要控件来解压缩这个文件时，系统安全会被打破。这个状态就是初始化的不安全。从代码的角度来讲，如果控件从IPersist派生，也就是说控件实现了永久性，那么就会触发unsafe for initializing。而在脚本程序安全执行以前，一个控件依赖于特定的系统设置，那么在允许这段代码运行之前，控件的开发人员需要提供一些必要的代码。从代码的角度来讲，如果控件从IDispatch派生，也就是说控件支持脚本，那么就会触发unsafe for scripting。&lt;/p&gt;

&lt;p&gt;从用户下载一个ActiveX控件开始，这个控件甚至可能很容易被攻击，因为网络上任何网络程序都可以使用它，无论是出于友好的目的还是恶意的目的。因此IE浏览器（本文只探讨IE内核的浏览器）总是试图弹出一个对话框来告诉你，这个控件可能是不安全的。这几乎总是一个很好的预防网络攻击的好方法，但是对于那些我们认为总是安全的控件，我们仍然要总是接受这种IE产生的干扰，这就使人厌烦了。其实当身为程序员的你写这样的安全控件时，这样的问题是很容易解决的。&lt;/p&gt;

&lt;p&gt;##3、解决方法&lt;/p&gt;

&lt;p&gt;目前，对这个问题的解决方法主要有几种：使用数字签名，继承IObjectSafety接口，修改注册表等。&lt;/p&gt;

&lt;p&gt;###3.1、使用数字签名
数字签名是一种使控件足够安全的方法，它通过特定的密钥来加密控件的使用，使得使用控件的对象能够根据密钥是否相符来检测控件是否足够安全。通常，拥有自己的可发布的数字签名是要Money的，本文是一篇技术文章，对此并不深入探讨，下面主要介绍代码方面的安全化。&lt;/p&gt;

&lt;p&gt;###3.2、继承IObjectSafety接口
IObjectSafety接口是在头文件”objsafe.h”中定义的接口，定义如下：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;n&quot;&gt;IObjectSafety&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IUnknown&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HRESULT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STDMETHODCALLTYPE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GetInterfaceSafetyOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; 
    &lt;span class=&quot;cm&quot;&gt;/* [in] */&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;REFIID&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;riid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/* [out] */&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DWORD&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pdwSupportedOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/* [out] */&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DWORD&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pdwEnabledOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HRESULT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STDMETHODCALLTYPE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SetInterfaceSafetyOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; 
    &lt;span class=&quot;cm&quot;&gt;/* [in] */&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;REFIID&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;riid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/* [in] */&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DWORD&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dwOptionSetMask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/* [in] */&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DWORD&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dwEnabledOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;其中参数意义如下：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//riid                Interface identifier for the object to be made safe. 
//
//dwOptionSetMask     Options to be changed. 
//
//dwEnabledOptions    Settings for the options that are to be changed. This can be one of the following values. 
//                    INTERFACESAFE_FOR_UNTRUSTED_CALLER
//                        Indicates the interface identified by riid should be made safe for scripting. 
//                    INTERFACESAFE_FOR_UNTRUSTED_DATA
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;                        &lt;span class=&quot;n&quot;&gt;Indicates&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;identified&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;riid&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;should&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;be&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;made&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;safe&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;untrusted&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;during&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;initialization&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;这个接口允许容器询问控件是否安全或者改变控件的安全属性。目前IObjectSafety支持四种安全属性，但是一般我们只使用前两个：脚本安全和初始化安全。这些属性定义如下：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Option bit definitions for IObjectSafety:
&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;#define    INTERFACESAFE_FOR_UNTRUSTED_CALLER        0x00000001    // Caller of interface may be untrusted
#define    INTERFACESAFE_FOR_UNTRUSTED_DATA          0x00000002    // Data passed into interface may be untrusted
#define    INTERFACE_USES_DISPEX                     0x00000004    // Object knows to use IDispatchEx
#define    INTERFACE_USES_SECURITY_MANAGER           0x00000008    // Object knows to use IInternetHostSecurityManager&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;####3.2.1、实现方法&lt;/p&gt;

&lt;p&gt;首先包含头文件&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#include &quot;objsafe.h&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;然后是自己的控件类继承IObjectSafetyImpl&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;YourClass&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IObjectSafetyImpl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;YourClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INTERFACESAFE_FOR_UNTRUSTED_CALLER&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INTERFACESAFE_FOR_UNTRUSTED_DATA&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;其中&lt;code class=&quot;highlighter-rouge&quot;&gt;INTERFACESAFE_FOR_UNTRUSTED_CALLER | INTERFACESAFE_FOR_UNTRUSTED_DATA&lt;/code&gt;代表默认这个控件是脚本安全而且初始化安全的。然后在com接口表中添加接口名&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;n&quot;&gt;BEGIN_COM_MAP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CCGrid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;COM_INTERFACE_ENTRY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IObjectSafety&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;END_COM_MAP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;OK，大功告成。这也是一种很简单的方法。&lt;/p&gt;

&lt;p&gt;###3.3、修改注册表&lt;/p&gt;

&lt;p&gt;修改注册表项使控件支持安全类别的原理，归根到底其实就是下面的第三个方法，另外两个方法都是对这个方法的外围包装和更加安全的处理。修改注册表在不同的工程中有着不同的表现：&lt;/p&gt;

&lt;p&gt;####3.3.1、用于ATL属性工程的com接口&lt;/p&gt;

&lt;p&gt;因为VC的属性工程已经加入了安全控件的注册表支持，并且直接加入了关键字implements_category，因此我们仅仅象下面这样既可完成安全属性设置：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;coclass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;progid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vi_prgid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;            &lt;span class=&quot;c1&quot;&gt;//必须至少有其中一个
&lt;/span&gt;    
    &lt;span class=&quot;n&quot;&gt;implements_category&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;CATID_SafeForScripting&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;implements_category&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;CATID_SafeForInitializing&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;不过要注意的是，对于类似下面的代码（往往是非属性工程的）是不能添加的：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;uuid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;helpstring&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;coclass&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;YourCtrl&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dispinterface&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;因为这种coclass是IDL的属性，而IDL本身并没有安全功能。&lt;/p&gt;

&lt;p&gt;而上面的那种coclass是VC的属性，MS提供了对安全控件的支持。&lt;/p&gt;

&lt;p&gt;####3.3.2、主要用于非属性工程的通用方法&lt;/p&gt;

&lt;p&gt;在类声明文件中加入头文件&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#include &quot;objsafe.h&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;在类声明中添加如下代码：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;   &lt;span class=&quot;n&quot;&gt;BEGIN_CATEGORY_MAP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;YourCtrlClassName&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;IMPLEMENTED_CATEGORY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CATID_SafeForScripting&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;IMPLEMENTED_CATEGORY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CATID_SafeForInitializing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;END_CATEGORY_MAP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;即可使其支持safety属性，当然你也可以选择性的只支持一种安全属性。&lt;/p&gt;

&lt;p&gt;####3.3.3、主要用于MFC ActiveX Control的通用方法&lt;/p&gt;

&lt;p&gt;在$project.cpp文件中添加以下代码：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#include &quot;comcat.h&quot;
#include &quot;Objsafe.h&quot;
&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 控件的CLSID,注册表用（一定要是实际使用的控件的）
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GUID&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CDECL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CLSID_SafeItem&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x7AE7497B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0xCAD8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x4E66&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0xA5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x8B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xDD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xE9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xBC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xAF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x6B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x61&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 版本控制
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WORD&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_wVerMajor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 次版本号
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WORD&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_wVerMinor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//////////////////////////////////////////////////////////////////////
// 创建组件种类
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HRESULT&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;CreateComponentCategory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CATID&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;catid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WCHAR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;catDescription&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ICatRegister&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pcr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;HRESULT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;S_OK&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;hr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CoCreateInstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CLSID_StdComponentCategoriesMgr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CLSCTX_INPROC_SERVER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IID_ICatRegister&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pcr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FAILED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// Make sure the HKCR\Component Categories\{..catid}
&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;// key is registered.
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;CATEGORYINFO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;catinfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;catinfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;catid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;catid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;catinfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lcid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x0409&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// english
&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Make sure the provided description is not too long.
&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;// Only copy the first 127 characters if it is.
&lt;/span&gt;    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;len&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wcslen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;catDescription&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;127&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;len&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;127&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;wcsncpy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;catinfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;szDescription&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;catDescription&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// Make sure the description is null terminated.
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;catinfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;szDescription&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;&#39;\0&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;hr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pcr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RegisterCategories&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;catinfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pcr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Release&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 注册组件种类
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HRESULT&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;RegisterCLSIDInCategory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;REFCLSID&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clsid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CATID&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;catid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// Register your component categories information.
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;ICatRegister&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pcr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;HRESULT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;S_OK&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;hr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CoCreateInstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CLSID_StdComponentCategoriesMgr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CLSCTX_INPROC_SERVER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IID_ICatRegister&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pcr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SUCCEEDED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// Register this category as being implemented by the class.
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;CATID&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rgcatid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;rgcatid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;catid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;hr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pcr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RegisterClassImplCategories&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clsid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rgcatid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pcr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;pcr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Release&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 卸载组件种类
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HRESULT&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;UnRegisterCLSIDInCategory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;REFCLSID&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clsid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CATID&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;catid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ICatRegister&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pcr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;HRESULT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;S_OK&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;hr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CoCreateInstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CLSID_StdComponentCategoriesMgr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CLSCTX_INPROC_SERVER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IID_ICatRegister&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pcr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SUCCEEDED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// Unregister this category as being implemented by the class.
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;CATID&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rgcatid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;rgcatid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;catid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;hr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pcr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UnRegisterClassImplCategories&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clsid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rgcatid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pcr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;pcr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Release&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;修改以下函数：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// DllRegisterServer - Adds entries to the system registry
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;STDAPI&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;DllRegisterServer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;HRESULT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;AFX_MANAGE_STATE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_afxModuleAddrThis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AfxOleRegisterTypeLib&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AfxGetInstanceHandle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_tlid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ResultFromScode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SELFREG_E_TYPELIB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;COleObjectFactoryEx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UpdateRegistryAll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ResultFromScode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SELFREG_E_CLASS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 标记控件初始化安全.
&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;// 创建初始化安全组件种类
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;hr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CreateComponentCategory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CATID_SafeForInitializing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;L&quot;Controls safely initializable from persistent data!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FAILED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 注册初始化安全
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;hr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RegisterCLSIDInCategory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CLSID_SafeItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CATID_SafeForInitializing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FAILED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 标记控件脚本安全
&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;// 创建脚本安全组件种类 
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;hr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CreateComponentCategory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CATID_SafeForScripting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;L&quot;Controls safely scriptable!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FAILED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 注册脚本安全组件种类
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;hr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RegisterCLSIDInCategory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CLSID_SafeItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CATID_SafeForScripting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FAILED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NOERROR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//////////////////////////////////////////////////////////////////
// DllUnregisterServer - Removes entries from the system registry
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;STDAPI&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;DllUnregisterServer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;HRESULT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;AFX_MANAGE_STATE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_afxModuleAddrThis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AfxOleUnregisterTypeLib&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_tlid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_wVerMajor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_wVerMinor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ResultFromScode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SELFREG_E_TYPELIB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;COleObjectFactoryEx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UpdateRegistryAll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FALSE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ResultFromScode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SELFREG_E_CLASS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 删除控件初始化安全入口.
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;hr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UnRegisterCLSIDInCategory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CLSID_SafeItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CATID_SafeForInitializing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FAILED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 删除控件脚本安全入口
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;hr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UnRegisterCLSIDInCategory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CLSID_SafeItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CATID_SafeForScripting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FAILED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;//////////////////////////
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NOERROR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;至此对工程的修改完成了，现在控件就可以在自注册时就注册为安全控件了！&lt;/p&gt;

&lt;p&gt;####3.3.4、手动修改注册表&lt;/p&gt;

&lt;p&gt;我们可以自己手动为控件在注册表中添加安全支持，实际上我们所需要的两个项（Key）就是这样的形式：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HKEY_LOCAL_MACHINE&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SOFTWARE&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Classes&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CLSID&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GUID&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;control&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Implemented&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Categories&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GUID&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;category&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;ActiveX SDK头文件ObjSafe.H 已经为类别CATID_SafeForInitializing和CATID_SafeForScripting定义了GUID值。因此对于特定的工程，如果控件类的GUID是{20048BB3-DB68-11CF-9CAF-00AA006CB425}，那么我们就只需要添加两个注册表项：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;   &lt;span class=&quot;n&quot;&gt;REGEDIT4&lt;/span&gt;
       
   &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HKEY_CLASSES_ROOT&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CLSID&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20048&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BB3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DB68&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CF&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CAF&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AA006CB425&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Implemented&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Categories&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
       
   &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HKEY_CLASSES_ROOT&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CLSID&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20048&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BB3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DB68&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CF&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CAF&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AA006CB425&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Implemented&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Categories&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DD95801&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9882&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CF&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FA9&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AA006C42C4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;
       
   &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HKEY_CLASSES_ROOT&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CLSID&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20048&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BB3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DB68&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CF&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CAF&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AA006CB425&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Implemented&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Categories&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DD95802&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9882&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CF&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FA9&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AA006C42C4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;将以上代码拷贝到一个*.reg中去，保存后执行就可以将GUID为{20048BB3-DB68-11CF-9CAF-00AA006CB425}的控件类注册为安全控件。有时候注册表中不一定有那两个类别，因此我们还需要自己来描述这两个重要的类别：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;n&quot;&gt;REGEDIT4&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HKEY_CLASSES_ROOT&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Categories&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HKEY_CLASSES_ROOT&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Categories&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DD95801&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9882&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CF&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FA9&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AA006C42C4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&quot;409&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Controls that are safely scriptable&quot;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HKEY_CLASSES_ROOT&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Categories&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DD95802&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9882&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CF&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FA9&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AA006C42C4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&quot;409&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Controls safely initializable from persistent data&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;同样，将以上代码拷贝到*.reg文件中执行后，就可以生成这两个类别。以后就可以使用这两个类别来注册安全控件了。注意：除非你没有别的办法，千万不要使用这个方法，也不要使用这个方法来标记实际上并不安全的控件为安全控件。&lt;/p&gt;

&lt;p&gt;那么方法3和方法1和2有什么不同的呢？其实他们最大的不同就是方法1和2实际上都加入各种判断代码在修改注册表之前和之后，实际上也防止了不安全控件注册为安全控件的行为。因此除非万不得已，不要用方法3。就算是方法1和方法2，也要在确定自己控件足够安全的情况下才使用。&lt;/p&gt;

&lt;p&gt;###3.4、另一个问题&lt;/p&gt;

&lt;p&gt;在施行了这些方法后，那个讨厌的对话框没了，但是对于window XP SP2及以上版本来说，用默认安全级别的IE打开任何包括了控件或者脚本的网页时，在运行代码前都会弹出一个这样的条框:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/060510_2.jpg&quot; alt=&quot;对话框&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/060510_3.jpg&quot; alt=&quot;对话框&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/060510_4.jpg&quot; alt=&quot;对话框&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这也是为了不断提醒用户这样的操作可能会有安全上的危险，可是这样也会影响用户的操作，对于一个频繁访问的某一个页面来说，这个横条和对话框都是不易忍受的，如果你正在编写这样包括脚本和控件的页面，那么这里有一个窍门来解决这样的问题。请把下面这句加在网页文件源代码的&amp;lt;html&amp;gt;和&amp;lt;head&amp;gt;之间：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;saved&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;0017&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;://&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;localhost&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;在你做网页时，如果网页需要运行ActiveX或脚本，并且他们位于客户端以外的地方，那么可以添加这个注释语句，IE当然不会不理他， IE会按照他指出的URL去找脚本的位置。 这句话的作用是让Internet Explorer 使用 Internet 区域的安全设置，而不是本地计算机区域的设置。其中0017代表后面网址的字符个数，后面的网址字符串要指向注册了这个组件或脚本的地方。如果是象上面那样，就表明是在自己的电脑上。把这句话删除，有些脚本就不执行了。&lt;/p&gt;

&lt;p&gt;###3.5、什么是足够安全的控件&lt;/p&gt;

&lt;p&gt;我怎么知道我的控件是不是足够安全呢？请好好看看这一节。一旦标注出现在控件上而非网页上时，那些标注为安全的控件就一定要在所有可能的网页上是安全的。因此一个控件被标注为安全的就表示它能够保护自己并与网页制作者可能在初始化或脚本过程中做的不愉快的东西隔离。实际上很容易检验当被用于网页时一个控件是否安全的：当你标注你的控件为初始化安全时，相当于你在发誓无论用什么样的值来初始化你的控件，都不可能发生伤害用户的系统或者威胁到用户的安全；当你标注你的控件为脚本安全时，那就是说你有把握说无论控件的函数和属性如何被网页的脚本操作，控件本身都不会做出危及用户安全的行为。换句话说，它必须接受任何脚本中任何顺序的函数和/或属性调用而不会发生危险。　在设计控件过程中，下面是一些表明此控件是安全的条款：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;不要操作用户的文件系统；&lt;/li&gt;
    &lt;li&gt;不要操作注册表（除非是注册和注销它本身）；&lt;/li&gt;
    &lt;li&gt;不要数组越界或其他的内存错误；&lt;/li&gt;
    &lt;li&gt;验证（或更正）所有的输入，包括初始化，方法的参数和属性的Set函数；&lt;/li&gt;
    &lt;li&gt;不要滥用与用户有关的活是用户提供的数据；&lt;/li&gt;
    &lt;li&gt;做大量的测试。&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;这份表还远没有结束，但这些至少都是必要的。还有一点很重要，就是千万不要把本来实际上不安全的控件注册为安全的，尽管这很诱人（比如说你没有控件的源代码）。无论控件做什么事情的，一旦控件被标注为安全的，那么所有的网页都会省略对这个控件的安全检测。到目前为止，还没有方法能把一个控件标注为仅对特定网页是安全的。标注不安全控件为安全空间的一个简单安全的选择就是写一个包含了不安全控件的新安全控件。只要确保新安全控件的初始化，方法和属性都是安全的就行了。&lt;/p&gt;

&lt;p&gt;##4、总结&lt;/p&gt;

&lt;p&gt;控件的安全问题可以通过各种各样的方法来巧妙的解决，但是对于一个负责的程序员来说，一定要确保控件本身是绝对安全的。一个欲发布的控件往往是要有用户使用的，如果本身不安全的控件被当成安全的控件流传出去，那就是恶意行为了。为了对用户负责，也为了对自己负责，程序员一定要再三检查自己的控件是否足够安全，而后再决定是否发布及以何种方式发布。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>西山居士的宇宙模型遐想</title>
      <link>http://lilifeng.net/blogs/2006/04/30/Universe-Think/</link>
      <pubDate>Sun, 30 Apr 2006 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>原生</category>
      
      <category>宇宙</category>
      
      <category>遐想</category>
      
      
      <category>博文</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2006/04/30/Universe-Think/</guid>
      <description>&lt;p&gt;以前学习了物理中原子等知识的时候我就有这种想法了，后来不时又在这么想，现在有了blog那就放上来好了：&lt;/p&gt;

&lt;p&gt;空间无限大,时间无限长。&lt;/p&gt;

&lt;p&gt;太阳系由一颗太阳和九大行星组成，银河系由非常多太阳系这样的星系组成，而更远更大的星系团等由许多的银河系这样的星系组成。&lt;/p&gt;

&lt;p&gt;生物由不同的细胞组成，这些细胞都很像，细胞里面又有很多结构，每个结构又由许多的分子等组成。&lt;/p&gt;

&lt;p&gt;分子由原子组成，原子由原子核和电子组成，原子核又可逐渐往下细分。&lt;/p&gt;

&lt;p&gt;根据量子物理学原理，质量越大时间越慢,质量越小时间越快。用我们的眼光看宇宙的运行速度(相对)，几乎每天晚上的星座方位变化不大；但是用我们的眼光看分子内电子等的运动，又觉得非常快,其轨迹甚至不明所以。&lt;/p&gt;

&lt;p&gt;当我们有一天可以用10的20次方frames/sec的摄像机拍摄电子表面及其活动时，也许会惊奇的发现，真的是天下没有完全相同的物质，每个电子都不同，而且越看越觉得很熟悉，像极了现实中的星球。也许电子表面也在不停的变化，前后两桢显示的是不同的时代，也许也存在着昙花一现的生物。但是那一定只是一瞬间而且他们的力量不足以动摇整个原子。&lt;/p&gt;

&lt;p&gt;换一个角度，我们，太阳系，银河系共同组成了更庞大物质的一个小部分，也许宇宙的膨胀与收缩只是那个物质的一呼吸间，一次“心跳”（如果它也会的话）。也许有一天那个物质被同一个维的智能生物使用我上面说的那种方法在观察我们的太阳系（对于他们，也许只是一个分子甚至更小），当然，他们的一秒相当于我们的非常长的时间，也许是10的10次，也许是10的20次，甚至更多。&lt;/p&gt;

&lt;p&gt;不同的维度物质不能跨越自己的维度。我们如果要向高一维的物质发出信号，那么也许到地球毁灭的时候它才可以看到，太阳系毁灭的时候它才能知道这是信号，银河系毁灭的时候才能研究出来如何给我们发消息，它每说一个字，我们就要死掉100代。这也许只是个笑话，但是这也许可以很好的解释了其中的关系。&lt;/p&gt;

&lt;p&gt;没错，一切都是时间搞的鬼。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>【翻译】 对话：换个名字</title>
      <link>http://lilifeng.net/blogs/2005/12/20/Translation-Dialog-Change-Name/</link>
      <pubDate>Tue, 20 Dec 2005 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>原生</category>
      
      <category>C++</category>
      
      <category>OOP</category>
      
      <category>Design Pattern</category>
      
      <category>翻译</category>
      
      
      <category>Desktop</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2005/12/20/Translation-Dialog-Change-Name/</guid>
      <description>&lt;p&gt;仅仅挂起100公里的距离，小行星就迅速占满了我们的视线。它的表面看起来就像碎过又用冰粘起来的杯子。很多的冰河在交错的小山脊间静静的流淌。木卫二，荒凉而美丽的地方。&lt;/p&gt;

&lt;p&gt;这时喇叭响起，“请大家登机，三号舱和七号舱。”然后又安静下来了。&lt;/p&gt;

&lt;p&gt;Jeannine和我在一小群专家团同事们中挤到窗口附近，大概我们很多人正在像发呆的学生们一样看着整个世界。我们不在乎。当然在飞船里面的任何屏幕都可以更好的观察，但这里有些很特殊很原始的光线，那是从月亮直接反射到我们的眼睛里面的光线。&lt;/p&gt;

&lt;p&gt;“一个可以观察的很好的地方，”Jeannine跃跃欲试，“他们仍然对谣言很谨慎。”&lt;/p&gt;

&lt;p&gt;“还没开始‘谨慎’。Ganymede这么说，Ganymede又那么说。他们本已告诉我们真正的目的了。”&lt;/p&gt;

&lt;p&gt;“是的。我确定我们不久会在冰层下面找出他们发现的东西。”&lt;/p&gt;

&lt;p&gt;“嗯？恩。”我反应了一下。“我很高兴能成为这里的参观者。我从前就已经看到了这漂亮虚幻的一幕，这很好了已经，不，更好了。我们真的在这里了。这让我想起了我的第一个工作。”&lt;/p&gt;

&lt;p&gt;她调皮的喷了口鼻息。“每件事情都会让你想起你的第一份工作。”&lt;/p&gt;

&lt;p&gt;“所以我才年轻又敏感。总之，现在参观到这里的一番谈话又让我想起了它。”&lt;/p&gt;

&lt;p&gt;“阿。”顿了顿，吊吊胃口，然后：“你的意思是？”&lt;/p&gt;

&lt;p&gt;我笑了，继续讲述。。。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;我一直在与一个设计问题作斗争。我很想独立解决，因为我的试用期快结束了并且我想证明我自己。你也还记得你试用期之后的第一份工作，是吧？把事情做好是多么重要的事情？我亲眼看到其他的新员工没有通过试用期因为他们对付不了Guru。别误会，它是很出色的程序员，只不过有点古怪。现在她是我的老师，不为别的，就是因为我想向她证明我自己的能力。&lt;/p&gt;

&lt;p&gt;我在一个类体系里需要一个新的虚函数，但是另一个组在维护它并且不会让别人改动它的。它看起来是这样的：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Personnel&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Pay&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/**/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Promote&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/**/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Accept&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PersonnelV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;// other functions 
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Officer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Personnel&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/* override virtuals */&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Captain&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Officer&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/* override virtuals */&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;First&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Officer&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/* override virtuals */&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;我需要一个函数，如果对象是船长，做一件事；如果是大副，就做另一件事。一个在Personnel或Officer声明在Captain和First里覆盖的虚函数本可以完成完成这件事的。&lt;/p&gt;

&lt;p&gt;问题在于我不能增加一个函数。我知道我也能通过简单的增加使用RTTI的类型检测来完成工作，比如：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Officer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;dynamic_cast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Captain&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;cm&quot;&gt;/* do one thing */&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;dynamic_cast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;First&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;cm&quot;&gt;/* do another thing */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;Captain&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;First&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;但是我知道在公司的代码标准里这样的类型检测是不允许的。“我不喜欢它，”我对自己说，“但是我想我这次必须要改变对它的看法了。显然没有其他方法了。”&lt;/p&gt;

&lt;p&gt;“任何问题都可以通过增加一个中间层的方法来解决。”&lt;/p&gt;

&lt;p&gt;我被身后Guru的声音吓了一跳。“什么？”我问道，转向了她。&lt;/p&gt;

&lt;p&gt;“任何问。。。”&lt;/p&gt;

&lt;p&gt;“是的，”我打断了她，忘了自己是谁了。“我听到你说的了，我只是不知道你从哪里来的。”我想这是我的掩饰。没人敢打断她的谈话。&lt;/p&gt;

&lt;p&gt;“阿，但你知道的。”Guru斜着眼看着我，“你知道的，我的小学徒。”她注视了我一会，然后提高声音说，“孩子，C语言的弟子们会常用switch判断来控制对象类型的程序流。看看这个。”她拿起了一支涂写笔：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/* A not-atypical C program */&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;someStruct&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;APPLE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;cm&quot;&gt;/* do one thing */&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ORANGE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;cm&quot;&gt;/* do another thing */&lt;/span&gt;
 &lt;span class=&quot;cm&quot;&gt;/*  etc.  */&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;“当那些弟子们学习先知Stroustrup时，”她继续说，“在学习C++方面，他们必须学习如何设计好的类体系结构。”&lt;/p&gt;

&lt;p&gt;“是的，”我又一次打断了她，急于显示我确实知道。“他们应该建立一个类结构体系来把Fruit作为积累，派生出Apple类和Orange类。那么‘do something’的代码会成为派生类的虚函数。”&lt;/p&gt;

&lt;p&gt;“很好，孩子。C++的弟子们常常会用我刚刚讲的比喻来劝C的弟子们改变作风，他们指出switch状态检测是一种有错误倾向的需要常常维护的事情。但是，看看这个比喻的另一种方法：通过引入了一个虚函数，你增加了一个中间层。”她放下笔，“你需要的不就是一个新的虚函数吗？”
“阿，对。我知道，”我马上神气起来。“但我不能在这里那样做。”&lt;/p&gt;

&lt;p&gt;她点了点头。“因为你不能修改类结构，对吧。”&lt;/p&gt;

&lt;p&gt;这又使我恢复了平静，不过只是一瞬间。“哦，你知道了？我们不能改动它？原来你知道阿。”&lt;/p&gt;

&lt;p&gt;“哦，是的。是我设计的这个结构。”&lt;/p&gt;

&lt;p&gt;“哦。”这完全浇灭了我。&lt;/p&gt;

&lt;p&gt;“这个结构必须非常稳定，因为有不多见的跨平台的依赖性。但是这样设计出来是让你增加虚函数来避免switch类型的代码的。你可以通过增加一个中间层来解决你的问题。在想象那个比喻。知道Personnel::Accept是什么吗？”&lt;/p&gt;

&lt;p&gt;“唔，恩？”我含糊了声。&lt;/p&gt;

&lt;p&gt;“这个类实现了一个未命名的模式（PNP）。也就是Visitor模式。”&lt;/p&gt;

&lt;p&gt;“唔！”我说，现在有点明白了。“我已经看过Visitor了。但是那只是为允许对象之间可以迭代访问的机制。不是吗？”&lt;/p&gt;

&lt;p&gt;她叹了口气，“这是流行的误解。想想那个V的意思，与其叫Visitor，不如叫Virtual，”她解释说。“这个PNP的最有用的应用就是允许增加虚函数到一个已存在的类结构里面，而不用改变现有的类结构。记得开始Personnel里面实现的那个Accept和它的子类吗？”她在下面的代码停了下来：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Personnel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Accept&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PersonnelV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Visit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Officer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Accept&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PersonnelV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Visit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Captain&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Accept&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PersonnelV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Visit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;First&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Accept&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PersonnelV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Visit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;“而且，”她继续说道，“Visitor的基类是这样的：”&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;PersonnelV&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/*Visitor*/&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Visit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Personnel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Visit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Officer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Visit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Captain&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Visit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;First&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;“阿，”我说，我想起来了。“那么当我写了使用派生自Personnel的对象的代码时，我只要调用Personnel::Accept( myVisitorObject )，因为Accept是一个虚的myVisitorObject。Visit会被正确的继承类型来调用，重载机制会选择正确的函数。那就相当于增加了一个新的虚函数了，是吗？”&lt;/p&gt;

&lt;p&gt;“确实，孩子。新增加的函数一般要用客户类的公有接口，但是怀着尊敬，它能并且在表现的像个虚函数而并不通过成员。我们所需要的就是原有的体系支持的借口Accept，就像是开放自己用于扩展。如果以后我们发现我们常常要通过新的子类来扩展访问到的Personnel体系，或者我们想更好的管理重新编译的依赖性，我们可以移植到非循环的Visitor（Acyclic Visitor）–在它们Accept函数重新声明前就不再需要改动Personnel和它的子类。”&lt;/p&gt;

&lt;p&gt;我知道了。“ok，那么我可以这样做：”我快速的写下了：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DoSomething&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PersonnelV&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Visit&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Personnel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Visit&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Officer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Visit&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Captain&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Visit&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;First&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DoSomething&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Visit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Captain&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;femaleGuestStarIsPresent&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TurnOnCharm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;StartFight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DoSomething&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Visit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;First&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RaiseEyebrowAtCaptainsBehavior&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Guru对我的代码很满意了。“你刚才说这样的代码是为什么系统工作的呢？”&lt;/p&gt;

&lt;p&gt;“阿…一个模拟器？”&lt;/p&gt;

&lt;p&gt;“我知道。继续，孩子，写出剩下的代码。”我又增加了下面的代码：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Personnel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Accept&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DoSomething&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// like p.DoSomething()
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Captain&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;First&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Guru走回去了，又把她那独特的声音塞入我的耳朵。“确实，这个函数并不通过Personnel::域名字直接继承自原来的体系了。在这个例子里，换了另一个名字的函数仍然是虚的。”他笑了笑，悄悄地走了。她的话又飘了出来直到她走出我的视线：“Visitor模式换个名字会仍然有用，甚至会更合适的描述。但是世事难料啊。。。”&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;宏伟的木星显得很庄严，甚至淡化了木卫二表面的美丽，当飞船旋转的时候，木星开始进入屏幕视角。&lt;/p&gt;

&lt;p&gt;“我会申请一些表面合适的时间，”我决定。“多么适合散步的天空阿。甚至我只是一个参观者。”&lt;/p&gt;

&lt;p&gt;“我们都是参观者，”Jeannine同意道。“但是我觉得，我们是第一个吗？”&lt;/p&gt;

&lt;p&gt;随后片刻，我们都只是静静地观看。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>【翻译】 对话：接触指针</title>
      <link>http://lilifeng.net/blogs/2005/11/28/Translation-Dialog-Touching-Pointers/</link>
      <pubDate>Mon, 28 Nov 2005 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>原生</category>
      
      <category>C++</category>
      
      <category>boost</category>
      
      <category>翻译</category>
      
      
      <category>Desktop</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2005/11/28/Translation-Dialog-Touching-Pointers/</guid>
      <description>&lt;p&gt;“哎呀！”&lt;/p&gt;

&lt;p&gt;这是我一小时内第七次受挫了。显然Wendy很讨厌我这样。“看就看吧，朋友，安静一会行不行？”她的声音飘出了隔间。貌似比她先前的反应好些。&lt;/p&gt;

&lt;p&gt;我正是在auto_ptrs这里摔跤了。在为Guru工作的前些天里，我已经了解了auto_ptrs的好处-以及他们并不很明显的缺陷。我已经被auto_ptrs的奇怪的所有权语义刺痛了。auto_ptr是用move操作来代替copy操作，想象一下：当你走近一台影印机，把材料放进进纸器，按下“Copy”按钮。几分钟之后，影印机给了你一份拷贝-然后把原文扔进了碎纸机。这正好和auto_ptr的拷贝和赋值做的一样。&lt;/p&gt;

&lt;p&gt;总之，虽然我很聪明还有更多的经验，我仍然撞在了auto_ptr的各种限制上面。auto_ptr不能持有指向数组的指针， 我打算通过以下删除数组的方式来玩玩它：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;n&quot;&gt;auto_ptr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;autoArray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//...
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;delete&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;autoArray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;release&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;但是我几乎马上抛弃了这个主意。甚至我可以看到这个“憎恶（abomination）（正如Guru说的）”的很多危害。全部的，恩，全部的auto_ptr的要点都是用于拥有和销毁内存的；要是手动处理就完全违背了其目的。&lt;/p&gt;

&lt;p&gt;因此我决定使用vector来取代拥有一个array， 这将比我需要的更强大，因为我不需要vector的动态调整大小，但它却符合我的目的。我真正想要的是一个能自动持有指针和内存管理权的智能指针，来让我可以用来操作一个数组。&lt;/p&gt;

&lt;p&gt;“使用Boost， Luke，”我听到了背后Guru的声音。&lt;/p&gt;

&lt;p&gt;“不是“使用Force，Luke”吗？”我耸耸肩，“还有，不要叫我Luke。”&lt;/p&gt;

&lt;p&gt;“Boost库将是一个强大的支持，”Guru继续她的完美表演。&lt;/p&gt;

&lt;p&gt;虽然我今天不在状态，但我仍打断了她。“阿，我们今天能不能不要表演了？Bob在我们伦敦的办公室，没有实习医生可以处理反常者了。”&lt;/p&gt;

&lt;p&gt;她来到我旁边，我看到她笑着耸了耸肩，“哦，我刚才觉得很无聊，”她叹了口气，“你检验过Boost库的智能指针了吗？”&lt;/p&gt;

&lt;p&gt;“唔，好吧，”我犹豫了，“我还没机会看Boost库的细节。使用智能指针方法的都有什么？”&lt;/p&gt;

&lt;p&gt;“总共有5种，”Guru坐下后说。“2个提供了简单指针所有权，2个共享所有权。”&lt;/p&gt;

&lt;p&gt;“共享所有权？哦，就是说像一个引用技术类咯？”&lt;/p&gt;

&lt;p&gt;“没错，智能指针是成对的，所以你有一个持有指向简单对象的指针的智能指针的时候，还有一个持有指向数组的指针。”她突然停住了，开始在白板上写下了：scoped_ptr, scoped_array, shared_ptr, shared_array。&lt;/p&gt;

&lt;p&gt;“这只有4个；你不是说有5个吗？”我质问。&lt;/p&gt;

&lt;p&gt;“还有一个是weak_ptr。它是shared_ptr的一个无所有权的观察者。我待会会说到这个。scoped_* 指针自动销毁超出作用区域的对象， 一种建议的用法就是实现出Pimpl-指向实现的，”她一口气说完，阻止了我另一次的双关语。&lt;/p&gt;

&lt;p&gt;“那么。。。他们都像auto_ptr，对吗？”&lt;/p&gt;

&lt;p&gt;“不全是。scoped_ptr和scoped_array是不可以拷贝的。”&lt;/p&gt;

&lt;p&gt;“不可以拷贝？那么，如果我有一个作为类的成员-”我拿起笔说，开始在白板上涂写：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;T&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;scoped_ptr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TImpl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;“-我如何实现拷贝和赋值呢？”&lt;/p&gt;

&lt;p&gt;“就跟使用auto_ptr是一样，”Guru回答，然后她写了：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;other&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TImpl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;other&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;other&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;scoped_ptr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TImpl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TImpl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;other&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;swap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;“好吧，”我一边消化这种用法一边懒洋洋的说，“那么，当我在用scoped_ptr时,我必须做和用auto_ptr一样的工作，是吗？那么为什么不直接用auto_ptr？”&lt;/p&gt;

&lt;p&gt;“因为使用auto_ptr会为了自动生成的函数编译，这并不是在做坏的事情。使用scoped_ptr使它更难发生意外无意的拷贝语义，因为如果你用编译器生成的版本的话，编译器会拒绝编译这个类。 还有，scoped_ptr不能被用在一个不完整的类型上。”我有点不知所措的看向Guru。她叹了口气，“比如这样，”她边说边在白板上写：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Simple&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Simple&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CreateSimple&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;auto_ptr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Simple&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;autoS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CreateSimple&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;scoped_ptr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Simple&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scopedS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CreateSimple&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;//...
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;“在这个函数里，Simple是一个不完整的类型。如果析构需要代价，那么通过auto_ptr或者scoped_ptr析构就会导致未定义的行为。当你实例化一个auto_ptr时，一些编译器会警告你，但不全是这样。另一面，scoped_ptr，如果实例化一个不完整的类型，在那之前就会产生一个编译错误。”&lt;/p&gt;

&lt;p&gt;“哦，对，当然如此，”我插了进来，以表明我明白这点。“那么我们总可以使用scoped_ptr来取代auto_ptr,是不是？”&lt;/p&gt;

&lt;p&gt;“对不起，错，”她说道，很失望。“auto_ptr仍然有自己的用处。跟auto_ptr不一样，scoped_ptr没有release()成员-也就是说它不能放弃指针的所有权。正因为如此，还因为scoped_ptr不能拷贝，当scoped_ptr出了范围的时候，它所管理的指针总会被删除。这是scoped_ptr不适合于那些你真正需要传递所有权的场合，比如工厂。&lt;/p&gt;

&lt;p&gt;“使用scoped_ptr把你的意图发给其他程序员。它告诉他们：‘这个指针不应该在当前范围外被拷贝。’另一方面，auto_ptr授权可以在创建指针的范围外传播所有权，但是在所有权传播完成后，它仍然还可以控制指针。当然，这在写异常-安全(exception-safe)的代码时很重要。”&lt;/p&gt;

&lt;p&gt;“阿，好吧，我知道了，”我咕哝着，“其他你提到的智能指针呢？”&lt;/p&gt;

&lt;p&gt;“scoped_array就像一个scoped_ptr，只是它管理一个对象数组而不是一个简单对象。scoped_array提供了一些稍为不同的访问函数。它并没有*和-&amp;gt;操作符，但是它有[]操作符。 我相信，”她总结说，“你需要的智能指针是一个scoped_array指针。”&lt;/p&gt;

&lt;p&gt;“也许吧，”我回答，“但是我想在我决定之前我还想对这些shared_*智能指针多了解一些。”&lt;/p&gt;

&lt;p&gt;“很好，我的学…徒，对不起，我失口了。”Guru羞涩的对我笑了笑。“是的，在决定之前对所有的选择都熟悉一下是一个好的工程实践（？）。”&lt;/p&gt;

&lt;p&gt;“shared_*智能指针呢，”她指了指白板上的shared_ptr和shared_array，“是很强大的工具。他们是引用计数的指针，他们能区分拥有者和观察者。比如，使用下面这个类T：”&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sharing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;shared_ptr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;firstShared&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;shared_ptr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secondShared&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;firstShared&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;//...
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;“2个shared_ptr对象都指向相同的T对象。shared_ptr的使用计数现在是2。由于shared_ptr被引用计数了，对象在最后一个shared_ptr出了作用范围-引用计数降到0-才会销毁。&lt;/p&gt;

&lt;p&gt;“shared_*指针非常有弹性，因此你可以使用他们来持有指向不完整类型的指针。”&lt;/p&gt;

&lt;p&gt;“我记得你刚说这样不好？”&lt;/p&gt;

&lt;p&gt;“如果不注意使用的话，这样确实并不好。但是只要你指定一个当持有的对象被销毁时候会调用的函数或者函数对象，shared_*指针就能用一个指向不完整类型的指针实例化出来。比如，如果我们修改了我们上面的小函数f：”&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DestroySimple&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Simple&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;shared_ptr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Simple&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sharedSFails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CreateSimple&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;shared_ptr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Simple&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sharedSSucceeds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CreateSimple&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DestroySimple&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;“第一个shared_ptr失败了，因为Simple是一个不完整的类型。第二个成功了，因为你已经无二义的告诉shared_ptr如何销毁这个指针。&lt;/p&gt;

&lt;p&gt;“因为shared_ 指针被设计用来拷贝的，他们都很适合用在标准容器中，包括关联容器。而且，在那些需要转换的仅有的情况下，还有特殊操作符定义出来，这些操作符创建一个新的shared_* 指针。 比如，如果我们在明显的公有继承体系中有类Base 和 Derived和一个无关联的类，我们可以这样：”&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;shared_ptr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Base&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sharedBase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Derived&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;shared_ptr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Derived&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sharedDer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shared_dynamic_cast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Derived&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sharedBase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;shared_ptr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Unrelated&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sharedDer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shared_dynamic_cast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Unrelated&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sharedBase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;try&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;shared_ptr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Unrelated&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;oops&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shared_polymorphic_cast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Unrelated&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sharedBase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bad_cast&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;c1&quot;&gt;//...
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;“还有一个shared_static_cast，是用在需要的极少的场合的，”Guru总结道。&lt;/p&gt;

&lt;p&gt;我研究了这个函数一会。“好吧，我看看我是否能遵循这些。第一个shared_dynamic_cast执行针对智能指针的dynamic_cast并且返回一个新的智能指针。如果dynamic_cast失败了，引用计数将会怎样？”&lt;/p&gt;

&lt;p&gt;Guru赞许的点点头。“那样的话，原始的计数将不受影响，新的shared_ptr将包含一个NULL指针。你也许能从try/catch子句推出来，shared_polymorphic_cast也会尝试对拥有的指针执行dynamic_cast。如果转换失败，就会抛出一个bad_cast异常。”&lt;/p&gt;

&lt;p&gt;“喔，”我暗暗叫绝，“这才是那个类。看起来真是为此而设计的。”&lt;/p&gt;

&lt;p&gt;“确实，”Guru也同意。“但是还有2件事要注意。引用计数很简单，但不能检测循环引用。还有，shared_ptr不能实现写方式的拷贝形式，因此如果要实现Pimpl，你必须多加小心。”&lt;/p&gt;

&lt;p&gt;我对它捉摸了半天，发现我很喜欢它。“嘿，”我想起来什么，又说，“那么你提到的weak_ptr呢？”&lt;/p&gt;

&lt;p&gt;“阿，是的。weak_ptr用于关联shared_ptr。weak_ptr是一个观察者，它并不影响共享对象的使用计数。weak_ptr的主要目的是用来允许shared_ptr参与到循环依赖中来-A持有B的引用，B同时也持有A的引用。我更喜欢把weak_ptr当作一个俱乐部中的关联成员-它没有投票权，但是可以参加俱乐部活动。”&lt;/p&gt;

&lt;p&gt;“呒…”我想了一会。“因为weak_ptr没有影响使用计数，当weak_ptr在用一个共享对象，此时如果俱乐部解散-换句话说，最后一个shared_ptr出了范围-会发生什么事呢？”&lt;/p&gt;

&lt;p&gt;“那样的话，weak_ptr管理的指针会被设置为NULL。讲到NULL，没有可以卸领（dereferencing）的操作符，比如*，-〉，[]，会在卸领之前检查一个NULL指针。因此，正如你所指出的在卸领之前原始指针非空，你还必须检查一个智能指针不为空。这个限制也适用于Boost库中所有的智能指针。”&lt;/p&gt;

&lt;p&gt;“老大，有太多的材料要记了，”我说着，看着我自己潦草的白板。&lt;/p&gt;

&lt;p&gt;“别担心，”Guru笑道，准备站起来走了。“我会发email给你Boost精简库的网址和一个小程序，它可以用来练习和示例各种指针。”当然，她对自己的话从不食言，几分钟后我收到了她的email。我揉了揉我的眼睛，因为我只看到：&lt;/p&gt;

&lt;p&gt;“我的小学徒，这儿是那个Boost文章的地址：&amp;lt;&lt;a href=&quot;www.boost.org/libs/smart_ptr/smart_ptr.htm&quot;&gt;www.boost.org/libs/smart_ptr/smart_ptr.htm&lt;/a&gt;&amp;gt;。看看它，再思考一下附件中关于谦虚的寓言。”&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>【翻译】 对话：究竟谁才是可移植的程序员？</title>
      <link>http://lilifeng.net/blogs/2005/11/19/Translation-Dialog-Portable-Design/</link>
      <pubDate>Sat, 19 Nov 2005 00:00:00 +0800</pubDate>
      <dc:creator>AcePeak</dc:creator>
      
      <category>原生</category>
      
      <category>C++</category>
      
      <category>OOP</category>
      
      <category>翻译</category>
      
      
      <category>Desktop</category>
      
      <guid isPermaLink="true">http://lilifeng.net/blogs/2005/11/19/Translation-Dialog-Portable-Design/</guid>
      <description>&lt;p&gt;“嗨，小鬼。”Jeannine走过来坐在我对面，我现在很邋遢。“听说消息了吗？”&lt;/p&gt;

&lt;p&gt;我扫了一眼时间确认一下，我并不打算再跟她聊半个小时以上。“嗨，二等公民。不，还不是。无论如何，他们仍在值班。你今天这么早就不值班了？”&lt;/p&gt;

&lt;p&gt;“Brzenkowski睡不着，所以他跟我换班了。我欠了他一次。”&lt;/p&gt;

&lt;p&gt;“他真体贴，”我又吃了一口午餐同意道，“我真的很喜欢他，他经常加班，而且并不会影响到其他人，他知道如何融入到这个环境中来。但愿我们在下个月的行星登陆（planetfall）以后还能与他一起工作。任何人都该如此专业。”&lt;/p&gt;

&lt;p&gt;“大多数人都是的，”Jeannine笑了。“你自己也不赖阿。”&lt;/p&gt;

&lt;p&gt;“实际上，”我咯咯笑了笑，“你让我想起了bob。你知道，我以前跟你提过他，他是我第一次工作遇到的另一个怪人。哥们，有时他做起事情来能让你把肺气炸。因此如果有人默不作声的工作，我们都叫他‘胡扯Bob’”&lt;/p&gt;

&lt;p&gt;我继续讲述我的故事…&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;一个声音在我耳边响起：“嘿，新来的，你破坏了结构。”&lt;/p&gt;

&lt;p&gt;我暗暗叹了口气，然后闭上了我的眼睛。我做这份工作已经快2个月了，我早就开始讨厌Guru叫我‘我的学徒’，但也不及这个没用的程序员Bob这样叫我-尤其是“新来的”。我数到10，然后直直的回答：“Bob，你在说什么？”&lt;/p&gt;

&lt;p&gt;“你的新代码check in了，”Bob温和地回复，吸了口他的拿铁咖啡（latté）。“我的编译器不能通过。它在抱怨一个迭代器已经定义过了。你破坏了结构，朋友。在头儿发现之前赶紧改掉把。”我缩了一下，我还不熟练，我知道破坏结构是很糟糕的事情。我甚至可以想象到Guru知道后的反应：记住，我的小学徒，团队合作的第二条戒律就是绝对不要破坏结构。&lt;/p&gt;

&lt;p&gt;“好吧，”我又叹了口气，这次乖了。“你在说代码的哪个部分？”&lt;/p&gt;

&lt;p&gt;Bob弯下身，打了几个键，弄出了下面的函数：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//OBJMAP是一种标准容器的typedef
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OBJMAP&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;theMap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OBJMAP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iterator&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;theMap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;iter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;theMap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;//do something
&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;//other code in here
&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OBJMAP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iterator&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;theMap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;iter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;theMap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;//do something else
&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;“这里有错误吗？”我问道。“我在Stroustrup里把它check out了，迭代器应该在每一个循环结束时超出了范围。”&lt;/p&gt;

&lt;p&gt;“是啊，是要这样的，但我的编译器不支持。”Bob回答说，剔着自己的牙齿。“它抱怨说iter已经定义了。很容易的更改吧，仅仅只是去掉iter的第二次定义。实际上，当我check in 它的时候，那就是我的代码起始如何读进去的。然后你的代码运行的时候破坏了结构。”&lt;/p&gt;

&lt;p&gt;我终于明白了。由于我仍在在试用期，我不得不表现得很谦逊。“Bob，”我心有成竹，“这是必须在我们面对的所有平台上面编译的。我把第二个定义放上是因为我的编译器抱怨第二个迭代器没有定义，根据Stroustrup，他应该能工作。”&lt;/p&gt;

&lt;p&gt;Bob似乎有些不耐烦。“我不在乎你的新编译器。我用我的很多年了，它从没有让我失望过。你的代码不能工作。”&lt;/p&gt;

&lt;p&gt;“Bob，代码是正确的。在我这里编译没问题。”&lt;/p&gt;

&lt;p&gt;“你的是个烂编译器。不是我的错，我在做我的工作，我不在乎别的编译器。”Bob又耸了耸肩，为自己辩护道。&lt;/p&gt;

&lt;p&gt;一个响亮的声音在我们身后响起：“我感觉你有些害怕阿。”&lt;/p&gt;

&lt;p&gt;我吓了一跳；Bob也好不到哪里，拿铁咖啡还在乱晃。Guru无声的在我们身后定住，手里还是拿着一本厚厚的书。&lt;/p&gt;

&lt;p&gt;Guru慢慢的摇了摇头，皱了皱眉毛。“害怕导致愤怒。”她继续说道。&lt;/p&gt;

&lt;p&gt;“哼，住口。我不担心别的编译器！”Bob激动的说，吸着溅落在他手上的奶咖啡。“我一点也不在乎它们。”&lt;/p&gt;

&lt;p&gt;“愤怒导致仇恨。仇恨…导致苦难。”&lt;/p&gt;

&lt;p&gt;“我是在受苦，没错，”我大气不敢喘，小声地嘀咕了声。“我只是想写出可移植的代码。-好吧，Bob，”我认输了，渴望摆脱掉他，“我会改掉它让它好好工作的，好吗？”&lt;/p&gt;

&lt;p&gt;“就像我说的，新来的，去掉第二个声明就可以了。”他又看了看我，然后转过身走了。&lt;/p&gt;

&lt;p&gt;Wendy靠着下一个隔间，看着他走了。“那么这次Bahb又在抱怨什么呢？”她问我。然后Guru靠近站了站，合上了她那本厚书，我给Wendy看了那段代码，解释了一下Bob要做的。“真是典型，”Wendy有点生气，“在实现一个可移植的方案和依赖于他的编译器的方案之间选择的话，他会毫不犹豫选择后者。就像你说的，他的代码不具有可移植性。你知道，这样的话，你就真的不需要在每个循环声明一个新的迭代器。只在第一个循环之前声明它们一次，它们就可以在两种编译器下都良好工作。”她快速改变了一下那段代码：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// OBJMAP is a typedef for a standard container
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OBJMAP&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;theMap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;OBJMAP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iterator&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;theMap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;iter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;theMap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
         &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iter&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// do something
&lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// other code in here
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;theMap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;iter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;theMap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
         &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iter&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// do something else
&lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Guru检查了一下自己的书写，扫了一眼这个方案。“非常聪明，孩子。”Wendy轻挑眉梢：她常常这样。“而且如你所说，这不是惟一的方案。另一个优雅的可能是干脆避免迭代器的声明，也许提高了可读性，通过在可能的地方使用for_each和模板表达式。我的学徒。”Guru继续对我说，“但是了解，理解和遵守神圣标准是很重要的，了解你的工具甚至那些不正常的也很重要。Bob在使用的那个编译器不服从for初始化变量的范围。他不在乎可移植的代码，只在乎自己的编译器。”&lt;/p&gt;

&lt;p&gt;“嗯…”我说，摸了摸自己的下巴。“写可移植的代码比我想的要困难，所以，在我们可以利用我原先的代码前，不得不等着Bob的编译器出新的版本了。”&lt;/p&gt;

&lt;p&gt;Guru注视着自己前方好一会。“我不是先知，我看不到未来。虽然如此，我还是能看到：可移植的发布绝对不会消失。编译器不都是遵守标准的-只是在级别上保持一致罢了。一些开发商甚至已经在他们的编译器里摒弃了过时的行为，而并不是一味迎合旧代码。&lt;/p&gt;

&lt;p&gt;“而且，一些编译器会产生出新的特性来扩展标准。有一些是很好的，还有一些会使语言趋于陈腐，没有弹性，最终会亡于停步不前。只适应一个平台的程序可能从新特性中获益。在可移植代码中使用那些非标准的特性有时是灾难性的-有些见习生，比如你，可能不注意他们的不可移植性而滥用它们。不要只钟爱于某一个编译器而害怕其他的。害怕就要导致不能移植。”&lt;/p&gt;

&lt;p&gt;她停了一下，然后转身走了。随着她的离开，她绵绵的声线飘入我们的耳朵，“但愿我能记起那位圣人的名字，他曾经说过，‘理论和实践的区别总是在实践中更明显…’”&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;“Bob并不是一个融入大局的家伙，”我总结道。&lt;/p&gt;

&lt;p&gt;“在Ganymede号上没有人是这样的，”Jeannine也同意。“这并不是一个可以原谅的地方。嘿，你得走了。Anderson在等你。”&lt;/p&gt;

&lt;p&gt;我看了看时间站了起来。“职责呼叫。在第三次调查后你和Laura在做什么？”我问，因为我发现了那儿，当然，还有比谈论Bob更舒适的事情，比如Guru…&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
